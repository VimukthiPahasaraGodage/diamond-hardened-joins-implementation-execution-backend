
------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS uncredited_voiced_character, MIN(t.title) AS russian_movie FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t WHERE ci.note LIKE '%(voice)%' AND ci.note LIKE '%(uncredited)%' AND cn.country_code = '[ru]' AND rt.role = 'actor' AND t.production_year > 2005 AND t.id = mc.movie_id AND t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND chn.id = ci.person_role_id AND rt.id = ci.role_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `UNCREDITED_VOICED_CHARACTER`, MIN(`T`.`TITLE`) AS `RUSSIAN_MOVIE`
FROM `CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`MOVIE_COMPANIES` AS `MC`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` LIKE '%(voice)%' AND `CI`.`NOTE` LIKE '%(uncredited)%' AND `CN`.`COUNTRY_CODE` = '[ru]' AND `RT`.`ROLE` = 'actor' AND `T`.`PRODUCTION_YEAR` > 2005 AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `UNCREDITED_VOICED_CHARACTER`, MIN(`T`.`TITLE`) AS `RUSSIAN_MOVIE`
FROM `CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`MOVIE_COMPANIES` AS `MC`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` LIKE '%(voice)%' AND `CI`.`note` LIKE '%(uncredited)%' AND `CN`.`country_code` = '[ru]' AND `RT`.`role` = 'actor' AND `T`.`production_year` > 2005 AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `RT`.`id` = `CI`.`role_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], UNCREDITED_VOICED_CHARACTER=[MIN($0)], RUSSIAN_MOVIE=[MIN($1)])
  LogicalProject(name=[$1], title=[$31])
    LogicalFilter(condition=[AND(LIKE($11, '%(voice)%'), LIKE($11, '%(uncredited)%'), =($16, '[ru]'), =($29, 'actor'), >($34, 2005), =($30, $24), =($30, $9), =($9, $24), =($0, $10), =($28, $13), =($14, $25), =($21, $26))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[company_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], UNCREDITED_VOICED_CHARACTER=[MIN($0)], RUSSIAN_MOVIE=[MIN($1)]), id = 5589
  BindableProject(name=[$1], title=[$31]), id = 5588
    BindableJoin(condition=[=($24, $30)], joinType=[inner]), id = 5587
      BindableJoin(condition=[=($28, $13)], joinType=[inner]), id = 5585
        BindableProject(id1=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id00=[$14], person_id=[$15], movie_id0=[$16], person_role_id=[$17], note0=[$18], nr_order=[$19], role_id=[$20], id10=[$21], name0=[$22], country_code=[$23], imdb_id0=[$24], name_pcode_nf0=[$25], name_pcode_sf=[$26], md5sum0=[$27], id0=[$5], kind=[$6], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 5583
          BindableJoin(condition=[AND(=($16, $1), =($21, $2))], joinType=[inner]), id = 5582
            BindableJoin(condition=[=($5, $3)], joinType=[inner]), id = 5577
              BindableTableScan(table=[[movie_companies]]), id = 101
              BindableTableScan(table=[[company_type]]), id = 89
            BindableJoin(condition=[true], joinType=[inner]), id = 5581
              BindableJoin(condition=[=($0, $10)], joinType=[inner]), id = 5579
                BindableTableScan(table=[[char_name]]), id = 61
                BindableFilter(condition=[AND(LIKE($4, '%(voice)%'), LIKE($4, '%(uncredited)%'))]), id = 5578
                  BindableTableScan(table=[[cast_info]]), id = 65
              BindableFilter(condition=[=($2, '[ru]')]), id = 5580
                BindableTableScan(table=[[company_name]]), id = 77
        BindableFilter(condition=[=($1, 'actor')]), id = 5584
          BindableTableScan(table=[[role_type]]), id = 113
      BindableFilter(condition=[>($4, 2005)]), id = 5586
        BindableTableScan(table=[[title]]), id = 125


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS character_name, MIN(t.title) AS russian_mov_with_actor_producer FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t WHERE ci.note LIKE '%(producer)%' AND cn.country_code = '[ru]' AND rt.role = 'actor' AND t.production_year > 2010 AND t.id = mc.movie_id AND t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND chn.id = ci.person_role_id AND rt.id = ci.role_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`T`.`TITLE`) AS `RUSSIAN_MOV_WITH_ACTOR_PRODUCER`
FROM `CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`MOVIE_COMPANIES` AS `MC`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` LIKE '%(producer)%' AND `CN`.`COUNTRY_CODE` = '[ru]' AND `RT`.`ROLE` = 'actor' AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`T`.`TITLE`) AS `RUSSIAN_MOV_WITH_ACTOR_PRODUCER`
FROM `CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`MOVIE_COMPANIES` AS `MC`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` LIKE '%(producer)%' AND `CN`.`country_code` = '[ru]' AND `RT`.`role` = 'actor' AND `T`.`production_year` > 2010 AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `RT`.`id` = `CI`.`role_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RUSSIAN_MOV_WITH_ACTOR_PRODUCER=[MIN($1)])
  LogicalProject(name=[$1], title=[$31])
    LogicalFilter(condition=[AND(LIKE($11, '%(producer)%'), =($16, '[ru]'), =($29, 'actor'), >($34, 2010), =($30, $24), =($30, $9), =($9, $24), =($0, $10), =($28, $13), =($14, $25), =($21, $26))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[company_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RUSSIAN_MOV_WITH_ACTOR_PRODUCER=[MIN($1)]), id = 11179
  BindableProject(name=[$1], title=[$31]), id = 11178
    BindableJoin(condition=[=($24, $30)], joinType=[inner]), id = 11177
      BindableJoin(condition=[=($28, $13)], joinType=[inner]), id = 11175
        BindableProject(id1=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id00=[$14], person_id=[$15], movie_id0=[$16], person_role_id=[$17], note0=[$18], nr_order=[$19], role_id=[$20], id10=[$21], name0=[$22], country_code=[$23], imdb_id0=[$24], name_pcode_nf0=[$25], name_pcode_sf=[$26], md5sum0=[$27], id0=[$5], kind=[$6], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 11173
          BindableJoin(condition=[AND(=($16, $1), =($21, $2))], joinType=[inner]), id = 11172
            BindableJoin(condition=[=($5, $3)], joinType=[inner]), id = 11167
              BindableTableScan(table=[[movie_companies]]), id = 5691
              BindableTableScan(table=[[company_type]]), id = 5679
            BindableJoin(condition=[true], joinType=[inner]), id = 11171
              BindableJoin(condition=[=($0, $10)], joinType=[inner]), id = 11169
                BindableTableScan(table=[[char_name]]), id = 5651
                BindableFilter(condition=[LIKE($4, '%(producer)%')]), id = 11168
                  BindableTableScan(table=[[cast_info]]), id = 5655
              BindableFilter(condition=[=($2, '[ru]')]), id = 11170
                BindableTableScan(table=[[company_name]]), id = 5667
        BindableFilter(condition=[=($1, 'actor')]), id = 11174
          BindableTableScan(table=[[role_type]]), id = 5703
      BindableFilter(condition=[>($4, 2010)]), id = 11176
        BindableTableScan(table=[[title]]), id = 5715


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS character_name, MIN(t.title) AS movie_with_american_producer FROM char_name AS chn, cast_info AS ci, company_name AS cn, company_type AS ct, movie_companies AS mc, role_type AS rt, title AS t WHERE ci.note LIKE '%(producer)%' AND cn.country_code = '[us]' AND t.production_year > 1990 AND t.id = mc.movie_id AND t.id = ci.movie_id AND ci.movie_id = mc.movie_id AND chn.id = ci.person_role_id AND rt.id = ci.role_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`T`.`TITLE`) AS `MOVIE_WITH_AMERICAN_PRODUCER`
FROM `CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`MOVIE_COMPANIES` AS `MC`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` LIKE '%(producer)%' AND `CN`.`COUNTRY_CODE` = '[us]' AND `T`.`PRODUCTION_YEAR` > 1990 AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`T`.`TITLE`) AS `MOVIE_WITH_AMERICAN_PRODUCER`
FROM `CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`MOVIE_COMPANIES` AS `MC`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` LIKE '%(producer)%' AND `CN`.`country_code` = '[us]' AND `T`.`production_year` > 1990 AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `RT`.`id` = `CI`.`role_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], MOVIE_WITH_AMERICAN_PRODUCER=[MIN($1)])
  LogicalProject(name=[$1], title=[$31])
    LogicalFilter(condition=[AND(LIKE($11, '%(producer)%'), =($16, '[us]'), >($34, 1990), =($30, $24), =($30, $9), =($9, $24), =($0, $10), =($28, $13), =($14, $25), =($21, $26))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[company_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], MOVIE_WITH_AMERICAN_PRODUCER=[MIN($1)]), id = 16726
  BindableProject(name=[$1], title=[$31]), id = 16725
    BindableJoin(condition=[=($24, $30)], joinType=[inner]), id = 16724
      BindableJoin(condition=[=($28, $13)], joinType=[inner]), id = 16722
        BindableProject(id1=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id00=[$14], person_id=[$15], movie_id0=[$16], person_role_id=[$17], note0=[$18], nr_order=[$19], role_id=[$20], id10=[$21], name0=[$22], country_code=[$23], imdb_id0=[$24], name_pcode_nf0=[$25], name_pcode_sf=[$26], md5sum0=[$27], id0=[$5], kind=[$6], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 16721
          BindableJoin(condition=[AND(=($16, $1), =($21, $2))], joinType=[inner]), id = 16720
            BindableJoin(condition=[=($5, $3)], joinType=[inner]), id = 16715
              BindableTableScan(table=[[movie_companies]]), id = 11281
              BindableTableScan(table=[[company_type]]), id = 11269
            BindableJoin(condition=[true], joinType=[inner]), id = 16719
              BindableJoin(condition=[=($0, $10)], joinType=[inner]), id = 16717
                BindableTableScan(table=[[char_name]]), id = 11241
                BindableFilter(condition=[LIKE($4, '%(producer)%')]), id = 16716
                  BindableTableScan(table=[[cast_info]]), id = 11245
              BindableFilter(condition=[=($2, '[us]')]), id = 16718
                BindableTableScan(table=[[company_name]]), id = 11257
        BindableTableScan(table=[[role_type]]), id = 11293
      BindableFilter(condition=[>($4, 1990)]), id = 16723
        BindableTableScan(table=[[title]]), id = 11305


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS from_company, MIN(lt.link) AS movie_link_type, MIN(t.title) AS non_polish_sequel_movie FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind = 'production companies' AND k.keyword = 'sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND t.production_year BETWEEN 1950 AND 2000 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`LT`.`LINK`) AS `MOVIE_LINK_TYPE`, MIN(`T`.`TITLE`) AS `NON_POLISH_SEQUEL_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1950 AND 2000 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`LT`.`LINK`) AS `MOVIE_LINK_TYPE`, MIN(`T`.`TITLE`) AS `NON_POLISH_SEQUEL_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `T`.`production_year` BETWEEN ASYMMETRIC 1950 AND 2000 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FROM_COMPANY=[MIN($0)], MOVIE_LINK_TYPE=[MIN($1)], NON_POLISH_SEQUEL_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], link=[$13], title=[$27])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), OR(LIKE($1, '%Film%'), LIKE($1, '%Warner%')), =($8, 'production companies'), =($10, 'sequel'), LIKE($13, '%follow%'), IS NULL($18), >=($30, 1950), <=($30, 2000), =($12, $25), =($23, $26), =($26, $20), =($21, $9), =($26, $15), =($17, $7), =($16, $0), =($23, $20), =($23, $15), =($20, $15))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FROM_COMPANY=[MIN($0)], MOVIE_LINK_TYPE=[MIN($1)], NON_POLISH_SEQUEL_MOVIE=[MIN($2)]), id = 17028
  BindableProject(name=[$1], link=[$13], title=[$27]), id = 17027
    BindableJoin(condition=[=($23, $26)], joinType=[inner]), id = 17026
      BindableValues(tuples=[[]]), id = 16975
      BindableFilter(condition=[SEARCH($4, Sarg[[1950..2000]])]), id = 17025
        BindableTableScan(table=[[title]]), id = 16871


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS from_company, MIN(lt.link) AS movie_link_type, MIN(t.title) AS sequel_movie FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind = 'production companies' AND k.keyword = 'sequel' AND lt.link LIKE '%follows%' AND mc.note IS NULL AND t.production_year = 1998 AND t.title LIKE '%Money%' AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`LT`.`LINK`) AS `MOVIE_LINK_TYPE`, MIN(`T`.`TITLE`) AS `SEQUEL_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follows%' AND `MC`.`NOTE` IS NULL AND `T`.`PRODUCTION_YEAR` = 1998 AND `T`.`TITLE` LIKE '%Money%' AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`LT`.`LINK`) AS `MOVIE_LINK_TYPE`, MIN(`T`.`TITLE`) AS `SEQUEL_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follows%' AND `MC`.`note` IS NULL AND `T`.`production_year` = 1998 AND `T`.`title` LIKE '%Money%' AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FROM_COMPANY=[MIN($0)], MOVIE_LINK_TYPE=[MIN($1)], SEQUEL_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], link=[$13], title=[$27])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), OR(LIKE($1, '%Film%'), LIKE($1, '%Warner%')), =($8, 'production companies'), =($10, 'sequel'), LIKE($13, '%follows%'), IS NULL($18), =($30, 1998), LIKE($27, '%Money%'), =($12, $25), =($23, $26), =($26, $20), =($21, $9), =($26, $15), =($17, $7), =($16, $0), =($23, $20), =($23, $15), =($20, $15))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FROM_COMPANY=[MIN($0)], MOVIE_LINK_TYPE=[MIN($1)], SEQUEL_MOVIE=[MIN($2)]), id = 17330
  BindableProject(name=[$1], link=[$13], title=[$27]), id = 17329
    BindableJoin(condition=[=($23, $26)], joinType=[inner]), id = 17328
      BindableValues(tuples=[[]]), id = 17277
      BindableFilter(condition=[AND(=($4, 1998), LIKE($1, '%Money%'))]), id = 17327
        BindableTableScan(table=[[title]]), id = 17173


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS from_company, MIN(mc.note) AS production_note, MIN(t.title) AS movie_based_on_book FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND (cn.name LIKE '20th Century Fox%' OR cn.name LIKE 'Twentieth Century Fox%') AND NOT ct.kind = 'production companies' AND ct.kind IS NOT NULL AND k.keyword IN ('sequel', 'revenge', 'based-on-novel') AND mc.note IS NOT NULL AND t.production_year > 1950 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_BASED_ON_BOOK`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '20th Century Fox%' OR `CN`.`NAME` LIKE 'Twentieth Century Fox%') AND NOT `CT`.`KIND` = 'production companies' AND `CT`.`KIND` IS NOT NULL AND `K`.`KEYWORD` IN ('sequel', 'revenge', 'based-on-novel') AND `MC`.`NOTE` IS NOT NULL AND `T`.`PRODUCTION_YEAR` > 1950 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_BASED_ON_BOOK`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '20th Century Fox%' OR `CN`.`name` LIKE 'Twentieth Century Fox%') AND NOT `CT`.`kind` = 'production companies' AND `CT`.`kind` IS NOT NULL AND `K`.`keyword` IN ('sequel', 'revenge', 'based-on-novel') AND `MC`.`note` IS NOT NULL AND `T`.`production_year` > 1950 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FROM_COMPANY=[MIN($0)], PRODUCTION_NOTE=[MIN($1)], MOVIE_BASED_ON_BOOK=[MIN($2)])
  LogicalProject(name=[$1], note=[$18], title=[$27])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), OR(LIKE($1, '20th Century Fox%'), LIKE($1, 'Twentieth Century Fox%')), NOT(=($8, 'production companies')), IS NOT NULL($8), OR(=($10, 'sequel'), =($10, 'revenge'), =($10, 'based-on-novel')), IS NOT NULL($18), >($30, 1950), =($12, $25), =($23, $26), =($26, $20), =($21, $9), =($26, $15), =($17, $7), =($16, $0), =($23, $20), =($23, $15), =($20, $15))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FROM_COMPANY=[MIN($0)], PRODUCTION_NOTE=[MIN($1)], MOVIE_BASED_ON_BOOK=[MIN($2)]), id = 74620
  BindableProject(name=[$1], note=[$18], title=[$27]), id = 74619
    BindableJoin(condition=[=($23, $26)], joinType=[inner]), id = 74618
      BindableJoin(condition=[AND(=($12, $25), =($20, $23))], joinType=[inner]), id = 74616
        BindableJoin(condition=[AND(=($21, $9), =($20, $15))], joinType=[inner]), id = 74615
          BindableJoin(condition=[AND(=($17, $7), =($16, $0))], joinType=[inner]), id = 74614
            BindableJoin(condition=[true], joinType=[inner]), id = 74613
              BindableJoin(condition=[true], joinType=[inner]), id = 74612
                BindableJoin(condition=[true], joinType=[inner]), id = 74610
                  BindableFilter(condition=[AND(<>($2, '[pl]'), OR(LIKE($1, '20th Century Fox%'), LIKE($1, 'Twentieth Century Fox%')))]), id = 74608
                    BindableTableScan(table=[[company_name]]), id = 17399
                  BindableFilter(condition=[<>($1, 'production companies')]), id = 74609
                    BindableTableScan(table=[[company_type]]), id = 17403
                BindableFilter(condition=[SEARCH($1, Sarg['based-on-novel':VARCHAR, 'revenge':VARCHAR, 'sequel':VARCHAR]:VARCHAR)]), id = 74611
                  BindableTableScan(table=[[keyword]]), id = 17415
              BindableTableScan(table=[[link_type]]), id = 17427
            BindableTableScan(table=[[movie_companies]]), id = 17439
          BindableTableScan(table=[[movie_keyword]]), id = 17451
        BindableTableScan(table=[[movie_link]]), id = 17463
      BindableFilter(condition=[>($4, 1950)]), id = 74617
        BindableTableScan(table=[[title]]), id = 17475


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS from_company, MIN(mc.note) AS production_note, MIN(t.title) AS movie_based_on_book FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND NOT ct.kind = 'production companies' AND ct.kind IS NOT NULL AND k.keyword IN ('sequel', 'revenge', 'based-on-novel') AND mc.note IS NOT NULL AND t.production_year > 1950 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_BASED_ON_BOOK`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND NOT `CT`.`KIND` = 'production companies' AND `CT`.`KIND` IS NOT NULL AND `K`.`KEYWORD` IN ('sequel', 'revenge', 'based-on-novel') AND `MC`.`NOTE` IS NOT NULL AND `T`.`PRODUCTION_YEAR` > 1950 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `FROM_COMPANY`, MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_BASED_ON_BOOK`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND NOT `CT`.`kind` = 'production companies' AND `CT`.`kind` IS NOT NULL AND `K`.`keyword` IN ('sequel', 'revenge', 'based-on-novel') AND `MC`.`note` IS NOT NULL AND `T`.`production_year` > 1950 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FROM_COMPANY=[MIN($0)], PRODUCTION_NOTE=[MIN($1)], MOVIE_BASED_ON_BOOK=[MIN($2)])
  LogicalProject(name=[$1], note=[$18], title=[$27])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), NOT(=($8, 'production companies')), IS NOT NULL($8), OR(=($10, 'sequel'), =($10, 'revenge'), =($10, 'based-on-novel')), IS NOT NULL($18), >($30, 1950), =($12, $25), =($23, $26), =($26, $20), =($21, $9), =($26, $15), =($17, $7), =($16, $0), =($23, $20), =($23, $15), =($20, $15))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FROM_COMPANY=[MIN($0)], PRODUCTION_NOTE=[MIN($1)], MOVIE_BASED_ON_BOOK=[MIN($2)]), id = 131910
  BindableProject(name=[$1], note=[$18], title=[$27]), id = 131909
    BindableJoin(condition=[=($23, $26)], joinType=[inner]), id = 131908
      BindableJoin(condition=[AND(=($12, $25), =($20, $23))], joinType=[inner]), id = 131906
        BindableJoin(condition=[AND(=($21, $9), =($20, $15))], joinType=[inner]), id = 131905
          BindableJoin(condition=[AND(=($17, $7), =($16, $0))], joinType=[inner]), id = 131904
            BindableJoin(condition=[true], joinType=[inner]), id = 131903
              BindableJoin(condition=[true], joinType=[inner]), id = 131902
                BindableJoin(condition=[true], joinType=[inner]), id = 131900
                  BindableFilter(condition=[<>($2, '[pl]')]), id = 131898
                    BindableTableScan(table=[[company_name]]), id = 74689
                  BindableFilter(condition=[<>($1, 'production companies')]), id = 131899
                    BindableTableScan(table=[[company_type]]), id = 74693
                BindableFilter(condition=[SEARCH($1, Sarg['based-on-novel':VARCHAR, 'revenge':VARCHAR, 'sequel':VARCHAR]:VARCHAR)]), id = 131901
                  BindableTableScan(table=[[keyword]]), id = 74705
              BindableTableScan(table=[[link_type]]), id = 74717
            BindableTableScan(table=[[movie_companies]]), id = 74729
          BindableTableScan(table=[[movie_keyword]]), id = 74741
        BindableTableScan(table=[[movie_link]]), id = 74753
      BindableFilter(condition=[>($4, 1950)]), id = 131907
        BindableTableScan(table=[[title]]), id = 74765


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS drama_horror_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t WHERE cn.country_code = '[us]' AND ct.kind = 'production companies' AND it1.info = 'genres' AND it2.info = 'rating' AND mi.info IN ('Drama', 'Horror') AND mi_idx.info > '8.0' AND t.production_year BETWEEN 2005 AND 2008 AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND mi.info_type_id = it1.id AND mi_idx.info_type_id = it2.id AND t.id = mc.movie_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `DRAMA_HORROR_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CT`.`KIND` = 'production companies' AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'rating' AND `MI`.`INFO` IN ('Drama', 'Horror') AND `MI_IDX`.`INFO` > '8.0' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2005 AND 2008 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`INFO_TYPE_ID` = `IT1`.`ID` AND `MI_IDX`.`INFO_TYPE_ID` = `IT2`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `DRAMA_HORROR_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CT`.`kind` = 'production companies' AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'rating' AND `MI`.`info` IN ('Drama', 'Horror') AND `MI_IDX`.`info` > '8.0' AND `T`.`production_year` BETWEEN ASYMMETRIC 2005 AND 2008 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MI`.`info_type_id` = `IT1`.`id` AND `MI_IDX`.`info_type_id` = `IT2`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], DRAMA_HORROR_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$26], title=[$29])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($8, 'production companies'), =($10, 'genres'), =($12, 'rating'), OR(=($21, 'Drama'), =($21, 'Horror')), >($26, '8.0'), >=($32, 2005), <=($32, 2008), =($28, $19), =($28, $24), =($20, $9), =($25, $11), =($28, $14), =($7, $16), =($0, $15), =($14, $19), =($14, $24), =($19, $24))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], DRAMA_HORROR_MOVIE=[MIN($2)]), id = 145948
  BindableProject(name=[$1], info2=[$26], title=[$29]), id = 145947
    BindableJoin(condition=[=($19, $28)], joinType=[inner]), id = 145946
      BindableJoin(condition=[AND(=($11, $25), =($14, $24))], joinType=[inner]), id = 145944
        BindableProject(id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id00=[$17], kind=[$18], id10=[$19], info0=[$20], id2=[$21], info00=[$22], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 145942
          BindableJoin(condition=[AND(=($2, $19), =($17, $8), =($10, $7))], joinType=[inner]), id = 145941
            BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 145933
              BindableFilter(condition=[SEARCH($3, Sarg['Drama':VARCHAR, 'Horror':VARCHAR]:VARCHAR)]), id = 145932
                BindableTableScan(table=[[movie_info]]), id = 132026
              BindableTableScan(table=[[movie_companies]]), id = 132014
            BindableJoin(condition=[true], joinType=[inner]), id = 145940
              BindableJoin(condition=[true], joinType=[inner]), id = 145938
                BindableJoin(condition=[true], joinType=[inner]), id = 145936
                  BindableFilter(condition=[=($2, '[us]')]), id = 145934
                    BindableTableScan(table=[[company_name]]), id = 131978
                  BindableFilter(condition=[=($1, 'production companies')]), id = 145935
                    BindableTableScan(table=[[company_type]]), id = 131982
                BindableFilter(condition=[=($1, 'genres')]), id = 145937
                  BindableTableScan(table=[[info_type]]), id = 131994
              BindableFilter(condition=[=($1, 'rating')]), id = 145939
                BindableTableScan(table=[[info_type]]), id = 131994
        BindableFilter(condition=[>($3, '8.0')]), id = 145943
          BindableTableScan(table=[[movie_info_idx]]), id = 132038
      BindableFilter(condition=[SEARCH($4, Sarg[[2005..2008]])]), id = 145945
        BindableTableScan(table=[[title]]), id = 132050


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS budget, MIN(t.title) AS unsuccsessful_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t WHERE cn.country_code ='[us]' AND ct.kind IS NOT NULL AND (ct.kind ='production companies' OR ct.kind = 'distributors') AND it1.info ='budget' AND it2.info ='bottom 10 rank' AND t.production_year >2000 AND (t.title LIKE 'Birdemic%' OR t.title LIKE '%Movie%') AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND mi.info_type_id = it1.id AND mi_idx.info_type_id = it2.id AND t.id = mc.movie_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `BUDGET`, MIN(`T`.`TITLE`) AS `UNSUCCSESSFUL_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CT`.`KIND` IS NOT NULL AND (`CT`.`KIND` = 'production companies' OR `CT`.`KIND` = 'distributors') AND `IT1`.`INFO` = 'budget' AND `IT2`.`INFO` = 'bottom 10 rank' AND `T`.`PRODUCTION_YEAR` > 2000 AND (`T`.`TITLE` LIKE 'Birdemic%' OR `T`.`TITLE` LIKE '%Movie%') AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`INFO_TYPE_ID` = `IT1`.`ID` AND `MI_IDX`.`INFO_TYPE_ID` = `IT2`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `BUDGET`, MIN(`T`.`TITLE`) AS `UNSUCCSESSFUL_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CT`.`kind` IS NOT NULL AND (`CT`.`kind` = 'production companies' OR `CT`.`kind` = 'distributors') AND `IT1`.`info` = 'budget' AND `IT2`.`info` = 'bottom 10 rank' AND `T`.`production_year` > 2000 AND (`T`.`title` LIKE 'Birdemic%' OR `T`.`title` LIKE '%Movie%') AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MI`.`info_type_id` = `IT1`.`id` AND `MI_IDX`.`info_type_id` = `IT2`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], BUDGET=[MIN($0)], UNSUCCSESSFUL_MOVIE=[MIN($1)])
  LogicalProject(info1=[$21], title=[$29])
    LogicalFilter(condition=[AND(=($2, '[us]'), IS NOT NULL($8), OR(=($8, 'production companies'), =($8, 'distributors')), =($10, 'budget'), =($12, 'bottom 10 rank'), >($32, 2000), OR(LIKE($29, 'Birdemic%'), LIKE($29, '%Movie%')), =($28, $19), =($28, $24), =($20, $9), =($25, $11), =($28, $14), =($7, $16), =($0, $15), =($14, $19), =($14, $24), =($19, $24))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], BUDGET=[MIN($0)], UNSUCCSESSFUL_MOVIE=[MIN($1)]), id = 159767
  BindableProject(info1=[$21], title=[$29]), id = 159766
    BindableJoin(condition=[=($19, $28)], joinType=[inner]), id = 159765
      BindableJoin(condition=[AND(=($11, $25), =($14, $24))], joinType=[inner]), id = 159763
        BindableJoin(condition=[AND(=($20, $9), =($14, $19))], joinType=[inner]), id = 159762
          BindableJoin(condition=[AND(=($7, $16), =($0, $15))], joinType=[inner]), id = 159761
            BindableJoin(condition=[true], joinType=[inner]), id = 159760
              BindableJoin(condition=[true], joinType=[inner]), id = 159758
                BindableJoin(condition=[true], joinType=[inner]), id = 159756
                  BindableFilter(condition=[=($2, '[us]')]), id = 159754
                    BindableTableScan(table=[[company_name]]), id = 146016
                  BindableFilter(condition=[SEARCH($1, Sarg['distributors':VARCHAR, 'production companies':VARCHAR]:VARCHAR)]), id = 159755
                    BindableTableScan(table=[[company_type]]), id = 146020
                BindableFilter(condition=[=($1, 'budget')]), id = 159757
                  BindableTableScan(table=[[info_type]]), id = 146032
              BindableFilter(condition=[=($1, 'bottom 10 rank')]), id = 159759
                BindableTableScan(table=[[info_type]]), id = 146032
            BindableTableScan(table=[[movie_companies]]), id = 146052
          BindableTableScan(table=[[movie_info]]), id = 146064
        BindableTableScan(table=[[movie_info_idx]]), id = 146076
      BindableFilter(condition=[AND(>($4, 2000), OR(LIKE($1, 'Birdemic%'), LIKE($1, '%Movie%')))]), id = 159764
        BindableTableScan(table=[[title]]), id = 146088


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS mainstream_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, title AS t WHERE cn.country_code = '[us]' AND ct.kind = 'production companies' AND it1.info = 'genres' AND it2.info = 'rating' AND mi.info IN ('Drama', 'Horror', 'Western', 'Family') AND mi_idx.info > '7.0' AND t.production_year BETWEEN 2000 AND 2010 AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND mi.info_type_id = it1.id AND mi_idx.info_type_id = it2.id AND t.id = mc.movie_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MAINSTREAM_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CT`.`KIND` = 'production companies' AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'rating' AND `MI`.`INFO` IN ('Drama', 'Horror', 'Western', 'Family') AND `MI_IDX`.`INFO` > '7.0' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2000 AND 2010 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`INFO_TYPE_ID` = `IT1`.`ID` AND `MI_IDX`.`INFO_TYPE_ID` = `IT2`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MAINSTREAM_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CT`.`kind` = 'production companies' AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'rating' AND `MI`.`info` IN ('Drama', 'Horror', 'Western', 'Family') AND `MI_IDX`.`info` > '7.0' AND `T`.`production_year` BETWEEN ASYMMETRIC 2000 AND 2010 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MI`.`info_type_id` = `IT1`.`id` AND `MI_IDX`.`info_type_id` = `IT2`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], MAINSTREAM_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$26], title=[$29])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($8, 'production companies'), =($10, 'genres'), =($12, 'rating'), OR(=($21, 'Drama'), =($21, 'Horror'), =($21, 'Western'), =($21, 'Family')), >($26, '7.0'), >=($32, 2000), <=($32, 2010), =($28, $19), =($28, $24), =($20, $9), =($25, $11), =($28, $14), =($7, $16), =($0, $15), =($14, $19), =($14, $24), =($19, $24))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], MAINSTREAM_MOVIE=[MIN($2)]), id = 173805
  BindableProject(name=[$1], info2=[$26], title=[$29]), id = 173804
    BindableJoin(condition=[=($19, $28)], joinType=[inner]), id = 173803
      BindableJoin(condition=[AND(=($11, $25), =($14, $24))], joinType=[inner]), id = 173801
        BindableProject(id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id00=[$17], kind=[$18], id10=[$19], info0=[$20], id2=[$21], info00=[$22], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 173799
          BindableJoin(condition=[AND(=($2, $19), =($17, $8), =($10, $7))], joinType=[inner]), id = 173798
            BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 173790
              BindableFilter(condition=[SEARCH($3, Sarg['Drama':VARCHAR, 'Family':VARCHAR, 'Horror':VARCHAR, 'Western':VARCHAR]:VARCHAR)]), id = 173789
                BindableTableScan(table=[[movie_info]]), id = 159883
              BindableTableScan(table=[[movie_companies]]), id = 159871
            BindableJoin(condition=[true], joinType=[inner]), id = 173797
              BindableJoin(condition=[true], joinType=[inner]), id = 173795
                BindableJoin(condition=[true], joinType=[inner]), id = 173793
                  BindableFilter(condition=[=($2, '[us]')]), id = 173791
                    BindableTableScan(table=[[company_name]]), id = 159835
                  BindableFilter(condition=[=($1, 'production companies')]), id = 173792
                    BindableTableScan(table=[[company_type]]), id = 159839
                BindableFilter(condition=[=($1, 'genres')]), id = 173794
                  BindableTableScan(table=[[info_type]]), id = 159851
              BindableFilter(condition=[=($1, 'rating')]), id = 173796
                BindableTableScan(table=[[info_type]]), id = 159851
        BindableFilter(condition=[>($3, '7.0')]), id = 173800
          BindableTableScan(table=[[movie_info_idx]]), id = 159895
      BindableFilter(condition=[SEARCH($4, Sarg[[2000..2010]])]), id = 173802
        BindableTableScan(table=[[title]]), id = 159907


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS release_date, MIN(miidx.info) AS rating, MIN(t.title) AS german_movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[de]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `GERMAN_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[de]' AND `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'rating' AND `IT2`.`INFO` = 'release dates' AND `KT`.`KIND` = 'movie' AND `MI`.`MOVIE_ID` = `T`.`ID` AND `IT2`.`ID` = `MI`.`INFO_TYPE_ID` AND `KT`.`ID` = `T`.`KIND_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `MIIDX`.`MOVIE_ID` = `T`.`ID` AND `IT`.`ID` = `MIIDX`.`INFO_TYPE_ID` AND `MI`.`MOVIE_ID` = `MIIDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MIIDX`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `GERMAN_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[de]' AND `CT`.`kind` = 'production companies' AND `IT`.`info` = 'rating' AND `IT2`.`info` = 'release dates' AND `KT`.`kind` = 'movie' AND `MI`.`movie_id` = `T`.`id` AND `IT2`.`id` = `MI`.`info_type_id` AND `KT`.`id` = `T`.`kind_id` AND `MC`.`movie_id` = `T`.`id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `MIIDX`.`movie_id` = `T`.`id` AND `IT`.`id` = `MIIDX`.`info_type_id` AND `MI`.`movie_id` = `MIIDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MIIDX`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], RELEASE_DATE=[MIN($0)], RATING=[MIN($1)], GERMAN_MOVIE=[MIN($2)])
  LogicalProject(info1=[$23], info2=[$28], title=[$31])
    LogicalFilter(condition=[AND(=($2, '[de]'), =($8, 'production companies'), =($10, 'rating'), =($12, 'release dates'), =($14, 'movie'), =($21, $30), =($11, $22), =($13, $33), =($16, $30), =($0, $17), =($7, $18), =($26, $30), =($9, $27), =($21, $26), =($21, $16), =($26, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RELEASE_DATE=[MIN($0)], RATING=[MIN($1)], GERMAN_MOVIE=[MIN($2)]), id = 239521
  BindableProject(info1=[$23], info2=[$28], title=[$31]), id = 239520
    BindableJoin(condition=[AND(=($21, $30), =($13, $33))], joinType=[inner]), id = 239519
      BindableJoin(condition=[AND(=($9, $27), =($21, $26))], joinType=[inner]), id = 239518
        BindableJoin(condition=[AND(=($11, $22), =($21, $16))], joinType=[inner]), id = 239517
          BindableJoin(condition=[AND(=($0, $17), =($7, $18))], joinType=[inner]), id = 239516
            BindableJoin(condition=[true], joinType=[inner]), id = 239515
              BindableJoin(condition=[true], joinType=[inner]), id = 239513
                BindableJoin(condition=[true], joinType=[inner]), id = 239511
                  BindableJoin(condition=[true], joinType=[inner]), id = 239509
                    BindableFilter(condition=[=($2, '[de]')]), id = 239507
                      BindableTableScan(table=[[company_name]]), id = 173880
                    BindableFilter(condition=[=($1, 'production companies')]), id = 239508
                      BindableTableScan(table=[[company_type]]), id = 173884
                  BindableFilter(condition=[=($1, 'rating')]), id = 239510
                    BindableTableScan(table=[[info_type]]), id = 173896
                BindableFilter(condition=[=($1, 'release dates')]), id = 239512
                  BindableTableScan(table=[[info_type]]), id = 173896
              BindableFilter(condition=[=($1, 'movie')]), id = 239514
                BindableTableScan(table=[[kind_type]]), id = 173916
            BindableTableScan(table=[[movie_companies]]), id = 173928
          BindableTableScan(table=[[movie_info]]), id = 173940
        BindableTableScan(table=[[movie_info_idx]]), id = 173952
      BindableTableScan(table=[[title]]), id = 173964


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie_about_winning FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code = '[us]' AND ct.kind = 'production companies' AND it.info = 'rating' AND it2.info = 'release dates' AND kt.kind = 'movie' AND NOT t.title = '' AND (t.title LIKE '%Champion%' OR t.title LIKE '%Loser%') AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_ABOUT_WINNING`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'rating' AND `IT2`.`INFO` = 'release dates' AND `KT`.`KIND` = 'movie' AND NOT `T`.`TITLE` = '' AND (`T`.`TITLE` LIKE '%Champion%' OR `T`.`TITLE` LIKE '%Loser%') AND `MI`.`MOVIE_ID` = `T`.`ID` AND `IT2`.`ID` = `MI`.`INFO_TYPE_ID` AND `KT`.`ID` = `T`.`KIND_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `MIIDX`.`MOVIE_ID` = `T`.`ID` AND `IT`.`ID` = `MIIDX`.`INFO_TYPE_ID` AND `MI`.`MOVIE_ID` = `MIIDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MIIDX`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_ABOUT_WINNING`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CT`.`kind` = 'production companies' AND `IT`.`info` = 'rating' AND `IT2`.`info` = 'release dates' AND `KT`.`kind` = 'movie' AND NOT `T`.`title` = '' AND (`T`.`title` LIKE '%Champion%' OR `T`.`title` LIKE '%Loser%') AND `MI`.`movie_id` = `T`.`id` AND `IT2`.`id` = `MI`.`info_type_id` AND `KT`.`id` = `T`.`kind_id` AND `MC`.`movie_id` = `T`.`id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `MIIDX`.`movie_id` = `T`.`id` AND `IT`.`id` = `MIIDX`.`info_type_id` AND `MI`.`movie_id` = `MIIDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MIIDX`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], RATING=[MIN($1)], MOVIE_ABOUT_WINNING=[MIN($2)])
  LogicalProject(name=[$1], info2=[$28], title=[$31])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($8, 'production companies'), =($10, 'rating'), =($12, 'release dates'), =($14, 'movie'), NOT(=($31, '')), OR(LIKE($31, '%Champion%'), LIKE($31, '%Loser%')), =($21, $30), =($11, $22), =($13, $33), =($16, $30), =($0, $17), =($7, $18), =($26, $30), =($9, $27), =($21, $26), =($21, $16), =($26, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], RATING=[MIN($1)], MOVIE_ABOUT_WINNING=[MIN($2)]), id = 305504
  BindableProject(name=[$1], info2=[$28], title=[$31]), id = 305503
    BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id3=[$13], kind0=[$14], id4=[$15], movie_id=[$16], company_id=[$17], company_type_id=[$18], note=[$19], id5=[$20], movie_id0=[$21], info_type_id=[$22], info1=[$23], note0=[$24], id7=[$37], movie_id1=[$38], info_type_id0=[$39], info2=[$40], note1=[$41], id6=[$25], title=[$26], imdb_index=[$27], kind_id=[$28], production_year=[$29], imdb_id0=[$30], phonetic_code=[$31], episode_of_id=[$32], season_nr=[$33], episode_nr=[$34], series_years=[$35], md5sum0=[$36]), id = 305502
      BindableJoin(condition=[AND(=($9, $39), =($21, $38))], joinType=[inner]), id = 305501
        BindableProject(id1=[$17], name=[$18], country_code=[$19], imdb_id0=[$20], name_pcode_nf=[$21], name_pcode_sf=[$22], md5sum0=[$23], id00=[$24], kind=[$25], id10=[$26], info0=[$27], id2=[$28], info00=[$29], id3=[$30], kind0=[$31], id4=[$32], movie_id0=[$33], company_id=[$34], company_type_id=[$35], note0=[$36], id0=[$12], movie_id=[$13], info_type_id=[$14], info=[$15], note=[$16], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11]), id = 305500
          BindableJoin(condition=[AND(=($30, $3), =($28, $14), =($13, $33))], joinType=[inner]), id = 305499
            BindableJoin(condition=[=($13, $0)], joinType=[inner]), id = 305488
              BindableFilter(condition=[AND(<>($1, ''), OR(LIKE($1, '%Champion%'), LIKE($1, '%Loser%')))]), id = 305487
                BindableTableScan(table=[[title]]), id = 239680
              BindableTableScan(table=[[movie_info]]), id = 239656
            BindableJoin(condition=[AND(=($0, $17), =($7, $18))], joinType=[inner]), id = 305498
              BindableJoin(condition=[true], joinType=[inner]), id = 305497
                BindableJoin(condition=[true], joinType=[inner]), id = 305495
                  BindableJoin(condition=[true], joinType=[inner]), id = 305493
                    BindableJoin(condition=[true], joinType=[inner]), id = 305491
                      BindableFilter(condition=[=($2, '[us]')]), id = 305489
                        BindableTableScan(table=[[company_name]]), id = 239596
                      BindableFilter(condition=[=($1, 'production companies')]), id = 305490
                        BindableTableScan(table=[[company_type]]), id = 239600
                    BindableFilter(condition=[=($1, 'rating')]), id = 305492
                      BindableTableScan(table=[[info_type]]), id = 239612
                  BindableFilter(condition=[=($1, 'release dates')]), id = 305494
                    BindableTableScan(table=[[info_type]]), id = 239612
                BindableFilter(condition=[=($1, 'movie')]), id = 305496
                  BindableTableScan(table=[[kind_type]]), id = 239632
              BindableTableScan(table=[[movie_companies]]), id = 239644
        BindableTableScan(table=[[movie_info_idx]]), id = 239668


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie_about_winning FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code = '[us]' AND ct.kind = 'production companies' AND it.info = 'rating' AND it2.info = 'release dates' AND kt.kind = 'movie' AND NOT t.title = '' AND (t.title LIKE 'Champion%' OR t.title LIKE 'Loser%') AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_ABOUT_WINNING`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'rating' AND `IT2`.`INFO` = 'release dates' AND `KT`.`KIND` = 'movie' AND NOT `T`.`TITLE` = '' AND (`T`.`TITLE` LIKE 'Champion%' OR `T`.`TITLE` LIKE 'Loser%') AND `MI`.`MOVIE_ID` = `T`.`ID` AND `IT2`.`ID` = `MI`.`INFO_TYPE_ID` AND `KT`.`ID` = `T`.`KIND_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `MIIDX`.`MOVIE_ID` = `T`.`ID` AND `IT`.`ID` = `MIIDX`.`INFO_TYPE_ID` AND `MI`.`MOVIE_ID` = `MIIDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MIIDX`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_ABOUT_WINNING`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CT`.`kind` = 'production companies' AND `IT`.`info` = 'rating' AND `IT2`.`info` = 'release dates' AND `KT`.`kind` = 'movie' AND NOT `T`.`title` = '' AND (`T`.`title` LIKE 'Champion%' OR `T`.`title` LIKE 'Loser%') AND `MI`.`movie_id` = `T`.`id` AND `IT2`.`id` = `MI`.`info_type_id` AND `KT`.`id` = `T`.`kind_id` AND `MC`.`movie_id` = `T`.`id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `MIIDX`.`movie_id` = `T`.`id` AND `IT`.`id` = `MIIDX`.`info_type_id` AND `MI`.`movie_id` = `MIIDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MIIDX`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], RATING=[MIN($1)], MOVIE_ABOUT_WINNING=[MIN($2)])
  LogicalProject(name=[$1], info2=[$28], title=[$31])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($8, 'production companies'), =($10, 'rating'), =($12, 'release dates'), =($14, 'movie'), NOT(=($31, '')), OR(LIKE($31, 'Champion%'), LIKE($31, 'Loser%')), =($21, $30), =($11, $22), =($13, $33), =($16, $30), =($0, $17), =($7, $18), =($26, $30), =($9, $27), =($21, $26), =($21, $16), =($26, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], RATING=[MIN($1)], MOVIE_ABOUT_WINNING=[MIN($2)]), id = 371487
  BindableProject(name=[$1], info2=[$28], title=[$31]), id = 371486
    BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id3=[$13], kind0=[$14], id4=[$15], movie_id=[$16], company_id=[$17], company_type_id=[$18], note=[$19], id5=[$20], movie_id0=[$21], info_type_id=[$22], info1=[$23], note0=[$24], id7=[$37], movie_id1=[$38], info_type_id0=[$39], info2=[$40], note1=[$41], id6=[$25], title=[$26], imdb_index=[$27], kind_id=[$28], production_year=[$29], imdb_id0=[$30], phonetic_code=[$31], episode_of_id=[$32], season_nr=[$33], episode_nr=[$34], series_years=[$35], md5sum0=[$36]), id = 371485
      BindableJoin(condition=[AND(=($9, $39), =($21, $38))], joinType=[inner]), id = 371484
        BindableProject(id1=[$17], name=[$18], country_code=[$19], imdb_id0=[$20], name_pcode_nf=[$21], name_pcode_sf=[$22], md5sum0=[$23], id00=[$24], kind=[$25], id10=[$26], info0=[$27], id2=[$28], info00=[$29], id3=[$30], kind0=[$31], id4=[$32], movie_id0=[$33], company_id=[$34], company_type_id=[$35], note0=[$36], id0=[$12], movie_id=[$13], info_type_id=[$14], info=[$15], note=[$16], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11]), id = 371483
          BindableJoin(condition=[AND(=($30, $3), =($28, $14), =($13, $33))], joinType=[inner]), id = 371482
            BindableJoin(condition=[=($13, $0)], joinType=[inner]), id = 371471
              BindableFilter(condition=[AND(<>($1, ''), OR(LIKE($1, 'Champion%'), LIKE($1, 'Loser%')))]), id = 371470
                BindableTableScan(table=[[title]]), id = 305663
              BindableTableScan(table=[[movie_info]]), id = 305639
            BindableJoin(condition=[AND(=($0, $17), =($7, $18))], joinType=[inner]), id = 371481
              BindableJoin(condition=[true], joinType=[inner]), id = 371480
                BindableJoin(condition=[true], joinType=[inner]), id = 371478
                  BindableJoin(condition=[true], joinType=[inner]), id = 371476
                    BindableJoin(condition=[true], joinType=[inner]), id = 371474
                      BindableFilter(condition=[=($2, '[us]')]), id = 371472
                        BindableTableScan(table=[[company_name]]), id = 305579
                      BindableFilter(condition=[=($1, 'production companies')]), id = 371473
                        BindableTableScan(table=[[company_type]]), id = 305583
                    BindableFilter(condition=[=($1, 'rating')]), id = 371475
                      BindableTableScan(table=[[info_type]]), id = 305595
                  BindableFilter(condition=[=($1, 'release dates')]), id = 371477
                    BindableTableScan(table=[[info_type]]), id = 305595
                BindableFilter(condition=[=($1, 'movie')]), id = 371479
                  BindableTableScan(table=[[kind_type]]), id = 305615
              BindableTableScan(table=[[movie_companies]]), id = 305627
        BindableTableScan(table=[[movie_info_idx]]), id = 305651


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS producing_company, MIN(miidx.info) AS rating, MIN(t.title) AS movie FROM company_name AS cn, company_type AS ct, info_type AS it, info_type AS it2, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS miidx, title AS t WHERE cn.country_code ='[us]' AND ct.kind ='production companies' AND it.info ='rating' AND it2.info ='release dates' AND kt.kind ='movie' AND mi.movie_id = t.id AND it2.id = mi.info_type_id AND kt.id = t.kind_id AND mc.movie_id = t.id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND miidx.movie_id = t.id AND it.id = miidx.info_type_id AND mi.movie_id = miidx.movie_id AND mi.movie_id = mc.movie_id AND miidx.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'rating' AND `IT2`.`INFO` = 'release dates' AND `KT`.`KIND` = 'movie' AND `MI`.`MOVIE_ID` = `T`.`ID` AND `IT2`.`ID` = `MI`.`INFO_TYPE_ID` AND `KT`.`ID` = `T`.`KIND_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `MIIDX`.`MOVIE_ID` = `T`.`ID` AND `IT`.`ID` = `MIIDX`.`INFO_TYPE_ID` AND `MI`.`MOVIE_ID` = `MIIDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MIIDX`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`MIIDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MIIDX`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CT`.`kind` = 'production companies' AND `IT`.`info` = 'rating' AND `IT2`.`info` = 'release dates' AND `KT`.`kind` = 'movie' AND `MI`.`movie_id` = `T`.`id` AND `IT2`.`id` = `MI`.`info_type_id` AND `KT`.`id` = `T`.`kind_id` AND `MC`.`movie_id` = `T`.`id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `MIIDX`.`movie_id` = `T`.`id` AND `IT`.`id` = `MIIDX`.`info_type_id` AND `MI`.`movie_id` = `MIIDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MIIDX`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], RATING=[MIN($1)], MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$28], title=[$31])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($8, 'production companies'), =($10, 'rating'), =($12, 'release dates'), =($14, 'movie'), =($21, $30), =($11, $22), =($13, $33), =($16, $30), =($0, $17), =($7, $18), =($26, $30), =($9, $27), =($21, $26), =($21, $16), =($26, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], RATING=[MIN($1)], MOVIE=[MIN($2)]), id = 437203
  BindableProject(name=[$1], info2=[$28], title=[$31]), id = 437202
    BindableJoin(condition=[AND(=($21, $30), =($13, $33))], joinType=[inner]), id = 437201
      BindableJoin(condition=[AND(=($9, $27), =($21, $26))], joinType=[inner]), id = 437200
        BindableJoin(condition=[AND(=($11, $22), =($21, $16))], joinType=[inner]), id = 437199
          BindableJoin(condition=[AND(=($0, $17), =($7, $18))], joinType=[inner]), id = 437198
            BindableJoin(condition=[true], joinType=[inner]), id = 437197
              BindableJoin(condition=[true], joinType=[inner]), id = 437195
                BindableJoin(condition=[true], joinType=[inner]), id = 437193
                  BindableJoin(condition=[true], joinType=[inner]), id = 437191
                    BindableFilter(condition=[=($2, '[us]')]), id = 437189
                      BindableTableScan(table=[[company_name]]), id = 371562
                    BindableFilter(condition=[=($1, 'production companies')]), id = 437190
                      BindableTableScan(table=[[company_type]]), id = 371566
                  BindableFilter(condition=[=($1, 'rating')]), id = 437192
                    BindableTableScan(table=[[info_type]]), id = 371578
                BindableFilter(condition=[=($1, 'release dates')]), id = 437194
                  BindableTableScan(table=[[info_type]]), id = 371578
              BindableFilter(condition=[=($1, 'movie')]), id = 437196
                BindableTableScan(table=[[kind_type]]), id = 371598
            BindableTableScan(table=[[movie_companies]]), id = 371610
          BindableTableScan(table=[[movie_info]]), id = 371622
        BindableTableScan(table=[[movie_info_idx]]), id = 371634
      BindableTableScan(table=[[title]]), id = 371646


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS northern_dark_movie FROM info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind = 'movie' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info < '8.5' AND t.production_year > 2010 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `NORTHERN_DARK_MOVIE`
FROM `INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` = 'movie' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '8.5' AND `T`.`PRODUCTION_YEAR` > 2010 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `NORTHERN_DARK_MOVIE`
FROM `INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` = 'movie' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '8.5' AND `T`.`production_year` > 2010 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RATING=[MIN($0)], NORTHERN_DARK_MOVIE=[MIN($1)])
  LogicalProject(info2=[$17], title=[$23])
    LogicalFilter(condition=[AND(=($1, 'countries'), =($3, 'rating'), OR(=($5, 'murder'), =($5, 'murder-in-title'), =($5, 'blood'), =($5, 'violence')), =($8, 'movie'), OR(=($12, 'Sweden'), =($12, 'Norway'), =($12, 'Germany'), =($12, 'Denmark'), =($12, 'Swedish'), =($12, 'Denish'), =($12, 'Norwegian'), =($12, 'German'), =($12, 'USA'), =($12, 'American')), <($17, '8.5'), >($26, 2010), =($7, $25), =($22, $10), =($22, $20), =($22, $15), =($20, $10), =($20, $15), =($10, $15), =($4, $21), =($0, $11), =($2, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RATING=[MIN($0)], NORTHERN_DARK_MOVIE=[MIN($1)]), id = 445087
  BindableProject(info2=[$17], title=[$23]), id = 445086
    BindableJoin(condition=[AND(=($7, $25), =($10, $22))], joinType=[inner]), id = 445085
      BindableJoin(condition=[AND(=($10, $20), =($4, $21))], joinType=[inner]), id = 445083
        BindableJoin(condition=[AND(=($10, $15), =($2, $16))], joinType=[inner]), id = 445082
          BindableJoin(condition=[=($0, $11)], joinType=[inner]), id = 445080
            BindableJoin(condition=[true], joinType=[inner]), id = 445078
              BindableJoin(condition=[true], joinType=[inner]), id = 445076
                BindableJoin(condition=[true], joinType=[inner]), id = 445074
                  BindableFilter(condition=[=($1, 'countries')]), id = 445072
                    BindableTableScan(table=[[info_type]]), id = 437271
                  BindableFilter(condition=[=($1, 'rating')]), id = 445073
                    BindableTableScan(table=[[info_type]]), id = 437271
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 445075
                  BindableTableScan(table=[[keyword]]), id = 437279
              BindableFilter(condition=[=($1, 'movie')]), id = 445077
                BindableTableScan(table=[[kind_type]]), id = 437291
            BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Denish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 445079
              BindableTableScan(table=[[movie_info]]), id = 437303
          BindableFilter(condition=[<($3, '8.5')]), id = 445081
            BindableTableScan(table=[[movie_info_idx]]), id = 437315
        BindableTableScan(table=[[movie_keyword]]), id = 437327
      BindableFilter(condition=[>($4, 2010)]), id = 445084
        BindableTableScan(table=[[title]]), id = 437339


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS western_dark_production FROM info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title') AND kt.kind = 'movie' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info > '6.0' AND t.production_year > 2010 AND (t.title LIKE '%murder%' OR t.title LIKE '%Murder%' OR t.title LIKE '%Mord%') AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_DARK_PRODUCTION`
FROM `INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title') AND `KT`.`KIND` = 'movie' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` > '6.0' AND `T`.`PRODUCTION_YEAR` > 2010 AND (`T`.`TITLE` LIKE '%murder%' OR `T`.`TITLE` LIKE '%Murder%' OR `T`.`TITLE` LIKE '%Mord%') AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_DARK_PRODUCTION`
FROM `INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title') AND `KT`.`kind` = 'movie' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` > '6.0' AND `T`.`production_year` > 2010 AND (`T`.`title` LIKE '%murder%' OR `T`.`title` LIKE '%Murder%' OR `T`.`title` LIKE '%Mord%') AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RATING=[MIN($0)], WESTERN_DARK_PRODUCTION=[MIN($1)])
  LogicalProject(info2=[$17], title=[$23])
    LogicalFilter(condition=[AND(=($1, 'countries'), =($3, 'rating'), OR(=($5, 'murder'), =($5, 'murder-in-title')), =($8, 'movie'), OR(=($12, 'Sweden'), =($12, 'Norway'), =($12, 'Germany'), =($12, 'Denmark'), =($12, 'Swedish'), =($12, 'Denish'), =($12, 'Norwegian'), =($12, 'German'), =($12, 'USA'), =($12, 'American')), >($17, '6.0'), >($26, 2010), OR(LIKE($23, '%murder%'), LIKE($23, '%Murder%'), LIKE($23, '%Mord%')), =($7, $25), =($22, $10), =($22, $20), =($22, $15), =($20, $10), =($20, $15), =($10, $15), =($4, $21), =($0, $11), =($2, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RATING=[MIN($0)], WESTERN_DARK_PRODUCTION=[MIN($1)]), id = 452974
  BindableProject(info2=[$17], title=[$23]), id = 452973
    BindableProject(id=[$0], info=[$1], id0=[$2], info0=[$3], id1=[$4], keyword=[$5], phonetic_code=[$6], id2=[$7], kind=[$8], id3=[$9], movie_id=[$10], info_type_id=[$11], info1=[$12], note=[$13], id4=[$14], movie_id0=[$15], info_type_id0=[$16], info2=[$17], note0=[$18], id6=[$31], movie_id1=[$32], keyword_id=[$33], id5=[$19], title=[$20], imdb_index=[$21], kind_id=[$22], production_year=[$23], imdb_id=[$24], phonetic_code0=[$25], episode_of_id=[$26], season_nr=[$27], episode_nr=[$28], series_years=[$29], md5sum=[$30]), id = 452972
      BindableJoin(condition=[AND(=($10, $32), =($4, $33))], joinType=[inner]), id = 452971
        BindableProject(id=[$0], info=[$1], id0=[$2], info0=[$3], id1=[$4], keyword=[$5], phonetic_code=[$6], id2=[$7], kind=[$8], id3=[$9], movie_id=[$10], info_type_id=[$11], info1=[$12], note=[$13], id5=[$26], movie_id0=[$27], info_type_id0=[$28], info2=[$29], note0=[$30], id4=[$14], title=[$15], imdb_index=[$16], kind_id=[$17], production_year=[$18], imdb_id=[$19], phonetic_code0=[$20], episode_of_id=[$21], season_nr=[$22], episode_nr=[$23], series_years=[$24], md5sum=[$25]), id = 452970
          BindableJoin(condition=[AND(=($10, $27), =($2, $28))], joinType=[inner]), id = 452969
            BindableProject(id1=[$17], info0=[$18], id00=[$19], info00=[$20], id10=[$21], keyword=[$22], phonetic_code0=[$23], id2=[$24], kind=[$25], id0=[$12], movie_id=[$13], info_type_id=[$14], info=[$15], note=[$16], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11]), id = 452967
              BindableJoin(condition=[AND(=($24, $3), =($17, $14))], joinType=[inner]), id = 452966
                BindableJoin(condition=[=($13, $0)], joinType=[inner]), id = 452958
                  BindableFilter(condition=[AND(>($4, 2010), OR(LIKE($1, '%murder%'), LIKE($1, '%Murder%'), LIKE($1, '%Mord%')))]), id = 452956
                    BindableTableScan(table=[[title]]), id = 445223
                  BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Denish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 452957
                    BindableTableScan(table=[[movie_info]]), id = 445187
                BindableJoin(condition=[true], joinType=[inner]), id = 452965
                  BindableJoin(condition=[true], joinType=[inner]), id = 452963
                    BindableJoin(condition=[true], joinType=[inner]), id = 452961
                      BindableFilter(condition=[=($1, 'countries')]), id = 452959
                        BindableTableScan(table=[[info_type]]), id = 445155
                      BindableFilter(condition=[=($1, 'rating')]), id = 452960
                        BindableTableScan(table=[[info_type]]), id = 445155
                    BindableFilter(condition=[SEARCH($1, Sarg['murder':VARCHAR, 'murder-in-title':VARCHAR]:VARCHAR)]), id = 452962
                      BindableTableScan(table=[[keyword]]), id = 445163
                  BindableFilter(condition=[=($1, 'movie')]), id = 452964
                    BindableTableScan(table=[[kind_type]]), id = 445175
            BindableFilter(condition=[>($3, '6.0')]), id = 452968
              BindableTableScan(table=[[movie_info_idx]]), id = 445199
        BindableTableScan(table=[[movie_keyword]]), id = 445211


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS north_european_dark_production FROM info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IS NOT NULL AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info < '8.5' AND t.production_year > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `NORTH_EUROPEAN_DARK_PRODUCTION`
FROM `INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IS NOT NULL AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '8.5' AND `T`.`PRODUCTION_YEAR` > 2005 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `NORTH_EUROPEAN_DARK_PRODUCTION`
FROM `INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IS NOT NULL AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '8.5' AND `T`.`production_year` > 2005 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RATING=[MIN($0)], NORTH_EUROPEAN_DARK_PRODUCTION=[MIN($1)])
  LogicalProject(info2=[$17], title=[$23])
    LogicalFilter(condition=[AND(=($1, 'countries'), =($3, 'rating'), IS NOT NULL($5), OR(=($5, 'murder'), =($5, 'murder-in-title'), =($5, 'blood'), =($5, 'violence')), OR(=($8, 'movie'), =($8, 'episode')), OR(=($12, 'Sweden'), =($12, 'Norway'), =($12, 'Germany'), =($12, 'Denmark'), =($12, 'Swedish'), =($12, 'Danish'), =($12, 'Norwegian'), =($12, 'German'), =($12, 'USA'), =($12, 'American')), <($17, '8.5'), >($26, 2005), =($7, $25), =($22, $10), =($22, $20), =($22, $15), =($20, $10), =($20, $15), =($10, $15), =($4, $21), =($0, $11), =($2, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RATING=[MIN($0)], NORTH_EUROPEAN_DARK_PRODUCTION=[MIN($1)]), id = 460858
  BindableProject(info2=[$17], title=[$23]), id = 460857
    BindableJoin(condition=[AND(=($7, $25), =($10, $22))], joinType=[inner]), id = 460856
      BindableJoin(condition=[AND(=($10, $20), =($4, $21))], joinType=[inner]), id = 460854
        BindableJoin(condition=[AND(=($10, $15), =($2, $16))], joinType=[inner]), id = 460853
          BindableJoin(condition=[=($0, $11)], joinType=[inner]), id = 460851
            BindableJoin(condition=[true], joinType=[inner]), id = 460849
              BindableJoin(condition=[true], joinType=[inner]), id = 460847
                BindableJoin(condition=[true], joinType=[inner]), id = 460845
                  BindableFilter(condition=[=($1, 'countries')]), id = 460843
                    BindableTableScan(table=[[info_type]]), id = 453042
                  BindableFilter(condition=[=($1, 'rating')]), id = 460844
                    BindableTableScan(table=[[info_type]]), id = 453042
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 460846
                  BindableTableScan(table=[[keyword]]), id = 453050
              BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 460848
                BindableTableScan(table=[[kind_type]]), id = 453062
            BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Danish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 460850
              BindableTableScan(table=[[movie_info]]), id = 453074
          BindableFilter(condition=[<($3, '8.5')]), id = 460852
            BindableTableScan(table=[[movie_info_idx]]), id = 453086
        BindableTableScan(table=[[movie_keyword]]), id = 453098
      BindableFilter(condition=[>($4, 2005)]), id = 460855
        BindableTableScan(table=[[title]]), id = 453110


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS release_date, MIN(t.title) AS internet_movie FROM aka_title AS ati, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cn.country_code = '[us]' AND it1.info = 'release dates' AND mc.note LIKE '%(200%)%' AND mc.note LIKE '%(worldwide)%' AND mi.note LIKE '%internet%' AND mi.info LIKE 'USA:% 200%' AND t.production_year > 2000 AND t.id = ati.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = ati.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = ati.movie_id AND mc.movie_id = ati.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`T`.`TITLE`) AS `INTERNET_MOVIE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'release dates' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MC`.`NOTE` LIKE '%(worldwide)%' AND `MI`.`NOTE` LIKE '%internet%' AND `MI`.`INFO` LIKE 'USA:% 200%' AND `T`.`PRODUCTION_YEAR` > 2000 AND `T`.`ID` = `ATI`.`MOVIE_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`T`.`TITLE`) AS `INTERNET_MOVIE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'release dates' AND `MC`.`note` LIKE '%(200%)%' AND `MC`.`note` LIKE '%(worldwide)%' AND `MI`.`note` LIKE '%internet%' AND `MI`.`info` LIKE 'USA:% 200%' AND `T`.`production_year` > 2000 AND `T`.`id` = `ATI`.`movie_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `ATI`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `ATI`.`movie_id` AND `MC`.`movie_id` = `ATI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RELEASE_DATE=[MIN($0)], INTERNET_MOVIE=[MIN($1)])
  LogicalProject(info0=[$34], title0=[$40])
    LogicalFilter(condition=[AND(=($14, '[us]'), =($22, 'release dates'), LIKE($30, '%(200%)%'), LIKE($30, '%(worldwide)%'), LIKE($35, '%internet%'), LIKE($34, 'USA:% 200%'), >($43, 2000), =($39, $1), =($39, $32), =($39, $37), =($39, $27), =($37, $32), =($37, $27), =($37, $1), =($32, $27), =($32, $1), =($27, $1), =($23, $38), =($21, $33), =($12, $28), =($19, $29))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[aka_title]])
                      LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RELEASE_DATE=[MIN($0)], INTERNET_MOVIE=[MIN($1)]), id = 532581
  BindableProject(info0=[$34], title0=[$40]), id = 532580
    BindableJoin(condition=[=($1, $39)], joinType=[inner]), id = 532579
      BindableJoin(condition=[AND(=($32, $37), =($23, $38))], joinType=[inner]), id = 532577
        BindableProject(id1=[$10], movie_id1=[$11], title=[$12], imdb_index=[$13], kind_id=[$14], production_year=[$15], phonetic_code=[$16], episode_of_id=[$17], season_nr=[$18], episode_nr=[$19], note1=[$20], md5sum=[$21], id00=[$22], name=[$23], country_code=[$24], imdb_id=[$25], name_pcode_nf=[$26], name_pcode_sf=[$27], md5sum0=[$28], id10=[$29], kind=[$30], id2=[$31], info0=[$32], id3=[$33], keyword=[$34], phonetic_code0=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 532576
          BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note1=[$10], md5sum=[$11], id00=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id10=[$19], kind=[$20], id2=[$21], info0=[$22], id3=[$23], keyword=[$24], phonetic_code0=[$25]), id = 532575
            BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id2=[$21], info=[$22], id4=[$33], keyword=[$34], phonetic_code0=[$35], id3=[$23], movie_id0=[$24], info_type_id=[$25], info0=[$26], note0=[$27], id00=[$28], movie_id00=[$29], company_id=[$30], company_type_id=[$31], note00=[$32]), id = 532574
              BindableJoin(condition=[true], joinType=[inner]), id = 532573
                BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id3=[$31], info0=[$32], id2=[$21], movie_id0=[$22], info_type_id=[$23], info=[$24], note0=[$25], id00=[$26], movie_id00=[$27], company_id=[$28], company_type_id=[$29], note00=[$30]), id = 532572
                  BindableJoin(condition=[=($31, $23)], joinType=[inner]), id = 532571
                    BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id2=[$29], kind=[$30], id1=[$19], movie_id0=[$20], info_type_id=[$21], info=[$22], note0=[$23], id00=[$24], movie_id00=[$25], company_id=[$26], company_type_id=[$27], note00=[$28]), id = 532569
                      BindableJoin(condition=[=($29, $27)], joinType=[inner]), id = 532568
                        BindableProject(id2=[$17], movie_id1=[$18], title=[$19], imdb_index=[$20], kind_id=[$21], production_year=[$22], phonetic_code=[$23], episode_of_id=[$24], season_nr=[$25], episode_nr=[$26], note1=[$27], md5sum0=[$28], id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 532567
                          BindableJoin(condition=[=($6, $18)], joinType=[inner]), id = 532566
                            BindableJoin(condition=[=($10, $7)], joinType=[inner]), id = 532565
                              BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 532563
                                BindableFilter(condition=[AND(LIKE($4, '%internet%'), LIKE($3, 'USA:% 200%'))]), id = 532561
                                  BindableTableScan(table=[[movie_info]]), id = 460998
                                BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), LIKE($4, '%(worldwide)%'))]), id = 532562
                                  BindableTableScan(table=[[movie_companies]]), id = 460986
                              BindableFilter(condition=[=($2, '[us]')]), id = 532564
                                BindableTableScan(table=[[company_name]]), id = 460938
                            BindableTableScan(table=[[aka_title]]), id = 460934
                        BindableTableScan(table=[[company_type]]), id = 460950
                    BindableFilter(condition=[=($1, 'release dates')]), id = 532570
                      BindableTableScan(table=[[info_type]]), id = 460962
                BindableTableScan(table=[[keyword]]), id = 460974
        BindableTableScan(table=[[movie_keyword]]), id = 461010
      BindableFilter(condition=[>($4, 2000)]), id = 532578
        BindableTableScan(table=[[title]]), id = 461022


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS release_date, MIN(t.title) AS youtube_movie FROM aka_title AS ati, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cn.country_code = '[us]' AND cn.name = 'YouTube' AND it1.info = 'release dates' AND mc.note LIKE '%(200%)%' AND mc.note LIKE '%(worldwide)%' AND mi.note LIKE '%internet%' AND mi.info LIKE 'USA:% 200%' AND t.production_year BETWEEN 2005 AND 2010 AND t.id = ati.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = ati.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = ati.movie_id AND mc.movie_id = ati.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`T`.`TITLE`) AS `YOUTUBE_MOVIE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `CN`.`NAME` = 'YouTube' AND `IT1`.`INFO` = 'release dates' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MC`.`NOTE` LIKE '%(worldwide)%' AND `MI`.`NOTE` LIKE '%internet%' AND `MI`.`INFO` LIKE 'USA:% 200%' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2005 AND 2010 AND `T`.`ID` = `ATI`.`MOVIE_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`T`.`TITLE`) AS `YOUTUBE_MOVIE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `CN`.`name` = 'YouTube' AND `IT1`.`info` = 'release dates' AND `MC`.`note` LIKE '%(200%)%' AND `MC`.`note` LIKE '%(worldwide)%' AND `MI`.`note` LIKE '%internet%' AND `MI`.`info` LIKE 'USA:% 200%' AND `T`.`production_year` BETWEEN ASYMMETRIC 2005 AND 2010 AND `T`.`id` = `ATI`.`movie_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `ATI`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `ATI`.`movie_id` AND `MC`.`movie_id` = `ATI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RELEASE_DATE=[MIN($0)], YOUTUBE_MOVIE=[MIN($1)])
  LogicalProject(info0=[$34], title0=[$40])
    LogicalFilter(condition=[AND(=($14, '[us]'), =($13, 'YouTube'), =($22, 'release dates'), LIKE($30, '%(200%)%'), LIKE($30, '%(worldwide)%'), LIKE($35, '%internet%'), LIKE($34, 'USA:% 200%'), >=($43, 2005), <=($43, 2010), =($39, $1), =($39, $32), =($39, $37), =($39, $27), =($37, $32), =($37, $27), =($37, $1), =($32, $27), =($32, $1), =($27, $1), =($23, $38), =($21, $33), =($12, $28), =($19, $29))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[aka_title]])
                      LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RELEASE_DATE=[MIN($0)], YOUTUBE_MOVIE=[MIN($1)]), id = 604305
  BindableProject(info0=[$34], title0=[$40]), id = 604304
    BindableJoin(condition=[=($1, $39)], joinType=[inner]), id = 604303
      BindableJoin(condition=[AND(=($32, $37), =($23, $38))], joinType=[inner]), id = 604301
        BindableProject(id1=[$10], movie_id1=[$11], title=[$12], imdb_index=[$13], kind_id=[$14], production_year=[$15], phonetic_code=[$16], episode_of_id=[$17], season_nr=[$18], episode_nr=[$19], note1=[$20], md5sum=[$21], id00=[$22], name=[$23], country_code=[$24], imdb_id=[$25], name_pcode_nf=[$26], name_pcode_sf=[$27], md5sum0=[$28], id10=[$29], kind=[$30], id2=[$31], info0=[$32], id3=[$33], keyword=[$34], phonetic_code0=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 604300
          BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note1=[$10], md5sum=[$11], id00=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id10=[$19], kind=[$20], id2=[$21], info0=[$22], id3=[$23], keyword=[$24], phonetic_code0=[$25]), id = 604299
            BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id2=[$21], info=[$22], id4=[$33], keyword=[$34], phonetic_code0=[$35], id3=[$23], movie_id0=[$24], info_type_id=[$25], info0=[$26], note0=[$27], id00=[$28], movie_id00=[$29], company_id=[$30], company_type_id=[$31], note00=[$32]), id = 604298
              BindableJoin(condition=[true], joinType=[inner]), id = 604297
                BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id3=[$31], info0=[$32], id2=[$21], movie_id0=[$22], info_type_id=[$23], info=[$24], note0=[$25], id00=[$26], movie_id00=[$27], company_id=[$28], company_type_id=[$29], note00=[$30]), id = 604296
                  BindableJoin(condition=[=($31, $23)], joinType=[inner]), id = 604295
                    BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id2=[$29], kind=[$30], id1=[$19], movie_id0=[$20], info_type_id=[$21], info=[$22], note0=[$23], id00=[$24], movie_id00=[$25], company_id=[$26], company_type_id=[$27], note00=[$28]), id = 604293
                      BindableJoin(condition=[=($29, $27)], joinType=[inner]), id = 604292
                        BindableProject(id2=[$17], movie_id1=[$18], title=[$19], imdb_index=[$20], kind_id=[$21], production_year=[$22], phonetic_code=[$23], episode_of_id=[$24], season_nr=[$25], episode_nr=[$26], note1=[$27], md5sum0=[$28], id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 604291
                          BindableJoin(condition=[=($6, $18)], joinType=[inner]), id = 604290
                            BindableProject(id1=[$12], movie_id0=[$13], info_type_id=[$14], info=[$15], note0=[$16], id0=[$7], movie_id=[$8], company_id=[$9], company_type_id=[$10], note=[$11], id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6]), id = 604289
                              BindableJoin(condition=[=($8, $13)], joinType=[inner]), id = 604288
                                BindableJoin(condition=[=($0, $9)], joinType=[inner]), id = 604286
                                  BindableFilter(condition=[AND(=($2, '[us]'), =($1, 'YouTube'))]), id = 604284
                                    BindableTableScan(table=[[company_name]]), id = 532661
                                  BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), LIKE($4, '%(worldwide)%'))]), id = 604285
                                    BindableTableScan(table=[[movie_companies]]), id = 532709
                                BindableFilter(condition=[AND(LIKE($4, '%internet%'), LIKE($3, 'USA:% 200%'))]), id = 604287
                                  BindableTableScan(table=[[movie_info]]), id = 532721
                            BindableTableScan(table=[[aka_title]]), id = 532657
                        BindableTableScan(table=[[company_type]]), id = 532673
                    BindableFilter(condition=[=($1, 'release dates')]), id = 604294
                      BindableTableScan(table=[[info_type]]), id = 532685
                BindableTableScan(table=[[keyword]]), id = 532697
        BindableTableScan(table=[[movie_keyword]]), id = 532733
      BindableFilter(condition=[SEARCH($4, Sarg[[2005..2010]])]), id = 604302
        BindableTableScan(table=[[title]]), id = 532745


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS release_date, MIN(t.title) AS modern_american_internet_movie FROM aka_title AS ati, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cn.country_code = '[us]' AND it1.info = 'release dates' AND mi.note LIKE '%internet%' AND mi.info IS NOT NULL AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%') AND t.production_year > 1990 AND t.id = ati.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = ati.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = ati.movie_id AND mc.movie_id = ati.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`T`.`TITLE`) AS `MODERN_AMERICAN_INTERNET_MOVIE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'release dates' AND `MI`.`NOTE` LIKE '%internet%' AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'USA:% 199%' OR `MI`.`INFO` LIKE 'USA:% 200%') AND `T`.`PRODUCTION_YEAR` > 1990 AND `T`.`ID` = `ATI`.`MOVIE_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `RELEASE_DATE`, MIN(`T`.`TITLE`) AS `MODERN_AMERICAN_INTERNET_MOVIE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'release dates' AND `MI`.`note` LIKE '%internet%' AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'USA:% 199%' OR `MI`.`info` LIKE 'USA:% 200%') AND `T`.`production_year` > 1990 AND `T`.`id` = `ATI`.`movie_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `ATI`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `ATI`.`movie_id` AND `MC`.`movie_id` = `ATI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RELEASE_DATE=[MIN($0)], MODERN_AMERICAN_INTERNET_MOVIE=[MIN($1)])
  LogicalProject(info0=[$34], title0=[$40])
    LogicalFilter(condition=[AND(=($14, '[us]'), =($22, 'release dates'), LIKE($35, '%internet%'), IS NOT NULL($34), OR(LIKE($34, 'USA:% 199%'), LIKE($34, 'USA:% 200%')), >($43, 1990), =($39, $1), =($39, $32), =($39, $37), =($39, $27), =($37, $32), =($37, $27), =($37, $1), =($32, $27), =($32, $1), =($27, $1), =($23, $38), =($21, $33), =($12, $28), =($19, $29))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[aka_title]])
                      LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RELEASE_DATE=[MIN($0)], MODERN_AMERICAN_INTERNET_MOVIE=[MIN($1)]), id = 675600
  BindableProject(info0=[$34], title0=[$40]), id = 675599
    BindableJoin(condition=[=($1, $39)], joinType=[inner]), id = 675598
      BindableJoin(condition=[AND(=($32, $37), =($23, $38))], joinType=[inner]), id = 675596
        BindableProject(id1=[$10], movie_id1=[$11], title=[$12], imdb_index=[$13], kind_id=[$14], production_year=[$15], phonetic_code=[$16], episode_of_id=[$17], season_nr=[$18], episode_nr=[$19], note1=[$20], md5sum=[$21], id00=[$22], name=[$23], country_code=[$24], imdb_id=[$25], name_pcode_nf=[$26], name_pcode_sf=[$27], md5sum0=[$28], id10=[$29], kind=[$30], id2=[$31], info0=[$32], id3=[$33], keyword=[$34], phonetic_code0=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 675595
          BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note1=[$10], md5sum=[$11], id00=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id10=[$19], kind=[$20], id2=[$21], info0=[$22], id3=[$23], keyword=[$24], phonetic_code0=[$25]), id = 675594
            BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id2=[$21], info=[$22], id4=[$33], keyword=[$34], phonetic_code0=[$35], id3=[$23], movie_id0=[$24], info_type_id=[$25], info0=[$26], note0=[$27], id00=[$28], movie_id00=[$29], company_id=[$30], company_type_id=[$31], note00=[$32]), id = 675593
              BindableJoin(condition=[true], joinType=[inner]), id = 675592
                BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id3=[$31], info0=[$32], id2=[$21], movie_id0=[$22], info_type_id=[$23], info=[$24], note0=[$25], id00=[$26], movie_id00=[$27], company_id=[$28], company_type_id=[$29], note00=[$30]), id = 675591
                  BindableJoin(condition=[=($31, $23)], joinType=[inner]), id = 675590
                    BindableProject(id2=[$12], movie_id1=[$13], title=[$14], imdb_index=[$15], kind_id=[$16], production_year=[$17], phonetic_code=[$18], episode_of_id=[$19], season_nr=[$20], episode_nr=[$21], note1=[$22], md5sum=[$23], id00=[$24], name=[$25], country_code=[$26], imdb_id=[$27], name_pcode_nf=[$28], name_pcode_sf=[$29], md5sum0=[$30], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 675588
                      BindableJoin(condition=[AND(=($6, $13), =($24, $7))], joinType=[inner]), id = 675587
                        BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 675584
                          BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 675583
                            BindableFilter(condition=[AND(LIKE($4, '%internet%'), OR(LIKE($3, 'USA:% 199%'), LIKE($3, 'USA:% 200%')))]), id = 675582
                              BindableTableScan(table=[[movie_info]]), id = 604445
                            BindableTableScan(table=[[movie_companies]]), id = 604433
                          BindableTableScan(table=[[company_type]]), id = 604397
                        BindableJoin(condition=[true], joinType=[inner]), id = 675586
                          BindableTableScan(table=[[aka_title]]), id = 604381
                          BindableFilter(condition=[=($2, '[us]')]), id = 675585
                            BindableTableScan(table=[[company_name]]), id = 604385
                    BindableFilter(condition=[=($1, 'release dates')]), id = 675589
                      BindableTableScan(table=[[info_type]]), id = 604409
                BindableTableScan(table=[[keyword]]), id = 604421
        BindableTableScan(table=[[movie_keyword]]), id = 604457
      BindableFilter(condition=[>($4, 1990)]), id = 675597
        BindableTableScan(table=[[title]]), id = 604469


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(ati.title) AS aka_title, MIN(t.title) AS internet_movie_title FROM aka_title AS ati, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cn.country_code = '[us]' AND it1.info = 'release dates' AND mi.note LIKE '%internet%' AND t.production_year > 1990 AND t.id = ati.movie_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = ati.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = ati.movie_id AND mc.movie_id = ati.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id

[SqlNode]
SELECT MIN(`ATI`.`TITLE`) AS `AKA_TITLE`, MIN(`T`.`TITLE`) AS `INTERNET_MOVIE_TITLE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'release dates' AND `MI`.`NOTE` LIKE '%internet%' AND `T`.`PRODUCTION_YEAR` > 1990 AND `T`.`ID` = `ATI`.`MOVIE_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `ATI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`ATI`.`TITLE`) AS `AKA_TITLE`, MIN(`T`.`TITLE`) AS `INTERNET_MOVIE_TITLE`
FROM `AKA_TITLE` AS `ATI`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'release dates' AND `MI`.`note` LIKE '%internet%' AND `T`.`production_year` > 1990 AND `T`.`id` = `ATI`.`movie_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `ATI`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `ATI`.`movie_id` AND `MC`.`movie_id` = `ATI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id`

[Logical plan]
LogicalAggregate(group=[{}], AKA_TITLE=[MIN($0)], INTERNET_MOVIE_TITLE=[MIN($1)])
  LogicalProject(title=[$2], title0=[$40])
    LogicalFilter(condition=[AND(=($14, '[us]'), =($22, 'release dates'), LIKE($35, '%internet%'), >($43, 1990), =($39, $1), =($39, $32), =($39, $37), =($39, $27), =($37, $32), =($37, $27), =($37, $1), =($32, $27), =($32, $1), =($27, $1), =($23, $38), =($21, $33), =($12, $28), =($19, $29))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[aka_title]])
                      LogicalTableScan(table=[[company_name]])
                    LogicalTableScan(table=[[company_type]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], AKA_TITLE=[MIN($0)], INTERNET_MOVIE_TITLE=[MIN($1)]), id = 746894
  BindableProject(title=[$2], title0=[$40]), id = 746893
    BindableJoin(condition=[=($1, $39)], joinType=[inner]), id = 746892
      BindableJoin(condition=[AND(=($32, $37), =($23, $38))], joinType=[inner]), id = 746890
        BindableProject(id1=[$10], movie_id1=[$11], title=[$12], imdb_index=[$13], kind_id=[$14], production_year=[$15], phonetic_code=[$16], episode_of_id=[$17], season_nr=[$18], episode_nr=[$19], note1=[$20], md5sum=[$21], id00=[$22], name=[$23], country_code=[$24], imdb_id=[$25], name_pcode_nf=[$26], name_pcode_sf=[$27], md5sum0=[$28], id10=[$29], kind=[$30], id2=[$31], info0=[$32], id3=[$33], keyword=[$34], phonetic_code0=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 746889
          BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note1=[$10], md5sum=[$11], id00=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id10=[$19], kind=[$20], id2=[$21], info0=[$22], id3=[$23], keyword=[$24], phonetic_code0=[$25]), id = 746888
            BindableProject(id=[$0], movie_id=[$1], title=[$2], imdb_index=[$3], kind_id=[$4], production_year=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], note=[$10], md5sum=[$11], id0=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum0=[$18], id1=[$19], kind=[$20], id2=[$21], info=[$22], id4=[$33], keyword=[$34], phonetic_code0=[$35], id3=[$23], movie_id0=[$24], info_type_id=[$25], info0=[$26], note0=[$27], id00=[$28], movie_id00=[$29], company_id=[$30], company_type_id=[$31], note00=[$32]), id = 746887
              BindableJoin(condition=[true], joinType=[inner]), id = 746886
                BindableProject(id2=[$12], movie_id1=[$13], title=[$14], imdb_index=[$15], kind_id=[$16], production_year=[$17], phonetic_code=[$18], episode_of_id=[$19], season_nr=[$20], episode_nr=[$21], note1=[$22], md5sum=[$23], id00=[$24], name=[$25], country_code=[$26], imdb_id=[$27], name_pcode_nf=[$28], name_pcode_sf=[$29], md5sum0=[$30], id10=[$31], kind=[$32], id1=[$10], info0=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 746885
                  BindableJoin(condition=[AND(=($6, $13), =($24, $7), =($31, $8))], joinType=[inner]), id = 746884
                    BindableJoin(condition=[=($10, $2)], joinType=[inner]), id = 746880
                      BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 746878
                        BindableFilter(condition=[LIKE($4, '%internet%')]), id = 746877
                          BindableTableScan(table=[[movie_info]]), id = 675740
                        BindableTableScan(table=[[movie_companies]]), id = 675728
                      BindableFilter(condition=[=($1, 'release dates')]), id = 746879
                        BindableTableScan(table=[[info_type]]), id = 675704
                    BindableJoin(condition=[true], joinType=[inner]), id = 746883
                      BindableJoin(condition=[true], joinType=[inner]), id = 746882
                        BindableTableScan(table=[[aka_title]]), id = 675676
                        BindableFilter(condition=[=($2, '[us]')]), id = 746881
                          BindableTableScan(table=[[company_name]]), id = 675680
                      BindableTableScan(table=[[company_type]]), id = 675692
                BindableTableScan(table=[[keyword]]), id = 675716
        BindableTableScan(table=[[movie_keyword]]), id = 675752
      BindableFilter(condition=[>($4, 1990)]), id = 746891
        BindableTableScan(table=[[title]]), id = 675764


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND t.episode_nr >= 50 AND t.episode_nr < 100 AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `T`.`EPISODE_NR` >= 50 AND `T`.`EPISODE_NR` < 100 AND `AN`.`PERSON_ID` = `N`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `T`.`episode_nr` >= 50 AND `T`.`episode_nr` < 100 AND `AN`.`person_id` = `N`.`id` AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)])
  LogicalProject(name=[$2], title=[$43])
    LogicalFilter(condition=[AND(=($17, '[us]'), =($23, 'character-name-in-title'), >=($51, 50), <($51, 100), =($1, $33), =($33, $9), =($10, $42), =($42, $31), =($32, $22), =($42, $26), =($27, $15), =($1, $9), =($10, $26), =($10, $31), =($26, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)]), id = 749579
  BindableProject(name=[$2], title=[$43]), id = 749578
    BindableJoin(condition=[=($10, $42)], joinType=[inner]), id = 749577
      BindableJoin(condition=[=($1, $33)], joinType=[inner]), id = 749575
        BindableJoin(condition=[AND(=($22, $32), =($10, $31))], joinType=[inner]), id = 749574
          BindableJoin(condition=[AND(=($27, $15), =($10, $26))], joinType=[inner]), id = 749573
            BindableJoin(condition=[true], joinType=[inner]), id = 749572
              BindableJoin(condition=[true], joinType=[inner]), id = 749570
                BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 749568
                  BindableTableScan(table=[[aka_name]]), id = 746963
                  BindableTableScan(table=[[cast_info]]), id = 746967
                BindableFilter(condition=[=($2, '[us]')]), id = 749569
                  BindableTableScan(table=[[company_name]]), id = 746979
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 749571
                BindableTableScan(table=[[keyword]]), id = 746991
            BindableTableScan(table=[[movie_companies]]), id = 747003
          BindableTableScan(table=[[movie_keyword]]), id = 747015
        BindableTableScan(table=[[name]]), id = 747027
      BindableFilter(condition=[SEARCH($9, Sarg[[50..100)])]), id = 749576
        BindableTableScan(table=[[title]]), id = 747039


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `AN`.`PERSON_ID` = `N`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `AN`.`person_id` = `N`.`id` AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)])
  LogicalProject(name=[$2], title=[$43])
    LogicalFilter(condition=[AND(=($17, '[us]'), =($23, 'character-name-in-title'), =($1, $33), =($33, $9), =($10, $42), =($42, $31), =($32, $22), =($42, $26), =($27, $15), =($1, $9), =($10, $26), =($10, $31), =($26, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)]), id = 752215
  BindableProject(name=[$2], title=[$43]), id = 752214
    BindableJoin(condition=[=($10, $42)], joinType=[inner]), id = 752213
      BindableJoin(condition=[=($1, $33)], joinType=[inner]), id = 752212
        BindableJoin(condition=[AND(=($22, $32), =($10, $31))], joinType=[inner]), id = 752211
          BindableJoin(condition=[AND(=($27, $15), =($10, $26))], joinType=[inner]), id = 752210
            BindableJoin(condition=[true], joinType=[inner]), id = 752209
              BindableJoin(condition=[true], joinType=[inner]), id = 752207
                BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 752205
                  BindableTableScan(table=[[aka_name]]), id = 749648
                  BindableTableScan(table=[[cast_info]]), id = 749652
                BindableFilter(condition=[=($2, '[us]')]), id = 752206
                  BindableTableScan(table=[[company_name]]), id = 749664
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 752208
                BindableTableScan(table=[[keyword]]), id = 749676
            BindableTableScan(table=[[movie_companies]]), id = 749688
          BindableTableScan(table=[[movie_keyword]]), id = 749700
        BindableTableScan(table=[[name]]), id = 749712
      BindableTableScan(table=[[title]]), id = 749724


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND t.episode_nr < 100 AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `T`.`EPISODE_NR` < 100 AND `AN`.`PERSON_ID` = `N`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `T`.`episode_nr` < 100 AND `AN`.`person_id` = `N`.`id` AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)])
  LogicalProject(name=[$2], title=[$43])
    LogicalFilter(condition=[AND(=($17, '[us]'), =($23, 'character-name-in-title'), <($51, 100), =($1, $33), =($33, $9), =($10, $42), =($42, $31), =($32, $22), =($42, $26), =($27, $15), =($1, $9), =($10, $26), =($10, $31), =($26, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)]), id = 754900
  BindableProject(name=[$2], title=[$43]), id = 754899
    BindableJoin(condition=[=($10, $42)], joinType=[inner]), id = 754898
      BindableJoin(condition=[=($1, $33)], joinType=[inner]), id = 754896
        BindableJoin(condition=[AND(=($22, $32), =($10, $31))], joinType=[inner]), id = 754895
          BindableJoin(condition=[AND(=($27, $15), =($10, $26))], joinType=[inner]), id = 754894
            BindableJoin(condition=[true], joinType=[inner]), id = 754893
              BindableJoin(condition=[true], joinType=[inner]), id = 754891
                BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 754889
                  BindableTableScan(table=[[aka_name]]), id = 752284
                  BindableTableScan(table=[[cast_info]]), id = 752288
                BindableFilter(condition=[=($2, '[us]')]), id = 754890
                  BindableTableScan(table=[[company_name]]), id = 752300
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 754892
                BindableTableScan(table=[[keyword]]), id = 752312
            BindableTableScan(table=[[movie_companies]]), id = 752324
          BindableTableScan(table=[[movie_keyword]]), id = 752336
        BindableTableScan(table=[[name]]), id = 752348
      BindableFilter(condition=[<($9, 100)]), id = 754897
        BindableTableScan(table=[[title]]), id = 752360


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS cool_actor_pseudonym, MIN(t.title) AS series_named_after_char FROM aka_name AS an, cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND t.episode_nr >= 5 AND t.episode_nr < 100 AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `T`.`EPISODE_NR` >= 5 AND `T`.`EPISODE_NR` < 100 AND `AN`.`PERSON_ID` = `N`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `COOL_ACTOR_PSEUDONYM`, MIN(`T`.`TITLE`) AS `SERIES_NAMED_AFTER_CHAR`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `T`.`episode_nr` >= 5 AND `T`.`episode_nr` < 100 AND `AN`.`person_id` = `N`.`id` AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)])
  LogicalProject(name=[$2], title=[$43])
    LogicalFilter(condition=[AND(=($17, '[us]'), =($23, 'character-name-in-title'), >=($51, 5), <($51, 100), =($1, $33), =($33, $9), =($10, $42), =($42, $31), =($32, $22), =($42, $26), =($27, $15), =($1, $9), =($10, $26), =($10, $31), =($26, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COOL_ACTOR_PSEUDONYM=[MIN($0)], SERIES_NAMED_AFTER_CHAR=[MIN($1)]), id = 757585
  BindableProject(name=[$2], title=[$43]), id = 757584
    BindableJoin(condition=[=($10, $42)], joinType=[inner]), id = 757583
      BindableJoin(condition=[=($1, $33)], joinType=[inner]), id = 757581
        BindableJoin(condition=[AND(=($22, $32), =($10, $31))], joinType=[inner]), id = 757580
          BindableJoin(condition=[AND(=($27, $15), =($10, $26))], joinType=[inner]), id = 757579
            BindableJoin(condition=[true], joinType=[inner]), id = 757578
              BindableJoin(condition=[true], joinType=[inner]), id = 757576
                BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 757574
                  BindableTableScan(table=[[aka_name]]), id = 754969
                  BindableTableScan(table=[[cast_info]]), id = 754973
                BindableFilter(condition=[=($2, '[us]')]), id = 757575
                  BindableTableScan(table=[[company_name]]), id = 754985
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 757577
                BindableTableScan(table=[[keyword]]), id = 754997
            BindableTableScan(table=[[movie_companies]]), id = 755009
          BindableTableScan(table=[[movie_keyword]]), id = 755021
        BindableTableScan(table=[[name]]), id = 755033
      BindableFilter(condition=[SEARCH($9, Sarg[[5..100)])]), id = 757582
        BindableTableScan(table=[[title]]), id = 755045


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS member_in_charnamed_american_movie, MIN(n.name) AS a1 FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND n.name LIKE 'B%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_AMERICAN_MOVIE`, MIN(`N`.`NAME`) AS `A1`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `N`.`NAME` LIKE 'B%' AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_AMERICAN_MOVIE`, MIN(`N`.`NAME`) AS `A1`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `N`.`name` LIKE 'B%' AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalProject(MEMBER_IN_CHARNAMED_AMERICAN_MOVIE=[$0], A1=[$0])
  LogicalAggregate(group=[{}], A1=[MIN($0)])
    LogicalProject(name0=[$26])
      LogicalFilter(condition=[AND(=($9, '[us]'), =($15, 'character-name-in-title'), LIKE($26, 'B%'), =($25, $1), =($2, $34), =($34, $23), =($24, $14), =($34, $18), =($19, $7), =($2, $18), =($2, $23), =($18, $23))])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[title]])


[Physical plan]
BindableProject(MEMBER_IN_CHARNAMED_AMERICAN_MOVIE=[$0], A1=[$0]), id = 759430
  BindableAggregate(group=[{}], A1=[MIN($0)]), id = 759429
    BindableProject(name0=[$26]), id = 759428
      BindableJoin(condition=[=($2, $34)], joinType=[inner]), id = 759427
        BindableJoin(condition=[=($25, $1)], joinType=[inner]), id = 759426
          BindableJoin(condition=[AND(=($14, $24), =($2, $23))], joinType=[inner]), id = 759424
            BindableJoin(condition=[AND(=($19, $7), =($2, $18))], joinType=[inner]), id = 759423
              BindableJoin(condition=[true], joinType=[inner]), id = 759422
                BindableJoin(condition=[true], joinType=[inner]), id = 759420
                  BindableTableScan(table=[[cast_info]]), id = 757651
                  BindableFilter(condition=[=($2, '[us]')]), id = 759419
                    BindableTableScan(table=[[company_name]]), id = 757655
                BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 759421
                  BindableTableScan(table=[[keyword]]), id = 757667
              BindableTableScan(table=[[movie_companies]]), id = 757679
            BindableTableScan(table=[[movie_keyword]]), id = 757691
          BindableFilter(condition=[LIKE($1, 'B%')]), id = 759425
            BindableTableScan(table=[[name]]), id = 757703
        BindableTableScan(table=[[title]]), id = 757715


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS member_in_charnamed_movie, MIN(n.name) AS a1 FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword ='character-name-in-title' AND n.name LIKE 'Z%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`, MIN(`N`.`NAME`) AS `A1`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'character-name-in-title' AND `N`.`NAME` LIKE 'Z%' AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`, MIN(`N`.`NAME`) AS `A1`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'character-name-in-title' AND `N`.`name` LIKE 'Z%' AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalProject(MEMBER_IN_CHARNAMED_MOVIE=[$0], A1=[$0])
  LogicalAggregate(group=[{}], A1=[MIN($0)])
    LogicalProject(name0=[$26])
      LogicalFilter(condition=[AND(=($15, 'character-name-in-title'), LIKE($26, 'Z%'), =($25, $1), =($2, $34), =($34, $23), =($24, $14), =($34, $18), =($19, $7), =($2, $18), =($2, $23), =($18, $23))])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[title]])


[Physical plan]
BindableProject(MEMBER_IN_CHARNAMED_MOVIE=[$0], A1=[$0]), id = 761190
  BindableAggregate(group=[{}], A1=[MIN($0)]), id = 761189
    BindableProject(name0=[$26]), id = 761188
      BindableJoin(condition=[=($2, $34)], joinType=[inner]), id = 761187
        BindableJoin(condition=[=($25, $1)], joinType=[inner]), id = 761186
          BindableJoin(condition=[AND(=($14, $24), =($2, $23))], joinType=[inner]), id = 761184
            BindableJoin(condition=[AND(=($19, $7), =($2, $18))], joinType=[inner]), id = 761183
              BindableJoin(condition=[true], joinType=[inner]), id = 761182
                BindableJoin(condition=[true], joinType=[inner]), id = 761180
                  BindableTableScan(table=[[cast_info]]), id = 759496
                  BindableTableScan(table=[[company_name]]), id = 759500
                BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 761181
                  BindableTableScan(table=[[keyword]]), id = 759512
              BindableTableScan(table=[[movie_companies]]), id = 759524
            BindableTableScan(table=[[movie_keyword]]), id = 759536
          BindableFilter(condition=[LIKE($1, 'Z%')]), id = 761185
            BindableTableScan(table=[[name]]), id = 759548
        BindableTableScan(table=[[title]]), id = 759560


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS member_in_charnamed_movie, MIN(n.name) AS a1 FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword ='character-name-in-title' AND n.name LIKE 'X%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`, MIN(`N`.`NAME`) AS `A1`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'character-name-in-title' AND `N`.`NAME` LIKE 'X%' AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`, MIN(`N`.`NAME`) AS `A1`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'character-name-in-title' AND `N`.`name` LIKE 'X%' AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalProject(MEMBER_IN_CHARNAMED_MOVIE=[$0], A1=[$0])
  LogicalAggregate(group=[{}], A1=[MIN($0)])
    LogicalProject(name0=[$26])
      LogicalFilter(condition=[AND(=($15, 'character-name-in-title'), LIKE($26, 'X%'), =($25, $1), =($2, $34), =($34, $23), =($24, $14), =($34, $18), =($19, $7), =($2, $18), =($2, $23), =($18, $23))])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[title]])


[Physical plan]
BindableProject(MEMBER_IN_CHARNAMED_MOVIE=[$0], A1=[$0]), id = 762950
  BindableAggregate(group=[{}], A1=[MIN($0)]), id = 762949
    BindableProject(name0=[$26]), id = 762948
      BindableJoin(condition=[=($2, $34)], joinType=[inner]), id = 762947
        BindableJoin(condition=[=($25, $1)], joinType=[inner]), id = 762946
          BindableJoin(condition=[AND(=($14, $24), =($2, $23))], joinType=[inner]), id = 762944
            BindableJoin(condition=[AND(=($19, $7), =($2, $18))], joinType=[inner]), id = 762943
              BindableJoin(condition=[true], joinType=[inner]), id = 762942
                BindableJoin(condition=[true], joinType=[inner]), id = 762940
                  BindableTableScan(table=[[cast_info]]), id = 761256
                  BindableTableScan(table=[[company_name]]), id = 761260
                BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 762941
                  BindableTableScan(table=[[keyword]]), id = 761272
              BindableTableScan(table=[[movie_companies]]), id = 761284
            BindableTableScan(table=[[movie_keyword]]), id = 761296
          BindableFilter(condition=[LIKE($1, 'X%')]), id = 762945
            BindableTableScan(table=[[name]]), id = 761308
        BindableTableScan(table=[[title]]), id = 761320


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword ='character-name-in-title' AND n.name LIKE '%Bert%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'character-name-in-title' AND `N`.`NAME` LIKE '%Bert%' AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'character-name-in-title' AND `N`.`name` LIKE '%Bert%' AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MEMBER_IN_CHARNAMED_MOVIE=[MIN($0)])
  LogicalProject(name0=[$26])
    LogicalFilter(condition=[AND(=($15, 'character-name-in-title'), LIKE($26, '%Bert%'), =($25, $1), =($2, $34), =($34, $23), =($24, $14), =($34, $18), =($19, $7), =($2, $18), =($2, $23), =($18, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MEMBER_IN_CHARNAMED_MOVIE=[MIN($0)]), id = 764701
  BindableProject(name0=[$26]), id = 764700
    BindableJoin(condition=[=($2, $34)], joinType=[inner]), id = 764699
      BindableJoin(condition=[=($25, $1)], joinType=[inner]), id = 764698
        BindableJoin(condition=[AND(=($14, $24), =($2, $23))], joinType=[inner]), id = 764696
          BindableJoin(condition=[AND(=($19, $7), =($2, $18))], joinType=[inner]), id = 764695
            BindableJoin(condition=[true], joinType=[inner]), id = 764694
              BindableJoin(condition=[true], joinType=[inner]), id = 764692
                BindableTableScan(table=[[cast_info]]), id = 763012
                BindableTableScan(table=[[company_name]]), id = 763016
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 764693
                BindableTableScan(table=[[keyword]]), id = 763028
            BindableTableScan(table=[[movie_companies]]), id = 763040
          BindableTableScan(table=[[movie_keyword]]), id = 763052
        BindableFilter(condition=[LIKE($1, '%Bert%')]), id = 764697
          BindableTableScan(table=[[name]]), id = 763064
      BindableTableScan(table=[[title]]), id = 763076


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MEMBER_IN_CHARNAMED_MOVIE=[MIN($0)])
  LogicalProject(name0=[$26])
    LogicalFilter(condition=[AND(=($9, '[us]'), =($15, 'character-name-in-title'), =($25, $1), =($2, $34), =($34, $23), =($24, $14), =($34, $18), =($19, $7), =($2, $18), =($2, $23), =($18, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MEMBER_IN_CHARNAMED_MOVIE=[MIN($0)]), id = 766494
  BindableProject(name0=[$26]), id = 766493
    BindableJoin(condition=[=($2, $34)], joinType=[inner]), id = 766492
      BindableJoin(condition=[=($25, $1)], joinType=[inner]), id = 766491
        BindableJoin(condition=[AND(=($14, $24), =($2, $23))], joinType=[inner]), id = 766490
          BindableJoin(condition=[AND(=($19, $7), =($2, $18))], joinType=[inner]), id = 766489
            BindableJoin(condition=[true], joinType=[inner]), id = 766488
              BindableJoin(condition=[true], joinType=[inner]), id = 766486
                BindableTableScan(table=[[cast_info]]), id = 764763
                BindableFilter(condition=[=($2, '[us]')]), id = 766485
                  BindableTableScan(table=[[company_name]]), id = 764767
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 766487
                BindableTableScan(table=[[keyword]]), id = 764779
            BindableTableScan(table=[[movie_companies]]), id = 764791
          BindableTableScan(table=[[movie_keyword]]), id = 764803
        BindableTableScan(table=[[name]]), id = 764815
      BindableTableScan(table=[[title]]), id = 764827


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS member_in_charnamed_movie FROM cast_info AS ci, company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword ='character-name-in-title' AND n.name LIKE '%B%' AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.movie_id = mc.movie_id AND ci.movie_id = mk.movie_id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'character-name-in-title' AND `N`.`NAME` LIKE '%B%' AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `MEMBER_IN_CHARNAMED_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'character-name-in-title' AND `N`.`name` LIKE '%B%' AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MEMBER_IN_CHARNAMED_MOVIE=[MIN($0)])
  LogicalProject(name0=[$26])
    LogicalFilter(condition=[AND(=($15, 'character-name-in-title'), LIKE($26, '%B%'), =($25, $1), =($2, $34), =($34, $23), =($24, $14), =($34, $18), =($19, $7), =($2, $18), =($2, $23), =($18, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[company_name]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MEMBER_IN_CHARNAMED_MOVIE=[MIN($0)]), id = 768245
  BindableProject(name0=[$26]), id = 768244
    BindableJoin(condition=[=($2, $34)], joinType=[inner]), id = 768243
      BindableJoin(condition=[=($25, $1)], joinType=[inner]), id = 768242
        BindableJoin(condition=[AND(=($14, $24), =($2, $23))], joinType=[inner]), id = 768240
          BindableJoin(condition=[AND(=($19, $7), =($2, $18))], joinType=[inner]), id = 768239
            BindableJoin(condition=[true], joinType=[inner]), id = 768238
              BindableJoin(condition=[true], joinType=[inner]), id = 768236
                BindableTableScan(table=[[cast_info]]), id = 766556
                BindableTableScan(table=[[company_name]]), id = 766560
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 768237
                BindableTableScan(table=[[keyword]]), id = 766572
            BindableTableScan(table=[[movie_companies]]), id = 766584
          BindableTableScan(table=[[movie_keyword]]), id = 766596
        BindableFilter(condition=[LIKE($1, '%B%')]), id = 768241
          BindableTableScan(table=[[name]]), id = 766608
      BindableTableScan(table=[[title]]), id = 766620


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note IN ('(producer)', '(executive producer)') AND it1.info = 'budget' AND it2.info = 'votes' AND n.gender = 'm' AND n.name LIKE '%Tim%' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(producer)', '(executive producer)') AND `IT1`.`INFO` = 'budget' AND `IT2`.`INFO` = 'votes' AND `N`.`GENDER` = 'm' AND `N`.`NAME` LIKE '%Tim%' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(producer)', '(executive producer)') AND `IT1`.`info` = 'budget' AND `IT2`.`info` = 'votes' AND `N`.`gender` = 'm' AND `N`.`name` LIKE '%Tim%' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MOVIE_TITLE=[MIN($2)])
  LogicalProject(info1=[$14], info2=[$19], title=[$31])
    LogicalFilter(condition=[AND(OR(=($4, '(producer)'), =($4, '(executive producer)')), =($8, 'budget'), =($10, 'votes'), =($25, 'm'), LIKE($22, '%Tim%'), =($30, $12), =($30, $17), =($30, $2), =($2, $12), =($2, $17), =($12, $17), =($21, $1), =($7, $13), =($9, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MOVIE_TITLE=[MIN($2)]), id = 770460
  BindableProject(info1=[$14], info2=[$19], title=[$31]), id = 770459
    BindableJoin(condition=[=($12, $30)], joinType=[inner]), id = 770458
      BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id1=[$9], info0=[$10], id2=[$11], movie_id0=[$12], info_type_id=[$13], info1=[$14], note0=[$15], id4=[$25], movie_id1=[$26], info_type_id0=[$27], info2=[$28], note1=[$29], id3=[$16], name=[$17], imdb_index=[$18], imdb_id=[$19], gender=[$20], name_pcode_cf=[$21], name_pcode_nf=[$22], surname_pcode=[$23], md5sum=[$24]), id = 770457
        BindableJoin(condition=[AND(=($2, $26), =($9, $27))], joinType=[inner]), id = 770456
          BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id1=[$9], info0=[$10], id3=[$20], movie_id0=[$21], info_type_id=[$22], info1=[$23], note0=[$24], id2=[$11], name=[$12], imdb_index=[$13], imdb_id=[$14], gender=[$15], name_pcode_cf=[$16], name_pcode_nf=[$17], surname_pcode=[$18], md5sum=[$19]), id = 770455
            BindableJoin(condition=[AND(=($2, $21), =($7, $22))], joinType=[inner]), id = 770454
              BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id2=[$18], info0=[$19], id1=[$9], name=[$10], imdb_index=[$11], imdb_id=[$12], gender=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17]), id = 770453
                BindableJoin(condition=[true], joinType=[inner]), id = 770452
                  BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id1=[$16], info=[$17], id0=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], gender=[$11], name_pcode_cf=[$12], name_pcode_nf=[$13], surname_pcode=[$14], md5sum=[$15]), id = 770450
                    BindableJoin(condition=[true], joinType=[inner]), id = 770449
                      BindableJoin(condition=[=($7, $1)], joinType=[inner]), id = 770447
                        BindableFilter(condition=[SEARCH($4, Sarg['(executive producer)':VARCHAR, '(producer)':VARCHAR]:VARCHAR)]), id = 770445
                          BindableTableScan(table=[[cast_info]]), id = 768306
                        BindableFilter(condition=[AND(=($4, 'm'), LIKE($1, '%Tim%'))]), id = 770446
                          BindableTableScan(table=[[name]]), id = 768354
                      BindableFilter(condition=[=($1, 'budget')]), id = 770448
                        BindableTableScan(table=[[info_type]]), id = 768310
                  BindableFilter(condition=[=($1, 'votes')]), id = 770451
                    BindableTableScan(table=[[info_type]]), id = 768310
              BindableTableScan(table=[[movie_info]]), id = 768330
          BindableTableScan(table=[[movie_info_idx]]), id = 768342
      BindableTableScan(table=[[title]]), id = 768366


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'rating' AND mi.info IN ('Horror', 'Thriller') AND mi.note IS NULL AND mi_idx.info > '8.0' AND n.gender IS NOT NULL AND n.gender = 'f' AND t.production_year BETWEEN 2008 AND 2014 AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'rating' AND `MI`.`INFO` IN ('Horror', 'Thriller') AND `MI`.`NOTE` IS NULL AND `MI_IDX`.`INFO` > '8.0' AND `N`.`GENDER` IS NOT NULL AND `N`.`GENDER` = 'f' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2008 AND 2014 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'rating' AND `MI`.`info` IN ('Horror', 'Thriller') AND `MI`.`note` IS NULL AND `MI_IDX`.`info` > '8.0' AND `N`.`gender` IS NOT NULL AND `N`.`gender` = 'f' AND `T`.`production_year` BETWEEN ASYMMETRIC 2008 AND 2014 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MOVIE_TITLE=[MIN($2)])
  LogicalProject(info1=[$14], info2=[$19], title=[$31])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), =($8, 'genres'), =($10, 'rating'), OR(=($14, 'Horror'), =($14, 'Thriller')), IS NULL($15), >($19, '8.0'), IS NOT NULL($25), =($25, 'f'), >=($34, 2008), <=($34, 2014), =($30, $12), =($30, $17), =($30, $2), =($2, $12), =($2, $17), =($12, $17), =($21, $1), =($7, $13), =($9, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MOVIE_TITLE=[MIN($2)]), id = 770725
  BindableProject(info1=[$14], info2=[$19], title=[$31]), id = 770724
    BindableJoin(condition=[=($12, $30)], joinType=[inner]), id = 770723
      BindableValues(tuples=[[]]), id = 770675
      BindableFilter(condition=[SEARCH($4, Sarg[[2008..2014]])]), id = 770722
        BindableTableScan(table=[[title]]), id = 770581


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(t.title) AS movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, movie_info AS mi, movie_info_idx AS mi_idx, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND n.gender = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND mi.movie_id = mi_idx.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `MI`.`INFO` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `N`.`GENDER` = 'm' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `MI`.`info` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `N`.`gender` = 'm' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MOVIE_TITLE=[MIN($2)])
  LogicalProject(info1=[$14], info2=[$19], title=[$31])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), =($8, 'genres'), =($10, 'votes'), OR(=($14, 'Horror'), =($14, 'Action'), =($14, 'Sci-Fi'), =($14, 'Thriller'), =($14, 'Crime'), =($14, 'War')), =($25, 'm'), =($30, $12), =($30, $17), =($30, $2), =($2, $12), =($2, $17), =($12, $17), =($21, $1), =($7, $13), =($9, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MOVIE_TITLE=[MIN($2)]), id = 772981
  BindableProject(info1=[$14], info2=[$19], title=[$31]), id = 772980
    BindableJoin(condition=[=($12, $30)], joinType=[inner]), id = 772979
      BindableJoin(condition=[=($21, $1)], joinType=[inner]), id = 772978
        BindableJoin(condition=[AND(=($2, $17), =($9, $18))], joinType=[inner]), id = 772976
          BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id2=[$14], info1=[$15], id1=[$9], movie_id0=[$10], info_type_id=[$11], info0=[$12], note0=[$13]), id = 772975
            BindableJoin(condition=[true], joinType=[inner]), id = 772974
              BindableProject(id1=[$7], person_id=[$8], movie_id0=[$9], person_role_id=[$10], note0=[$11], nr_order=[$12], role_id=[$13], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 772972
                BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 772971
                  BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 772969
                    BindableFilter(condition=[SEARCH($3, Sarg['Action':VARCHAR, 'Crime':VARCHAR, 'Horror':VARCHAR, 'Sci-Fi':VARCHAR, 'Thriller':VARCHAR, 'War':VARCHAR]:VARCHAR)]), id = 772967
                      BindableTableScan(table=[[movie_info]]), id = 770810
                    BindableFilter(condition=[=($1, 'genres')]), id = 772968
                      BindableTableScan(table=[[info_type]]), id = 770790
                  BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 772970
                    BindableTableScan(table=[[cast_info]]), id = 770786
              BindableFilter(condition=[=($1, 'votes')]), id = 772973
                BindableTableScan(table=[[info_type]]), id = 770790
          BindableTableScan(table=[[movie_info_idx]]), id = 770822
        BindableFilter(condition=[=($4, 'm')]), id = 772977
          BindableTableScan(table=[[name]]), id = 770834
      BindableTableScan(table=[[title]]), id = 770846


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND mc.note IS NOT NULL AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%') AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%') AND n.gender ='f' AND n.name LIKE '%Ang%' AND rt.role ='actress' AND t.production_year BETWEEN 2005 AND 2009 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `MC`.`NOTE` IS NOT NULL AND (`MC`.`NOTE` LIKE '%(USA)%' OR `MC`.`NOTE` LIKE '%(worldwide)%') AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%200%' OR `MI`.`INFO` LIKE 'USA:%200%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%Ang%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2005 AND 2009 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `MC`.`note` IS NOT NULL AND (`MC`.`note` LIKE '%(USA)%' OR `MC`.`note` LIKE '%(worldwide)%') AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%200%' OR `MI`.`info` LIKE 'USA:%200%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%Ang%' AND `RT`.`role` = 'actress' AND `T`.`production_year` BETWEEN ASYMMETRIC 2005 AND 2009 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], VOICED_MOVIE=[MIN($1)])
  LogicalProject(name2=[$42], title=[$53])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($30, 'release dates'), IS NOT NULL($35), OR(LIKE($35, '%(USA)%'), LIKE($35, '%(worldwide)%')), IS NOT NULL($39), OR(LIKE($39, 'Japan:%200%'), LIKE($39, 'USA:%200%')), =($45, 'f'), LIKE($42, '%Ang%'), =($51, 'actress'), >=($56, 2005), <=($56, 2009), =($52, $37), =($52, $32), =($52, $17), =($32, $17), =($32, $37), =($37, $17), =($22, $33), =($29, $38), =($41, $16), =($50, $21), =($41, $1), =($16, $1), =($8, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[aka_name]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], VOICED_MOVIE=[MIN($1)]), id = 805258
  BindableProject(name2=[$42], title=[$53]), id = 805257
    BindableJoin(condition=[=($37, $52)], joinType=[inner]), id = 805256
      BindableJoin(condition=[=($50, $21)], joinType=[inner]), id = 805254
        BindableJoin(condition=[=($16, $41)], joinType=[inner]), id = 805252
          BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], name0=[$19], imdb_index0=[$20], imdb_id=[$21], name_pcode_nf0=[$22], surname_pcode0=[$23], md5sum0=[$24], id10=[$25], person_id0=[$26], movie_id1=[$27], person_role_id=[$28], note1=[$29], nr_order=[$30], role_id=[$31], id2=[$32], name1=[$33], country_code=[$34], imdb_id0=[$35], name_pcode_nf1=[$36], name_pcode_sf=[$37], md5sum1=[$38], id3=[$39], info0=[$40], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 805250
            BindableProject(id=[$31], movie_id=[$32], info_type_id=[$33], info=[$34], note=[$35], id0=[$36], movie_id0=[$37], company_id=[$38], company_type_id=[$39], note0=[$40], id1=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id00=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], name_pcode_nf0=[$12], surname_pcode0=[$13], md5sum0=[$14], id10=[$15], person_id0=[$16], movie_id1=[$17], person_role_id=[$18], note1=[$19], nr_order=[$20], role_id=[$21], id2=[$22], name1=[$23], country_code=[$24], imdb_id0=[$25], name_pcode_nf1=[$26], name_pcode_sf=[$27], md5sum1=[$28], id3=[$29], info0=[$30]), id = 805249
              BindableProject(id2=[$12], person_id=[$13], name=[$14], imdb_index=[$15], name_pcode_cf=[$16], name_pcode_nf=[$17], surname_pcode=[$18], md5sum=[$19], id00=[$20], name0=[$21], imdb_index0=[$22], imdb_id=[$23], name_pcode_nf0=[$24], surname_pcode0=[$25], md5sum0=[$26], id10=[$27], person_id0=[$28], movie_id1=[$29], person_role_id=[$30], note1=[$31], nr_order=[$32], role_id=[$33], id20=[$34], name1=[$35], country_code=[$36], imdb_id0=[$37], name_pcode_nf1=[$38], name_pcode_sf=[$39], md5sum1=[$40], id1=[$10], info0=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 805248
                BindableJoin(condition=[AND(=($6, $29), =($34, $7))], joinType=[inner]), id = 805247
                  BindableJoin(condition=[=($10, $2)], joinType=[inner]), id = 805240
                    BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 805238
                      BindableFilter(condition=[OR(LIKE($3, 'Japan:%200%'), LIKE($3, 'USA:%200%'))]), id = 805236
                        BindableTableScan(table=[[movie_info]]), id = 773128
                      BindableFilter(condition=[OR(LIKE($4, '%(USA)%'), LIKE($4, '%(worldwide)%'))]), id = 805237
                        BindableTableScan(table=[[movie_companies]]), id = 773116
                    BindableFilter(condition=[=($1, 'release dates')]), id = 805239
                      BindableTableScan(table=[[info_type]]), id = 773104
                  BindableJoin(condition=[true], joinType=[inner]), id = 805246
                    BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 805244
                      BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 805243
                        BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 805242
                          BindableTableScan(table=[[aka_name]]), id = 773064
                          BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 805241
                            BindableTableScan(table=[[cast_info]]), id = 773080
                        BindableTableScan(table=[[char_name]]), id = 773068
                    BindableFilter(condition=[=($2, '[us]')]), id = 805245
                      BindableTableScan(table=[[company_name]]), id = 773092
          BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%Ang%'))]), id = 805251
            BindableTableScan(table=[[name]]), id = 773140
        BindableFilter(condition=[=($1, 'actress')]), id = 805253
          BindableTableScan(table=[[role_type]]), id = 773152
      BindableFilter(condition=[SEARCH($4, Sarg[[2005..2009]])]), id = 805255
        BindableTableScan(table=[[title]]), id = 773164


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS kung_fu_panda FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note = '(voice)' AND cn.country_code ='[us]' AND it.info = 'release dates' AND mc.note LIKE '%(200%)%' AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%') AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%2007%' OR mi.info LIKE 'USA:%2008%') AND n.gender ='f' AND n.name LIKE '%Angel%' AND rt.role ='actress' AND t.production_year BETWEEN 2007 AND 2008 AND t.title LIKE '%Kung%Fu%Panda%' AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `KUNG_FU_PANDA`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` = '(voice)' AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `MC`.`NOTE` LIKE '%(200%)%' AND (`MC`.`NOTE` LIKE '%(USA)%' OR `MC`.`NOTE` LIKE '%(worldwide)%') AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%2007%' OR `MI`.`INFO` LIKE 'USA:%2008%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%Angel%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2007 AND 2008 AND `T`.`TITLE` LIKE '%Kung%Fu%Panda%' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `KUNG_FU_PANDA`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` = '(voice)' AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `MC`.`note` LIKE '%(200%)%' AND (`MC`.`note` LIKE '%(USA)%' OR `MC`.`note` LIKE '%(worldwide)%') AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%2007%' OR `MI`.`info` LIKE 'USA:%2008%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%Angel%' AND `RT`.`role` = 'actress' AND `T`.`production_year` BETWEEN ASYMMETRIC 2007 AND 2008 AND `T`.`title` LIKE '%Kung%Fu%Panda%' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], KUNG_FU_PANDA=[MIN($1)])
  LogicalProject(name2=[$42], title=[$53])
    LogicalFilter(condition=[AND(=($19, '(voice)'), =($24, '[us]'), =($30, 'release dates'), LIKE($35, '%(200%)%'), OR(LIKE($35, '%(USA)%'), LIKE($35, '%(worldwide)%')), IS NOT NULL($39), OR(LIKE($39, 'Japan:%2007%'), LIKE($39, 'USA:%2008%')), =($45, 'f'), LIKE($42, '%Angel%'), =($51, 'actress'), >=($56, 2007), <=($56, 2008), LIKE($53, '%Kung%Fu%Panda%'), =($52, $37), =($52, $32), =($52, $17), =($32, $17), =($32, $37), =($37, $17), =($22, $33), =($29, $38), =($41, $16), =($50, $21), =($41, $1), =($16, $1), =($8, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[aka_name]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], KUNG_FU_PANDA=[MIN($1)]), id = 837534
  BindableProject(name2=[$42], title=[$53]), id = 837533
    BindableJoin(condition=[=($37, $52)], joinType=[inner]), id = 837532
      BindableJoin(condition=[=($50, $21)], joinType=[inner]), id = 837530
        BindableJoin(condition=[=($16, $41)], joinType=[inner]), id = 837528
          BindableJoin(condition=[AND(=($32, $37), =($29, $38))], joinType=[inner]), id = 837526
            BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], name_pcode_nf0=[$12], surname_pcode0=[$13], md5sum0=[$14], id1=[$15], person_id0=[$16], movie_id=[$17], person_role_id=[$18], note=[$19], nr_order=[$20], role_id=[$21], id2=[$22], name1=[$23], country_code=[$24], imdb_id0=[$25], name_pcode_nf1=[$26], name_pcode_sf=[$27], md5sum1=[$28], id4=[$34], info=[$35], id3=[$29], movie_id0=[$30], company_id=[$31], company_type_id=[$32], note0=[$33]), id = 837524
              BindableJoin(condition=[true], joinType=[inner]), id = 837523
                BindableProject(id1=[$12], person_id=[$13], name0=[$14], imdb_index=[$15], name_pcode_cf=[$16], name_pcode_nf0=[$17], surname_pcode=[$18], md5sum0=[$19], id00=[$20], name00=[$21], imdb_index0=[$22], imdb_id0=[$23], name_pcode_nf00=[$24], surname_pcode0=[$25], md5sum00=[$26], id10=[$27], person_id0=[$28], movie_id0=[$29], person_role_id=[$30], note0=[$31], nr_order=[$32], role_id=[$33], id0=[$5], name=[$6], country_code=[$7], imdb_id=[$8], name_pcode_nf=[$9], name_pcode_sf=[$10], md5sum=[$11], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 837521
                  BindableJoin(condition=[=($1, $29)], joinType=[inner]), id = 837520
                    BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 837515
                      BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), OR(LIKE($4, '%(USA)%'), LIKE($4, '%(worldwide)%')))]), id = 837513
                        BindableTableScan(table=[[movie_companies]]), id = 805393
                      BindableFilter(condition=[=($2, '[us]')]), id = 837514
                        BindableTableScan(table=[[company_name]]), id = 805369
                    BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 837519
                      BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 837518
                        BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 837517
                          BindableTableScan(table=[[aka_name]]), id = 805341
                          BindableFilter(condition=[=($4, '(voice)')]), id = 837516
                            BindableTableScan(table=[[cast_info]]), id = 805357
                        BindableTableScan(table=[[char_name]]), id = 805345
                BindableFilter(condition=[=($1, 'release dates')]), id = 837522
                  BindableTableScan(table=[[info_type]]), id = 805381
            BindableFilter(condition=[OR(LIKE($3, 'Japan:%2007%'), LIKE($3, 'USA:%2008%'))]), id = 837525
              BindableTableScan(table=[[movie_info]]), id = 805405
          BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%Angel%'))]), id = 837527
            BindableTableScan(table=[[name]]), id = 805417
        BindableFilter(condition=[=($1, 'actress')]), id = 837529
          BindableTableScan(table=[[role_type]]), id = 805429
      BindableFilter(condition=[AND(SEARCH($4, Sarg[[2007..2008]]), LIKE($1, '%Kung%Fu%Panda%'))]), id = 837531
        BindableTableScan(table=[[title]]), id = 805441


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS jap_engl_voiced_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%') AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND t.production_year > 2000 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `JAP_ENGL_VOICED_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%200%' OR `MI`.`INFO` LIKE 'USA:%200%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` > 2000 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `JAP_ENGL_VOICED_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%200%' OR `MI`.`info` LIKE 'USA:%200%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `T`.`production_year` > 2000 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], JAP_ENGL_VOICED_MOVIE=[MIN($1)])
  LogicalProject(name2=[$42], title=[$53])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($30, 'release dates'), IS NOT NULL($39), OR(LIKE($39, 'Japan:%200%'), LIKE($39, 'USA:%200%')), =($45, 'f'), LIKE($42, '%An%'), =($51, 'actress'), >($56, 2000), =($52, $37), =($52, $32), =($52, $17), =($32, $17), =($32, $37), =($37, $17), =($22, $33), =($29, $38), =($41, $16), =($50, $21), =($41, $1), =($16, $1), =($8, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[aka_name]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], JAP_ENGL_VOICED_MOVIE=[MIN($1)]), id = 869622
  BindableProject(name2=[$42], title=[$53]), id = 869621
    BindableJoin(condition=[=($37, $52)], joinType=[inner]), id = 869620
      BindableJoin(condition=[=($50, $21)], joinType=[inner]), id = 869618
        BindableJoin(condition=[=($16, $41)], joinType=[inner]), id = 869616
          BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], name0=[$19], imdb_index0=[$20], imdb_id=[$21], name_pcode_nf0=[$22], surname_pcode0=[$23], md5sum0=[$24], id10=[$25], person_id0=[$26], movie_id1=[$27], person_role_id=[$28], note1=[$29], nr_order=[$30], role_id=[$31], id2=[$32], name1=[$33], country_code=[$34], imdb_id0=[$35], name_pcode_nf1=[$36], name_pcode_sf=[$37], md5sum1=[$38], id3=[$39], info0=[$40], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 869614
            BindableJoin(condition=[AND(=($39, $2), =($6, $27), =($32, $7))], joinType=[inner]), id = 869613
              BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 869604
                BindableFilter(condition=[OR(LIKE($3, 'Japan:%200%'), LIKE($3, 'USA:%200%'))]), id = 869603
                  BindableTableScan(table=[[movie_info]]), id = 837681
                BindableTableScan(table=[[movie_companies]]), id = 837669
              BindableJoin(condition=[true], joinType=[inner]), id = 869612
                BindableJoin(condition=[true], joinType=[inner]), id = 869610
                  BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 869608
                    BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 869607
                      BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 869606
                        BindableTableScan(table=[[aka_name]]), id = 837617
                        BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 869605
                          BindableTableScan(table=[[cast_info]]), id = 837633
                      BindableTableScan(table=[[char_name]]), id = 837621
                  BindableFilter(condition=[=($2, '[us]')]), id = 869609
                    BindableTableScan(table=[[company_name]]), id = 837645
                BindableFilter(condition=[=($1, 'release dates')]), id = 869611
                  BindableTableScan(table=[[info_type]]), id = 837657
          BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 869615
            BindableTableScan(table=[[name]]), id = 837693
        BindableFilter(condition=[=($1, 'actress')]), id = 869617
          BindableTableScan(table=[[role_type]]), id = 837705
      BindableFilter(condition=[>($4, 2000)]), id = 869619
        BindableTableScan(table=[[title]]), id = 837717


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS voicing_actress, MIN(t.title) AS jap_engl_voiced_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, movie_companies AS mc, movie_info AS mi, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND n.gender ='f' AND rt.role ='actress' AND t.production_year > 2000 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mi.movie_id = ci.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `JAP_ENGL_VOICED_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `N`.`GENDER` = 'f' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` > 2000 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `JAP_ENGL_VOICED_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `N`.`gender` = 'f' AND `RT`.`role` = 'actress' AND `T`.`production_year` > 2000 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], JAP_ENGL_VOICED_MOVIE=[MIN($1)])
  LogicalProject(name2=[$42], title=[$53])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($30, 'release dates'), =($45, 'f'), =($51, 'actress'), >($56, 2000), =($52, $37), =($52, $32), =($52, $17), =($32, $17), =($32, $37), =($37, $17), =($22, $33), =($29, $38), =($41, $16), =($50, $21), =($41, $1), =($16, $1), =($8, $18))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[aka_name]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[company_name]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICING_ACTRESS=[MIN($0)], JAP_ENGL_VOICED_MOVIE=[MIN($1)]), id = 901582
  BindableProject(name2=[$42], title=[$53]), id = 901581
    BindableJoin(condition=[=($37, $52)], joinType=[inner]), id = 901580
      BindableJoin(condition=[=($50, $21)], joinType=[inner]), id = 901578
        BindableJoin(condition=[=($16, $41)], joinType=[inner]), id = 901576
          BindableJoin(condition=[AND(=($32, $37), =($29, $38))], joinType=[inner]), id = 901574
            BindableJoin(condition=[AND(=($32, $17), =($22, $33))], joinType=[inner]), id = 901573
              BindableJoin(condition=[true], joinType=[inner]), id = 901572
                BindableJoin(condition=[true], joinType=[inner]), id = 901570
                  BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 901568
                    BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 901567
                      BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 901566
                        BindableTableScan(table=[[aka_name]]), id = 869705
                        BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 901565
                          BindableTableScan(table=[[cast_info]]), id = 869721
                      BindableTableScan(table=[[char_name]]), id = 869709
                  BindableFilter(condition=[=($2, '[us]')]), id = 901569
                    BindableTableScan(table=[[company_name]]), id = 869733
                BindableFilter(condition=[=($1, 'release dates')]), id = 901571
                  BindableTableScan(table=[[info_type]]), id = 869745
              BindableTableScan(table=[[movie_companies]]), id = 869757
            BindableTableScan(table=[[movie_info]]), id = 869769
          BindableFilter(condition=[=($4, 'f')]), id = 901575
            BindableTableScan(table=[[name]]), id = 869781
        BindableFilter(condition=[=($1, 'actress')]), id = 901577
          BindableTableScan(table=[[role_type]]), id = 869793
      BindableFilter(condition=[>($4, 2000)]), id = 901579
        BindableTableScan(table=[[title]]), id = 869805


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t WHERE ct.kind = 'production companies' AND it.info = 'top 250 rank' AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND (mc.note LIKE '%(co-production)%' OR mc.note LIKE '%(presents)%') AND ct.id = mc.company_type_id AND t.id = mc.movie_id AND t.id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'top 250 rank' AND `MC`.`NOTE` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND (`MC`.`NOTE` LIKE '%(co-production)%' OR `MC`.`NOTE` LIKE '%(presents)%') AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `IT`.`info` = 'top 250 rank' AND `MC`.`note` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND (`MC`.`note` LIKE '%(co-production)%' OR `MC`.`note` LIKE '%(presents)%') AND `CT`.`id` = `MC`.`company_type_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)])
  LogicalProject(note=[$8], title=[$15], production_year=[$18])
    LogicalFilter(condition=[AND(=($1, 'production companies'), =($3, 'top 250 rank'), NOT(LIKE($8, '%(as Metro-Goldwyn-Mayer Pictures)%')), OR(LIKE($8, '%(co-production)%'), LIKE($8, '%(presents)%')), =($0, $7), =($14, $5), =($14, $10), =($5, $10), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)]), id = 903275
  BindableProject(note=[$8], title=[$15], production_year=[$18]), id = 903274
    BindableJoin(condition=[=($5, $14)], joinType=[inner]), id = 903273
      BindableJoin(condition=[AND(=($5, $10), =($2, $11))], joinType=[inner]), id = 903272
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 903271
          BindableJoin(condition=[true], joinType=[inner]), id = 903269
            BindableFilter(condition=[=($1, 'production companies')]), id = 903267
              BindableTableScan(table=[[company_type]]), id = 901630
            BindableFilter(condition=[=($1, 'top 250 rank')]), id = 903268
              BindableTableScan(table=[[info_type]]), id = 901634
          BindableFilter(condition=[AND(OR(LIKE($4, '%(co-production)%'), LIKE($4, '%(presents)%')), NOT(LIKE($4, '%(as Metro-Goldwyn-Mayer Pictures)%')))]), id = 903270
            BindableTableScan(table=[[movie_companies]]), id = 901646
        BindableTableScan(table=[[movie_info_idx]]), id = 901658
      BindableTableScan(table=[[title]]), id = 901670


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t WHERE ct.kind = 'production companies' AND it.info = 'bottom 10 rank' AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND t.production_year BETWEEN 2005 AND 2010 AND ct.id = mc.company_type_id AND t.id = mc.movie_id AND t.id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'bottom 10 rank' AND `MC`.`NOTE` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2005 AND 2010 AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `IT`.`info` = 'bottom 10 rank' AND `MC`.`note` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND `T`.`production_year` BETWEEN ASYMMETRIC 2005 AND 2010 AND `CT`.`id` = `MC`.`company_type_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)])
  LogicalProject(note=[$8], title=[$15], production_year=[$18])
    LogicalFilter(condition=[AND(=($1, 'production companies'), =($3, 'bottom 10 rank'), NOT(LIKE($8, '%(as Metro-Goldwyn-Mayer Pictures)%')), >=($18, 2005), <=($18, 2010), =($0, $7), =($14, $5), =($14, $10), =($5, $10), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)]), id = 904999
  BindableProject(note=[$8], title=[$15], production_year=[$18]), id = 904998
    BindableJoin(condition=[=($5, $14)], joinType=[inner]), id = 904997
      BindableJoin(condition=[AND(=($5, $10), =($2, $11))], joinType=[inner]), id = 904995
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 904994
          BindableJoin(condition=[true], joinType=[inner]), id = 904992
            BindableFilter(condition=[=($1, 'production companies')]), id = 904990
              BindableTableScan(table=[[company_type]]), id = 903323
            BindableFilter(condition=[=($1, 'bottom 10 rank')]), id = 904991
              BindableTableScan(table=[[info_type]]), id = 903327
          BindableFilter(condition=[NOT(LIKE($4, '%(as Metro-Goldwyn-Mayer Pictures)%'))]), id = 904993
            BindableTableScan(table=[[movie_companies]]), id = 903339
        BindableTableScan(table=[[movie_info_idx]]), id = 903351
      BindableFilter(condition=[SEARCH($4, Sarg[[2005..2010]])]), id = 904996
        BindableTableScan(table=[[title]]), id = 903363


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t WHERE ct.kind = 'production companies' AND it.info = 'top 250 rank' AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND (mc.note LIKE '%(co-production)%') AND t.production_year >2010 AND ct.id = mc.company_type_id AND t.id = mc.movie_id AND t.id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'top 250 rank' AND `MC`.`NOTE` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND `MC`.`NOTE` LIKE '%(co-production)%' AND `T`.`PRODUCTION_YEAR` > 2010 AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `IT`.`info` = 'top 250 rank' AND `MC`.`note` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND `MC`.`note` LIKE '%(co-production)%' AND `T`.`production_year` > 2010 AND `CT`.`id` = `MC`.`company_type_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)])
  LogicalProject(note=[$8], title=[$15], production_year=[$18])
    LogicalFilter(condition=[AND(=($1, 'production companies'), =($3, 'top 250 rank'), NOT(LIKE($8, '%(as Metro-Goldwyn-Mayer Pictures)%')), LIKE($8, '%(co-production)%'), >($18, 2010), =($0, $7), =($14, $5), =($14, $10), =($5, $10), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)]), id = 906723
  BindableProject(note=[$8], title=[$15], production_year=[$18]), id = 906722
    BindableJoin(condition=[=($5, $14)], joinType=[inner]), id = 906721
      BindableJoin(condition=[AND(=($5, $10), =($2, $11))], joinType=[inner]), id = 906719
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 906718
          BindableJoin(condition=[true], joinType=[inner]), id = 906716
            BindableFilter(condition=[=($1, 'production companies')]), id = 906714
              BindableTableScan(table=[[company_type]]), id = 905047
            BindableFilter(condition=[=($1, 'top 250 rank')]), id = 906715
              BindableTableScan(table=[[info_type]]), id = 905051
          BindableFilter(condition=[AND(LIKE($4, '%(co-production)%'), NOT(LIKE($4, '%(as Metro-Goldwyn-Mayer Pictures)%')))]), id = 906717
            BindableTableScan(table=[[movie_companies]]), id = 905063
        BindableTableScan(table=[[movie_info_idx]]), id = 905075
      BindableFilter(condition=[>($4, 2010)]), id = 906720
        BindableTableScan(table=[[title]]), id = 905087


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mc.note) AS production_note, MIN(t.title) AS movie_title, MIN(t.production_year) AS movie_year FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info_idx AS mi_idx, title AS t WHERE ct.kind = 'production companies' AND it.info = 'bottom 10 rank' AND mc.note NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND t.production_year >2000 AND ct.id = mc.company_type_id AND t.id = mc.movie_id AND t.id = mi_idx.movie_id AND mc.movie_id = mi_idx.movie_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `IT`.`INFO` = 'bottom 10 rank' AND `MC`.`NOTE` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND `T`.`PRODUCTION_YEAR` > 2000 AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MC`.`NOTE`) AS `PRODUCTION_NOTE`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`, MIN(`T`.`PRODUCTION_YEAR`) AS `MOVIE_YEAR`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `IT`.`info` = 'bottom 10 rank' AND `MC`.`note` NOT LIKE '%(as Metro-Goldwyn-Mayer Pictures)%' AND `T`.`production_year` > 2000 AND `CT`.`id` = `MC`.`company_type_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)])
  LogicalProject(note=[$8], title=[$15], production_year=[$18])
    LogicalFilter(condition=[AND(=($1, 'production companies'), =($3, 'bottom 10 rank'), NOT(LIKE($8, '%(as Metro-Goldwyn-Mayer Pictures)%')), >($18, 2000), =($0, $7), =($14, $5), =($14, $10), =($5, $10), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info_idx]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCTION_NOTE=[MIN($0)], MOVIE_TITLE=[MIN($1)], MOVIE_YEAR=[MIN($2)]), id = 908447
  BindableProject(note=[$8], title=[$15], production_year=[$18]), id = 908446
    BindableJoin(condition=[=($5, $14)], joinType=[inner]), id = 908445
      BindableJoin(condition=[AND(=($5, $10), =($2, $11))], joinType=[inner]), id = 908443
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 908442
          BindableJoin(condition=[true], joinType=[inner]), id = 908440
            BindableFilter(condition=[=($1, 'production companies')]), id = 908438
              BindableTableScan(table=[[company_type]]), id = 906771
            BindableFilter(condition=[=($1, 'bottom 10 rank')]), id = 908439
              BindableTableScan(table=[[info_type]]), id = 906775
          BindableFilter(condition=[NOT(LIKE($4, '%(as Metro-Goldwyn-Mayer Pictures)%'))]), id = 908441
            BindableTableScan(table=[[movie_companies]]), id = 906787
        BindableTableScan(table=[[movie_info_idx]]), id = 906799
      BindableFilter(condition=[>($4, 2000)]), id = 908444
        BindableTableScan(table=[[title]]), id = 906811


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS complete_downey_ironman_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE '%complete%' AND chn.name NOT LIKE '%Sherlock%' AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%Iron%Man%') AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND kt.kind = 'movie' AND t.production_year > 1950 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `COMPLETE_DOWNEY_IRONMAN_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE '%complete%' AND `CHN`.`NAME` NOT LIKE '%Sherlock%' AND (`CHN`.`NAME` LIKE '%Tony%Stark%' OR `CHN`.`NAME` LIKE '%Iron%Man%') AND `K`.`KEYWORD` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `KT`.`KIND` = 'movie' AND `T`.`PRODUCTION_YEAR` > 1950 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `COMPLETE_DOWNEY_IRONMAN_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE '%complete%' AND `CHN`.`name` NOT LIKE '%Sherlock%' AND (`CHN`.`name` LIKE '%Tony%Stark%' OR `CHN`.`name` LIKE '%Iron%Man%') AND `K`.`keyword` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `KT`.`kind` = 'movie' AND `T`.`production_year` > 1950 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CI`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `CI`.`person_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], COMPLETE_DOWNEY_IRONMAN_MOVIE=[MIN($0)])
  LogicalProject(title=[$40])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, '%complete%'), NOT(LIKE($9, '%Sherlock%')), OR(LIKE($9, '%Tony%Stark%'), LIKE($9, '%Iron%Man%')), OR(=($23, 'superhero'), =($23, 'sequel'), =($23, 'second-part'), =($23, 'marvel-comics'), =($23, 'based-on-comic'), =($23, 'tv-special'), =($23, 'fight'), =($23, 'violence')), =($26, 'movie'), >($43, 1950), =($25, $42), =($39, $28), =($39, $17), =($39, $1), =($28, $17), =($28, $1), =($17, $1), =($8, $18), =($30, $16), =($22, $29), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[complete_cast]])
                        LogicalTableScan(table=[[comp_cast_type]])
                      LogicalTableScan(table=[[comp_cast_type]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[kind_type]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COMPLETE_DOWNEY_IRONMAN_MOVIE=[MIN($0)]), id = 947978
  BindableProject(title=[$40]), id = 947977
    BindableJoin(condition=[AND(=($25, $42), =($28, $39))], joinType=[inner]), id = 947976
      BindableJoin(condition=[=($30, $16)], joinType=[inner]), id = 947974
        BindableJoin(condition=[AND(=($17, $28), =($22, $29))], joinType=[inner]), id = 947973
          BindableJoin(condition=[true], joinType=[inner]), id = 947972
            BindableJoin(condition=[true], joinType=[inner]), id = 947970
              BindableJoin(condition=[AND(=($17, $1), =($8, $18))], joinType=[inner]), id = 947968
                BindableJoin(condition=[true], joinType=[inner]), id = 947967
                  BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 947965
                    BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 947963
                      BindableTableScan(table=[[complete_cast]]), id = 908529
                      BindableFilter(condition=[=($1, 'cast')]), id = 947962
                        BindableTableScan(table=[[comp_cast_type]]), id = 908533
                    BindableFilter(condition=[LIKE($1, '%complete%')]), id = 947964
                      BindableTableScan(table=[[comp_cast_type]]), id = 908533
                  BindableFilter(condition=[AND(OR(LIKE($1, '%Tony%Stark%'), LIKE($1, '%Iron%Man%')), NOT(LIKE($1, '%Sherlock%')))]), id = 947966
                    BindableTableScan(table=[[char_name]]), id = 908553
                BindableTableScan(table=[[cast_info]]), id = 908565
              BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'fight':VARCHAR, 'marvel-comics':VARCHAR, 'second-part':VARCHAR, 'sequel':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 947969
                BindableTableScan(table=[[keyword]]), id = 908577
            BindableFilter(condition=[=($1, 'movie')]), id = 947971
              BindableTableScan(table=[[kind_type]]), id = 908589
          BindableTableScan(table=[[movie_keyword]]), id = 908601
        BindableTableScan(table=[[name]]), id = 908613
      BindableFilter(condition=[>($4, 1950)]), id = 947975
        BindableTableScan(table=[[title]]), id = 908625


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS complete_downey_ironman_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE '%complete%' AND chn.name NOT LIKE '%Sherlock%' AND (chn.name LIKE '%Tony%Stark%' OR chn.name LIKE '%Iron%Man%') AND k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND kt.kind = 'movie' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `COMPLETE_DOWNEY_IRONMAN_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE '%complete%' AND `CHN`.`NAME` NOT LIKE '%Sherlock%' AND (`CHN`.`NAME` LIKE '%Tony%Stark%' OR `CHN`.`NAME` LIKE '%Iron%Man%') AND `K`.`KEYWORD` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `KT`.`KIND` = 'movie' AND `N`.`NAME` LIKE '%Downey%Robert%' AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `COMPLETE_DOWNEY_IRONMAN_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE '%complete%' AND `CHN`.`name` NOT LIKE '%Sherlock%' AND (`CHN`.`name` LIKE '%Tony%Stark%' OR `CHN`.`name` LIKE '%Iron%Man%') AND `K`.`keyword` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `KT`.`kind` = 'movie' AND `N`.`name` LIKE '%Downey%Robert%' AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CI`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `CI`.`person_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], COMPLETE_DOWNEY_IRONMAN_MOVIE=[MIN($0)])
  LogicalProject(title=[$40])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, '%complete%'), NOT(LIKE($9, '%Sherlock%')), OR(LIKE($9, '%Tony%Stark%'), LIKE($9, '%Iron%Man%')), OR(=($23, 'superhero'), =($23, 'sequel'), =($23, 'second-part'), =($23, 'marvel-comics'), =($23, 'based-on-comic'), =($23, 'tv-special'), =($23, 'fight'), =($23, 'violence')), =($26, 'movie'), LIKE($31, '%Downey%Robert%'), >($43, 2000), =($25, $42), =($39, $28), =($39, $17), =($39, $1), =($28, $17), =($28, $1), =($17, $1), =($8, $18), =($30, $16), =($22, $29), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[complete_cast]])
                        LogicalTableScan(table=[[comp_cast_type]])
                      LogicalTableScan(table=[[comp_cast_type]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[kind_type]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COMPLETE_DOWNEY_IRONMAN_MOVIE=[MIN($0)]), id = 987576
  BindableProject(title=[$40]), id = 987575
    BindableJoin(condition=[AND(=($25, $42), =($28, $39))], joinType=[inner]), id = 987574
      BindableJoin(condition=[=($30, $16)], joinType=[inner]), id = 987572
        BindableJoin(condition=[AND(=($17, $28), =($22, $29))], joinType=[inner]), id = 987570
          BindableJoin(condition=[true], joinType=[inner]), id = 987569
            BindableJoin(condition=[true], joinType=[inner]), id = 987567
              BindableJoin(condition=[AND(=($17, $1), =($8, $18))], joinType=[inner]), id = 987565
                BindableJoin(condition=[true], joinType=[inner]), id = 987564
                  BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 987562
                    BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 987560
                      BindableTableScan(table=[[complete_cast]]), id = 948060
                      BindableFilter(condition=[=($1, 'cast')]), id = 987559
                        BindableTableScan(table=[[comp_cast_type]]), id = 948064
                    BindableFilter(condition=[LIKE($1, '%complete%')]), id = 987561
                      BindableTableScan(table=[[comp_cast_type]]), id = 948064
                  BindableFilter(condition=[AND(OR(LIKE($1, '%Tony%Stark%'), LIKE($1, '%Iron%Man%')), NOT(LIKE($1, '%Sherlock%')))]), id = 987563
                    BindableTableScan(table=[[char_name]]), id = 948084
                BindableTableScan(table=[[cast_info]]), id = 948096
              BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'fight':VARCHAR, 'marvel-comics':VARCHAR, 'second-part':VARCHAR, 'sequel':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 987566
                BindableTableScan(table=[[keyword]]), id = 948108
            BindableFilter(condition=[=($1, 'movie')]), id = 987568
              BindableTableScan(table=[[kind_type]]), id = 948120
          BindableTableScan(table=[[movie_keyword]]), id = 948132
        BindableFilter(condition=[LIKE($1, '%Downey%Robert%')]), id = 987571
          BindableTableScan(table=[[name]]), id = 948144
      BindableFilter(condition=[>($4, 2000)]), id = 987573
        BindableTableScan(table=[[title]]), id = 948156


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS cast_member, MIN(t.title) AS complete_dynamic_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, keyword AS k, kind_type AS kt, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE '%complete%' AND chn.name IS NOT NULL AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%') AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind = 'movie' AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND ci.movie_id = cc.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `CAST_MEMBER`, MIN(`T`.`TITLE`) AS `COMPLETE_DYNAMIC_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE '%complete%' AND `CHN`.`NAME` IS NOT NULL AND (`CHN`.`NAME` LIKE '%man%' OR `CHN`.`NAME` LIKE '%Man%') AND `K`.`KEYWORD` IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND `KT`.`KIND` = 'movie' AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `CAST_MEMBER`, MIN(`T`.`TITLE`) AS `COMPLETE_DYNAMIC_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE '%complete%' AND `CHN`.`name` IS NOT NULL AND (`CHN`.`name` LIKE '%man%' OR `CHN`.`name` LIKE '%Man%') AND `K`.`keyword` IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND `KT`.`kind` = 'movie' AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CI`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `CI`.`person_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], CAST_MEMBER=[MIN($0)], COMPLETE_DYNAMIC_HERO_MOVIE=[MIN($1)])
  LogicalProject(name0=[$31], title=[$40])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, '%complete%'), IS NOT NULL($9), OR(LIKE($9, '%man%'), LIKE($9, '%Man%')), OR(=($23, 'superhero'), =($23, 'marvel-comics'), =($23, 'based-on-comic'), =($23, 'tv-special'), =($23, 'fight'), =($23, 'violence'), =($23, 'magnet'), =($23, 'web'), =($23, 'claw'), =($23, 'laser')), =($26, 'movie'), >($43, 2000), =($25, $42), =($39, $28), =($39, $17), =($39, $1), =($28, $17), =($28, $1), =($17, $1), =($8, $18), =($30, $16), =($22, $29), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalTableScan(table=[[complete_cast]])
                        LogicalTableScan(table=[[comp_cast_type]])
                      LogicalTableScan(table=[[comp_cast_type]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[keyword]])
              LogicalTableScan(table=[[kind_type]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CAST_MEMBER=[MIN($0)], COMPLETE_DYNAMIC_HERO_MOVIE=[MIN($1)]), id = 1027107
  BindableProject(name0=[$31], title=[$40]), id = 1027106
    BindableJoin(condition=[AND(=($25, $42), =($28, $39))], joinType=[inner]), id = 1027105
      BindableJoin(condition=[=($30, $16)], joinType=[inner]), id = 1027103
        BindableJoin(condition=[AND(=($17, $28), =($22, $29))], joinType=[inner]), id = 1027102
          BindableJoin(condition=[true], joinType=[inner]), id = 1027101
            BindableJoin(condition=[true], joinType=[inner]), id = 1027099
              BindableJoin(condition=[AND(=($17, $1), =($8, $18))], joinType=[inner]), id = 1027097
                BindableJoin(condition=[true], joinType=[inner]), id = 1027096
                  BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 1027094
                    BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 1027092
                      BindableTableScan(table=[[complete_cast]]), id = 987658
                      BindableFilter(condition=[=($1, 'cast')]), id = 1027091
                        BindableTableScan(table=[[comp_cast_type]]), id = 987662
                    BindableFilter(condition=[LIKE($1, '%complete%')]), id = 1027093
                      BindableTableScan(table=[[comp_cast_type]]), id = 987662
                  BindableFilter(condition=[OR(LIKE($1, '%man%'), LIKE($1, '%Man%'))]), id = 1027095
                    BindableTableScan(table=[[char_name]]), id = 987682
                BindableTableScan(table=[[cast_info]]), id = 987694
              BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'claw':VARCHAR, 'fight':VARCHAR, 'laser':VARCHAR, 'magnet':VARCHAR, 'marvel-comics':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR, 'web':VARCHAR]:VARCHAR)]), id = 1027098
                BindableTableScan(table=[[keyword]]), id = 987706
            BindableFilter(condition=[=($1, 'movie')]), id = 1027100
              BindableTableScan(table=[[kind_type]]), id = 987718
          BindableTableScan(table=[[movie_keyword]]), id = 987730
        BindableTableScan(table=[[name]]), id = 987742
      BindableFilter(condition=[>($4, 2000)]), id = 1027104
        BindableTableScan(table=[[title]]), id = 987754


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS company_name, MIN(lt.link) AS link_type, MIN(t.title) AS western_follow_up FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind = 'production companies' AND k.keyword = 'sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND t.production_year BETWEEN 1950 AND 2000 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND mi.movie_id = t.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mi.movie_id AND mk.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `COMPANY_NAME`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `WESTERN_FOLLOW_UP`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1950 AND 2000 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `MI`.`MOVIE_ID` = `T`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `COMPANY_NAME`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `WESTERN_FOLLOW_UP`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND `T`.`production_year` BETWEEN ASYMMETRIC 1950 AND 2000 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `MI`.`movie_id` = `T`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `ML`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COMPANY_NAME=[MIN($0)], LINK_TYPE=[MIN($1)], WESTERN_FOLLOW_UP=[MIN($2)])
  LogicalProject(name=[$1], link=[$13], title=[$32])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), OR(LIKE($1, '%Film%'), LIKE($1, '%Warner%')), =($8, 'production companies'), =($10, 'sequel'), LIKE($13, '%follow%'), IS NULL($18), OR(=($22, 'Sweden'), =($22, 'Norway'), =($22, 'Germany'), =($22, 'Denmark'), =($22, 'Swedish'), =($22, 'Denish'), =($22, 'Norwegian'), =($22, 'German')), >=($35, 1950), <=($35, 2000), =($12, $30), =($28, $31), =($31, $25), =($26, $9), =($31, $15), =($17, $7), =($16, $0), =($20, $31), =($28, $25), =($28, $15), =($25, $15), =($28, $20), =($25, $20), =($15, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[link_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COMPANY_NAME=[MIN($0)], LINK_TYPE=[MIN($1)], WESTERN_FOLLOW_UP=[MIN($2)]), id = 1027441
  BindableProject(name=[$1], link=[$13], title=[$32]), id = 1027440
    BindableJoin(condition=[=($28, $31)], joinType=[inner]), id = 1027439
      BindableValues(tuples=[[]]), id = 1027385
      BindableFilter(condition=[SEARCH($4, Sarg[[1950..2000]])]), id = 1027438
        BindableTableScan(table=[[title]]), id = 1027271


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS company_name, MIN(lt.link) AS link_type, MIN(t.title) AS german_follow_up FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind = 'production companies' AND k.keyword = 'sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND mi.info IN ('Germany', 'German') AND t.production_year BETWEEN 2000 AND 2010 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND mi.movie_id = t.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mi.movie_id AND mk.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `COMPANY_NAME`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `GERMAN_FOLLOW_UP`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `MI`.`INFO` IN ('Germany', 'German') AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2000 AND 2010 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `MI`.`MOVIE_ID` = `T`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `COMPANY_NAME`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `GERMAN_FOLLOW_UP`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `MI`.`info` IN ('Germany', 'German') AND `T`.`production_year` BETWEEN ASYMMETRIC 2000 AND 2010 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `MI`.`movie_id` = `T`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `ML`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COMPANY_NAME=[MIN($0)], LINK_TYPE=[MIN($1)], GERMAN_FOLLOW_UP=[MIN($2)])
  LogicalProject(name=[$1], link=[$13], title=[$32])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), OR(LIKE($1, '%Film%'), LIKE($1, '%Warner%')), =($8, 'production companies'), =($10, 'sequel'), LIKE($13, '%follow%'), IS NULL($18), OR(=($22, 'Germany'), =($22, 'German')), >=($35, 2000), <=($35, 2010), =($12, $30), =($28, $31), =($31, $25), =($26, $9), =($31, $15), =($17, $7), =($16, $0), =($20, $31), =($28, $25), =($28, $15), =($25, $15), =($28, $20), =($25, $20), =($15, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[link_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COMPANY_NAME=[MIN($0)], LINK_TYPE=[MIN($1)], GERMAN_FOLLOW_UP=[MIN($2)]), id = 1027775
  BindableProject(name=[$1], link=[$13], title=[$32]), id = 1027774
    BindableJoin(condition=[=($28, $31)], joinType=[inner]), id = 1027773
      BindableValues(tuples=[[]]), id = 1027719
      BindableFilter(condition=[SEARCH($4, Sarg[[2000..2010]])]), id = 1027772
        BindableTableScan(table=[[title]]), id = 1027605


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS company_name, MIN(lt.link) AS link_type, MIN(t.title) AS western_follow_up FROM company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t WHERE NOT cn.country_code = '[pl]' AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind = 'production companies' AND k.keyword = 'sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND mi.info IN ( 'Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English' ) AND t.production_year BETWEEN 1950 AND 2010 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND mi.movie_id = t.id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mi.movie_id AND mk.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `COMPANY_NAME`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `WESTERN_FOLLOW_UP`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English') AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1950 AND 2010 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `MI`.`MOVIE_ID` = `T`.`ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `COMPANY_NAME`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `WESTERN_FOLLOW_UP`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English') AND `T`.`production_year` BETWEEN ASYMMETRIC 1950 AND 2010 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `MI`.`movie_id` = `T`.`id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `ML`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COMPANY_NAME=[MIN($0)], LINK_TYPE=[MIN($1)], WESTERN_FOLLOW_UP=[MIN($2)])
  LogicalProject(name=[$1], link=[$13], title=[$32])
    LogicalFilter(condition=[AND(NOT(=($2, '[pl]')), OR(LIKE($1, '%Film%'), LIKE($1, '%Warner%')), =($8, 'production companies'), =($10, 'sequel'), LIKE($13, '%follow%'), IS NULL($18), OR(=($22, 'Sweden'), =($22, 'Norway'), =($22, 'Germany'), =($22, 'Denmark'), =($22, 'Swedish'), =($22, 'Denish'), =($22, 'Norwegian'), =($22, 'German'), =($22, 'English')), >=($35, 1950), <=($35, 2010), =($12, $30), =($28, $31), =($31, $25), =($26, $9), =($31, $15), =($17, $7), =($16, $0), =($20, $31), =($28, $25), =($28, $15), =($25, $15), =($28, $20), =($25, $20), =($15, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[link_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COMPANY_NAME=[MIN($0)], LINK_TYPE=[MIN($1)], WESTERN_FOLLOW_UP=[MIN($2)]), id = 1028109
  BindableProject(name=[$1], link=[$13], title=[$32]), id = 1028108
    BindableJoin(condition=[=($28, $31)], joinType=[inner]), id = 1028107
      BindableValues(tuples=[[]]), id = 1028053
      BindableFilter(condition=[SEARCH($4, Sarg[[1950..2010]])]), id = 1028106
        BindableTableScan(table=[[title]]), id = 1027939


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE NOT cn.country_code = '[us]' AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mc.note NOT LIKE '%(USA)%' AND mc.note LIKE '%(200%)%' AND mi.info IN ('Germany', 'German', 'USA', 'American') AND mi_idx.info < '7.0' AND t.production_year > 2008 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MI`.`INFO` IN ('Germany', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '7.0' AND `T`.`PRODUCTION_YEAR` > 2008 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MC`.`note` NOT LIKE '%(USA)%' AND `MC`.`note` LIKE '%(200%)%' AND `MI`.`info` IN ('Germany', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '7.0' AND `T`.`production_year` > 2008 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$31], title=[$37])
    LogicalFilter(condition=[AND(NOT(=($2, '[us]')), =($10, 'countries'), =($12, 'rating'), OR(=($14, 'murder'), =($14, 'murder-in-title'), =($14, 'blood'), =($14, 'violence')), OR(=($17, 'movie'), =($17, 'episode')), NOT(LIKE($22, '%(USA)%')), LIKE($22, '%(200%)%'), OR(=($26, 'Germany'), =($26, 'German'), =($26, 'USA'), =($26, 'American')), <($31, '7.0'), >($40, 2008), =($16, $39), =($36, $24), =($36, $34), =($36, $29), =($36, $19), =($34, $24), =($34, $29), =($34, $19), =($24, $29), =($24, $19), =($19, $29), =($13, $35), =($9, $25), =($11, $30), =($7, $21), =($0, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)]), id = 1136530
  BindableProject(name=[$1], info2=[$31], title=[$37]), id = 1136529
    BindableJoin(condition=[AND(=($16, $39), =($24, $36))], joinType=[inner]), id = 1136528
      BindableJoin(condition=[AND(=($24, $34), =($13, $35))], joinType=[inner]), id = 1136526
        BindableJoin(condition=[AND(=($24, $29), =($11, $30))], joinType=[inner]), id = 1136525
          BindableProject(id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id00=[$17], kind=[$18], id10=[$19], info0=[$20], id2=[$21], info00=[$22], id3=[$23], keyword=[$24], phonetic_code=[$25], id4=[$26], kind0=[$27], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 1136523
            BindableProject(id=[$18], movie_id=[$19], info_type_id=[$20], info=[$21], note=[$22], id0=[$23], movie_id0=[$24], company_id=[$25], company_type_id=[$26], note0=[$27], id1=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id00=[$7], kind=[$8], id10=[$9], info0=[$10], id2=[$11], info00=[$12], id3=[$13], keyword=[$14], phonetic_code=[$15], id4=[$16], kind0=[$17]), id = 1136522
              BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id3=[$13], keyword=[$14], phonetic_code=[$15], id5=[$26], kind0=[$27], id4=[$16], movie_id=[$17], info_type_id=[$18], info1=[$19], note=[$20], id00=[$21], movie_id0=[$22], company_id=[$23], company_type_id=[$24], note0=[$25]), id = 1136521
                BindableJoin(condition=[true], joinType=[inner]), id = 1136520
                  BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id4=[$23], keyword=[$24], phonetic_code=[$25], id3=[$13], movie_id=[$14], info_type_id=[$15], info1=[$16], note=[$17], id00=[$18], movie_id0=[$19], company_id=[$20], company_type_id=[$21], note0=[$22]), id = 1136518
                    BindableJoin(condition=[true], joinType=[inner]), id = 1136517
                      BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id3=[$21], info1=[$22], id2=[$11], movie_id=[$12], info_type_id=[$13], info0=[$14], note=[$15], id00=[$16], movie_id0=[$17], company_id=[$18], company_type_id=[$19], note0=[$20]), id = 1136515
                        BindableJoin(condition=[true], joinType=[inner]), id = 1136514
                          BindableProject(id2=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum=[$18], id00=[$19], kind=[$20], id1=[$10], info0=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 1136512
                            BindableJoin(condition=[AND(=($19, $8), =($12, $7))], joinType=[inner]), id = 1136511
                              BindableJoin(condition=[=($10, $2)], joinType=[inner]), id = 1136508
                                BindableJoin(condition=[=($1, $6)], joinType=[inner]), id = 1136506
                                  BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 1136504
                                    BindableTableScan(table=[[movie_info]]), id = 1028270
                                  BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), NOT(LIKE($4, '%(USA)%')))]), id = 1136505
                                    BindableTableScan(table=[[movie_companies]]), id = 1028258
                                BindableFilter(condition=[=($1, 'countries')]), id = 1136507
                                  BindableTableScan(table=[[info_type]]), id = 1028214
                              BindableJoin(condition=[true], joinType=[inner]), id = 1136510
                                BindableFilter(condition=[<>($2, '[us]')]), id = 1136509
                                  BindableTableScan(table=[[company_name]]), id = 1028198
                                BindableTableScan(table=[[company_type]]), id = 1028202
                          BindableFilter(condition=[=($1, 'rating')]), id = 1136513
                            BindableTableScan(table=[[info_type]]), id = 1028214
                      BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 1136516
                        BindableTableScan(table=[[keyword]]), id = 1028234
                  BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 1136519
                    BindableTableScan(table=[[kind_type]]), id = 1028246
          BindableFilter(condition=[<($3, '7.0')]), id = 1136524
            BindableTableScan(table=[[movie_info_idx]]), id = 1028282
        BindableTableScan(table=[[movie_keyword]]), id = 1028294
      BindableFilter(condition=[>($4, 2008)]), id = 1136527
        BindableTableScan(table=[[title]]), id = 1028306


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE (NOT cn.country_code = '[us]' OR cn.country_code IS NULL) AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mc.note NOT LIKE '%(USA)%' AND mc.note LIKE '%(200%)%' AND mi.info IN ('Germany', 'German', 'USA', 'American') AND mi_idx.info < '7.0' AND t.production_year > 2009 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE (NOT `CN`.`COUNTRY_CODE` = '[us]' OR `CN`.`COUNTRY_CODE` IS NULL) AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MI`.`INFO` IN ('Germany', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '7.0' AND `T`.`PRODUCTION_YEAR` > 2009 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE (NOT `CN`.`country_code` = '[us]' OR `CN`.`country_code` IS NULL) AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MC`.`note` NOT LIKE '%(USA)%' AND `MC`.`note` LIKE '%(200%)%' AND `MI`.`info` IN ('Germany', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '7.0' AND `T`.`production_year` > 2009 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$31], title=[$37])
    LogicalFilter(condition=[AND(OR(NOT(=($2, '[us]')), IS NULL($2)), =($10, 'countries'), =($12, 'rating'), OR(=($14, 'murder'), =($14, 'murder-in-title'), =($14, 'blood'), =($14, 'violence')), OR(=($17, 'movie'), =($17, 'episode')), NOT(LIKE($22, '%(USA)%')), LIKE($22, '%(200%)%'), OR(=($26, 'Germany'), =($26, 'German'), =($26, 'USA'), =($26, 'American')), <($31, '7.0'), >($40, 2009), =($16, $39), =($36, $24), =($36, $34), =($36, $29), =($36, $19), =($34, $24), =($34, $29), =($34, $19), =($24, $29), =($24, $19), =($19, $29), =($13, $35), =($9, $25), =($11, $30), =($7, $21), =($0, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)]), id = 1244951
  BindableProject(name=[$1], info2=[$31], title=[$37]), id = 1244950
    BindableJoin(condition=[AND(=($16, $39), =($24, $36))], joinType=[inner]), id = 1244949
      BindableJoin(condition=[AND(=($24, $34), =($13, $35))], joinType=[inner]), id = 1244947
        BindableJoin(condition=[AND(=($24, $29), =($11, $30))], joinType=[inner]), id = 1244946
          BindableProject(id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id00=[$17], kind=[$18], id10=[$19], info0=[$20], id2=[$21], info00=[$22], id3=[$23], keyword=[$24], phonetic_code=[$25], id4=[$26], kind0=[$27], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 1244944
            BindableProject(id=[$18], movie_id=[$19], info_type_id=[$20], info=[$21], note=[$22], id0=[$23], movie_id0=[$24], company_id=[$25], company_type_id=[$26], note0=[$27], id1=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id00=[$7], kind=[$8], id10=[$9], info0=[$10], id2=[$11], info00=[$12], id3=[$13], keyword=[$14], phonetic_code=[$15], id4=[$16], kind0=[$17]), id = 1244943
              BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id3=[$13], keyword=[$14], phonetic_code=[$15], id5=[$26], kind0=[$27], id4=[$16], movie_id=[$17], info_type_id=[$18], info1=[$19], note=[$20], id00=[$21], movie_id0=[$22], company_id=[$23], company_type_id=[$24], note0=[$25]), id = 1244942
                BindableJoin(condition=[true], joinType=[inner]), id = 1244941
                  BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id4=[$23], keyword=[$24], phonetic_code=[$25], id3=[$13], movie_id=[$14], info_type_id=[$15], info1=[$16], note=[$17], id00=[$18], movie_id0=[$19], company_id=[$20], company_type_id=[$21], note0=[$22]), id = 1244939
                    BindableJoin(condition=[true], joinType=[inner]), id = 1244938
                      BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id3=[$21], info1=[$22], id2=[$11], movie_id=[$12], info_type_id=[$13], info0=[$14], note=[$15], id00=[$16], movie_id0=[$17], company_id=[$18], company_type_id=[$19], note0=[$20]), id = 1244936
                        BindableJoin(condition=[true], joinType=[inner]), id = 1244935
                          BindableProject(id2=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum=[$18], id00=[$19], kind=[$20], id1=[$10], info0=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 1244933
                            BindableJoin(condition=[AND(=($19, $8), =($12, $7))], joinType=[inner]), id = 1244932
                              BindableJoin(condition=[=($10, $2)], joinType=[inner]), id = 1244929
                                BindableJoin(condition=[=($1, $6)], joinType=[inner]), id = 1244927
                                  BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 1244925
                                    BindableTableScan(table=[[movie_info]]), id = 1136691
                                  BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), NOT(LIKE($4, '%(USA)%')))]), id = 1244926
                                    BindableTableScan(table=[[movie_companies]]), id = 1136679
                                BindableFilter(condition=[=($1, 'countries')]), id = 1244928
                                  BindableTableScan(table=[[info_type]]), id = 1136635
                              BindableJoin(condition=[true], joinType=[inner]), id = 1244931
                                BindableFilter(condition=[<>($2, '[us]')]), id = 1244930
                                  BindableTableScan(table=[[company_name]]), id = 1136619
                                BindableTableScan(table=[[company_type]]), id = 1136623
                          BindableFilter(condition=[=($1, 'rating')]), id = 1244934
                            BindableTableScan(table=[[info_type]]), id = 1136635
                      BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 1244937
                        BindableTableScan(table=[[keyword]]), id = 1136655
                  BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 1244940
                    BindableTableScan(table=[[kind_type]]), id = 1136667
          BindableFilter(condition=[<($3, '7.0')]), id = 1244945
            BindableTableScan(table=[[movie_info_idx]]), id = 1136703
        BindableTableScan(table=[[movie_keyword]]), id = 1136715
      BindableFilter(condition=[>($4, 2009)]), id = 1244948
        BindableTableScan(table=[[title]]), id = 1136727


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE (NOT cn.country_code = '[us]' OR cn.country_code IS NULL) AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mc.note NOT LIKE '%(USA)%' AND mc.note LIKE '%(200%)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info < '8.5' AND t.production_year > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE (NOT `CN`.`COUNTRY_CODE` = '[us]' OR `CN`.`COUNTRY_CODE` IS NULL) AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '8.5' AND `T`.`PRODUCTION_YEAR` > 2005 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE (NOT `CN`.`country_code` = '[us]' OR `CN`.`country_code` IS NULL) AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MC`.`note` NOT LIKE '%(USA)%' AND `MC`.`note` LIKE '%(200%)%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '8.5' AND `T`.`production_year` > 2005 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$31], title=[$37])
    LogicalFilter(condition=[AND(OR(NOT(=($2, '[us]')), IS NULL($2)), =($10, 'countries'), =($12, 'rating'), OR(=($14, 'murder'), =($14, 'murder-in-title'), =($14, 'blood'), =($14, 'violence')), OR(=($17, 'movie'), =($17, 'episode')), NOT(LIKE($22, '%(USA)%')), LIKE($22, '%(200%)%'), OR(=($26, 'Sweden'), =($26, 'Norway'), =($26, 'Germany'), =($26, 'Denmark'), =($26, 'Swedish'), =($26, 'Danish'), =($26, 'Norwegian'), =($26, 'German'), =($26, 'USA'), =($26, 'American')), <($31, '8.5'), >($40, 2005), =($16, $39), =($36, $24), =($36, $34), =($36, $29), =($36, $19), =($34, $24), =($34, $29), =($34, $19), =($24, $29), =($24, $19), =($19, $29), =($13, $35), =($9, $25), =($11, $30), =($7, $21), =($0, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)]), id = 1353372
  BindableProject(name=[$1], info2=[$31], title=[$37]), id = 1353371
    BindableJoin(condition=[AND(=($16, $39), =($24, $36))], joinType=[inner]), id = 1353370
      BindableJoin(condition=[AND(=($24, $34), =($13, $35))], joinType=[inner]), id = 1353368
        BindableJoin(condition=[AND(=($24, $29), =($11, $30))], joinType=[inner]), id = 1353367
          BindableProject(id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id00=[$17], kind=[$18], id10=[$19], info0=[$20], id2=[$21], info00=[$22], id3=[$23], keyword=[$24], phonetic_code=[$25], id4=[$26], kind0=[$27], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 1353365
            BindableProject(id=[$18], movie_id=[$19], info_type_id=[$20], info=[$21], note=[$22], id0=[$23], movie_id0=[$24], company_id=[$25], company_type_id=[$26], note0=[$27], id1=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id00=[$7], kind=[$8], id10=[$9], info0=[$10], id2=[$11], info00=[$12], id3=[$13], keyword=[$14], phonetic_code=[$15], id4=[$16], kind0=[$17]), id = 1353364
              BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id3=[$13], keyword=[$14], phonetic_code=[$15], id5=[$26], kind0=[$27], id4=[$16], movie_id=[$17], info_type_id=[$18], info1=[$19], note=[$20], id00=[$21], movie_id0=[$22], company_id=[$23], company_type_id=[$24], note0=[$25]), id = 1353363
                BindableJoin(condition=[true], joinType=[inner]), id = 1353362
                  BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id2=[$11], info0=[$12], id4=[$23], keyword=[$24], phonetic_code=[$25], id3=[$13], movie_id=[$14], info_type_id=[$15], info1=[$16], note=[$17], id00=[$18], movie_id0=[$19], company_id=[$20], company_type_id=[$21], note0=[$22]), id = 1353360
                    BindableJoin(condition=[true], joinType=[inner]), id = 1353359
                      BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], kind=[$8], id1=[$9], info=[$10], id3=[$21], info1=[$22], id2=[$11], movie_id=[$12], info_type_id=[$13], info0=[$14], note=[$15], id00=[$16], movie_id0=[$17], company_id=[$18], company_type_id=[$19], note0=[$20]), id = 1353357
                        BindableJoin(condition=[true], joinType=[inner]), id = 1353356
                          BindableProject(id2=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum=[$18], id00=[$19], kind=[$20], id1=[$10], info0=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 1353354
                            BindableJoin(condition=[AND(=($19, $8), =($12, $7))], joinType=[inner]), id = 1353353
                              BindableJoin(condition=[=($10, $2)], joinType=[inner]), id = 1353350
                                BindableJoin(condition=[=($1, $6)], joinType=[inner]), id = 1353348
                                  BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Danish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 1353346
                                    BindableTableScan(table=[[movie_info]]), id = 1245112
                                  BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), NOT(LIKE($4, '%(USA)%')))]), id = 1353347
                                    BindableTableScan(table=[[movie_companies]]), id = 1245100
                                BindableFilter(condition=[=($1, 'countries')]), id = 1353349
                                  BindableTableScan(table=[[info_type]]), id = 1245056
                              BindableJoin(condition=[true], joinType=[inner]), id = 1353352
                                BindableFilter(condition=[<>($2, '[us]')]), id = 1353351
                                  BindableTableScan(table=[[company_name]]), id = 1245040
                                BindableTableScan(table=[[company_type]]), id = 1245044
                          BindableFilter(condition=[=($1, 'rating')]), id = 1353355
                            BindableTableScan(table=[[info_type]]), id = 1245056
                      BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 1353358
                        BindableTableScan(table=[[keyword]]), id = 1245076
                  BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 1353361
                    BindableTableScan(table=[[kind_type]]), id = 1245088
          BindableFilter(condition=[<($3, '8.5')]), id = 1353366
            BindableTableScan(table=[[movie_info_idx]]), id = 1245124
        BindableTableScan(table=[[movie_keyword]]), id = 1245136
      BindableFilter(condition=[>($4, 2005)]), id = 1353369
        BindableTableScan(table=[[title]]), id = 1245148


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS western_violent_movie FROM company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE NOT (cn.country_code = '[us]') AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info < '8.5' AND t.production_year > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mc.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE NOT `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '8.5' AND `T`.`PRODUCTION_YEAR` > 2005 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `WESTERN_VIOLENT_MOVIE`
FROM `COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE NOT `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '8.5' AND `T`.`production_year` > 2005 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)])
  LogicalProject(name=[$1], info2=[$31], title=[$37])
    LogicalFilter(condition=[AND(NOT(=($2, '[us]')), =($10, 'countries'), =($12, 'rating'), OR(=($14, 'murder'), =($14, 'murder-in-title'), =($14, 'blood'), =($14, 'violence')), OR(=($17, 'movie'), =($17, 'episode')), OR(=($26, 'Sweden'), =($26, 'Norway'), =($26, 'Germany'), =($26, 'Denmark'), =($26, 'Swedish'), =($26, 'Danish'), =($26, 'Norwegian'), =($26, 'German'), =($26, 'USA'), =($26, 'American')), <($31, '8.5'), >($40, 2005), =($16, $39), =($36, $24), =($36, $34), =($36, $29), =($36, $19), =($34, $24), =($34, $29), =($34, $19), =($24, $29), =($24, $19), =($19, $29), =($13, $35), =($9, $25), =($11, $30), =($7, $21), =($0, $20))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], WESTERN_VIOLENT_MOVIE=[MIN($2)]), id = 1460131
  BindableProject(name=[$1], info2=[$31], title=[$37]), id = 1460130
    BindableJoin(condition=[AND(=($16, $39), =($24, $36))], joinType=[inner]), id = 1460129
      BindableJoin(condition=[AND(=($24, $34), =($13, $35))], joinType=[inner]), id = 1460127
        BindableJoin(condition=[AND(=($24, $29), =($11, $30))], joinType=[inner]), id = 1460126
          BindableProject(id1=[$10], name=[$11], country_code=[$12], imdb_id=[$13], name_pcode_nf=[$14], name_pcode_sf=[$15], md5sum=[$16], id00=[$17], kind=[$18], id10=[$19], info0=[$20], id2=[$21], info00=[$22], id3=[$23], keyword=[$24], phonetic_code=[$25], id4=[$26], kind0=[$27], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 1460124
            BindableJoin(condition=[AND(=($19, $2), =($17, $8), =($10, $7))], joinType=[inner]), id = 1460123
              BindableJoin(condition=[=($1, $6)], joinType=[inner]), id = 1460112
                BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Danish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 1460111
                  BindableTableScan(table=[[movie_info]]), id = 1353533
                BindableTableScan(table=[[movie_companies]]), id = 1353521
              BindableJoin(condition=[true], joinType=[inner]), id = 1460122
                BindableJoin(condition=[true], joinType=[inner]), id = 1460120
                  BindableJoin(condition=[true], joinType=[inner]), id = 1460118
                    BindableJoin(condition=[true], joinType=[inner]), id = 1460116
                      BindableJoin(condition=[true], joinType=[inner]), id = 1460114
                        BindableFilter(condition=[<>($2, '[us]')]), id = 1460113
                          BindableTableScan(table=[[company_name]]), id = 1353461
                        BindableTableScan(table=[[company_type]]), id = 1353465
                      BindableFilter(condition=[=($1, 'countries')]), id = 1460115
                        BindableTableScan(table=[[info_type]]), id = 1353477
                    BindableFilter(condition=[=($1, 'rating')]), id = 1460117
                      BindableTableScan(table=[[info_type]]), id = 1353477
                  BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 1460119
                    BindableTableScan(table=[[keyword]]), id = 1353497
                BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 1460121
                  BindableTableScan(table=[[kind_type]]), id = 1353509
          BindableFilter(condition=[<($3, '8.5')]), id = 1460125
            BindableTableScan(table=[[movie_info_idx]]), id = 1353545
        BindableTableScan(table=[[movie_keyword]]), id = 1353557
      BindableFilter(condition=[>($4, 2005)]), id = 1460128
        BindableTableScan(table=[[title]]), id = 1353569


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(kt.kind) AS movie_kind, MIN(t.title) AS complete_us_internet_movie FROM complete_cast AS cc, comp_cast_type AS cct1, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cct1.kind = 'complete+verified' AND cn.country_code = '[us]' AND it1.info = 'release dates' AND kt.kind IN ('movie') AND mi.note LIKE '%internet%' AND mi.info IS NOT NULL AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%') AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND cct1.id = cc.status_id

[SqlNode]
SELECT MIN(`KT`.`KIND`) AS `MOVIE_KIND`, MIN(`T`.`TITLE`) AS `COMPLETE_US_INTERNET_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'complete+verified' AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'release dates' AND `KT`.`KIND` IN ('movie') AND `MI`.`NOTE` LIKE '%internet%' AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'USA:% 199%' OR `MI`.`INFO` LIKE 'USA:% 200%') AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CCT1`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`KT`.`KIND`) AS `MOVIE_KIND`, MIN(`T`.`TITLE`) AS `COMPLETE_US_INTERNET_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'complete+verified' AND `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'release dates' AND `KT`.`kind` IN ('movie') AND `MI`.`note` LIKE '%internet%' AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'USA:% 199%' OR `MI`.`info` LIKE 'USA:% 200%') AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CCT1`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KIND=[MIN($0)], COMPLETE_US_INTERNET_MOVIE=[MIN($1)])
  LogicalProject(kind1=[$21], title=[$36])
    LogicalFilter(condition=[AND(=($5, 'complete+verified'), =($8, '[us]'), =($16, 'release dates'), =($21, 'movie'), LIKE($31, '%internet%'), IS NOT NULL($30), OR(LIKE($30, 'USA:% 199%'), LIKE($30, 'USA:% 200%')), >($39, 2000), =($20, $38), =($35, $28), =($35, $33), =($35, $23), =($35, $1), =($33, $28), =($33, $23), =($33, $1), =($28, $23), =($28, $1), =($23, $1), =($17, $34), =($15, $29), =($6, $24), =($13, $25), =($4, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[complete_cast]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KIND=[MIN($0)], COMPLETE_US_INTERNET_MOVIE=[MIN($1)]), id = 1699667
  BindableProject(kind1=[$21], title=[$36]), id = 1699666
    BindableJoin(condition=[AND(=($20, $38), =($28, $35))], joinType=[inner]), id = 1699665
      BindableJoin(condition=[AND(=($28, $33), =($17, $34))], joinType=[inner]), id = 1699663
        BindableProject(id1=[$10], movie_id1=[$11], subject_id=[$12], status_id=[$13], id00=[$14], kind=[$15], id10=[$16], name=[$17], country_code=[$18], imdb_id=[$19], name_pcode_nf=[$20], name_pcode_sf=[$21], md5sum=[$22], id2=[$23], kind0=[$24], id3=[$25], info0=[$26], id4=[$27], keyword=[$28], phonetic_code=[$29], id5=[$30], kind1=[$31], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 1699662
          BindableProject(id=[$22], movie_id=[$23], info_type_id=[$24], info=[$25], note=[$26], id0=[$27], movie_id0=[$28], company_id=[$29], company_type_id=[$30], note0=[$31], id1=[$0], movie_id1=[$1], subject_id=[$2], status_id=[$3], id00=[$4], kind=[$5], id10=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info0=[$16], id4=[$17], keyword=[$18], phonetic_code=[$19], id5=[$20], kind1=[$21]), id = 1699661
            BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info=[$16], id4=[$17], keyword=[$18], phonetic_code=[$19], id6=[$30], kind1=[$31], id5=[$20], movie_id0=[$21], info_type_id=[$22], info0=[$23], note=[$24], id00=[$25], movie_id00=[$26], company_id=[$27], company_type_id=[$28], note0=[$29]), id = 1699660
              BindableJoin(condition=[true], joinType=[inner]), id = 1699659
                BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info=[$16], id5=[$27], keyword=[$28], phonetic_code=[$29], id4=[$17], movie_id0=[$18], info_type_id=[$19], info0=[$20], note=[$21], id00=[$22], movie_id00=[$23], company_id=[$24], company_type_id=[$25], note0=[$26]), id = 1699657
                  BindableJoin(condition=[true], joinType=[inner]), id = 1699656
                    BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id4=[$25], info0=[$26], id3=[$15], movie_id0=[$16], info_type_id=[$17], info=[$18], note=[$19], id00=[$20], movie_id00=[$21], company_id=[$22], company_type_id=[$23], note0=[$24]), id = 1699655
                      BindableJoin(condition=[=($25, $17)], joinType=[inner]), id = 1699654
                        BindableProject(id2=[$12], movie_id1=[$13], subject_id=[$14], status_id=[$15], id00=[$16], kind0=[$17], id10=[$18], name=[$19], country_code=[$20], imdb_id=[$21], name_pcode_nf=[$22], name_pcode_sf=[$23], md5sum=[$24], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 1699652
                          BindableJoin(condition=[AND(=($6, $13), =($18, $7))], joinType=[inner]), id = 1699651
                            BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 1699646
                              BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 1699645
                                BindableFilter(condition=[AND(LIKE($4, '%internet%'), OR(LIKE($3, 'USA:% 199%'), LIKE($3, 'USA:% 200%')))]), id = 1699644
                                  BindableTableScan(table=[[movie_info]]), id = 1460309
                                BindableTableScan(table=[[movie_companies]]), id = 1460297
                              BindableTableScan(table=[[company_type]]), id = 1460249
                            BindableJoin(condition=[true], joinType=[inner]), id = 1699650
                              BindableJoin(condition=[=($4, $3)], joinType=[inner]), id = 1699648
                                BindableTableScan(table=[[complete_cast]]), id = 1460221
                                BindableFilter(condition=[=($1, 'complete+verified')]), id = 1699647
                                  BindableTableScan(table=[[comp_cast_type]]), id = 1460225
                              BindableFilter(condition=[=($2, '[us]')]), id = 1699649
                                BindableTableScan(table=[[company_name]]), id = 1460237
                        BindableFilter(condition=[=($1, 'release dates')]), id = 1699653
                          BindableTableScan(table=[[info_type]]), id = 1460261
                    BindableTableScan(table=[[keyword]]), id = 1460273
                BindableFilter(condition=[=($1, 'movie')]), id = 1699658
                  BindableTableScan(table=[[kind_type]]), id = 1460285
        BindableTableScan(table=[[movie_keyword]]), id = 1460321
      BindableFilter(condition=[>($4, 2000)]), id = 1699664
        BindableTableScan(table=[[title]]), id = 1460333


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(kt.kind) AS movie_kind, MIN(t.title) AS complete_nerdy_internet_movie FROM complete_cast AS cc, comp_cast_type AS cct1, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cct1.kind = 'complete+verified' AND cn.country_code = '[us]' AND it1.info = 'release dates' AND k.keyword IN ('nerd', 'loner', 'alienation', 'dignity') AND kt.kind IN ('movie') AND mi.note LIKE '%internet%' AND mi.info LIKE 'USA:% 200%' AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND cct1.id = cc.status_id

[SqlNode]
SELECT MIN(`KT`.`KIND`) AS `MOVIE_KIND`, MIN(`T`.`TITLE`) AS `COMPLETE_NERDY_INTERNET_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'complete+verified' AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'release dates' AND `K`.`KEYWORD` IN ('nerd', 'loner', 'alienation', 'dignity') AND `KT`.`KIND` IN ('movie') AND `MI`.`NOTE` LIKE '%internet%' AND `MI`.`INFO` LIKE 'USA:% 200%' AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CCT1`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`KT`.`KIND`) AS `MOVIE_KIND`, MIN(`T`.`TITLE`) AS `COMPLETE_NERDY_INTERNET_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'complete+verified' AND `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'release dates' AND `K`.`keyword` IN ('nerd', 'loner', 'alienation', 'dignity') AND `KT`.`kind` IN ('movie') AND `MI`.`note` LIKE '%internet%' AND `MI`.`info` LIKE 'USA:% 200%' AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CCT1`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KIND=[MIN($0)], COMPLETE_NERDY_INTERNET_MOVIE=[MIN($1)])
  LogicalProject(kind1=[$21], title=[$36])
    LogicalFilter(condition=[AND(=($5, 'complete+verified'), =($8, '[us]'), =($16, 'release dates'), OR(=($18, 'nerd'), =($18, 'loner'), =($18, 'alienation'), =($18, 'dignity')), =($21, 'movie'), LIKE($31, '%internet%'), LIKE($30, 'USA:% 200%'), >($39, 2000), =($20, $38), =($35, $28), =($35, $33), =($35, $23), =($35, $1), =($33, $28), =($33, $23), =($33, $1), =($28, $23), =($28, $1), =($23, $1), =($17, $34), =($15, $29), =($6, $24), =($13, $25), =($4, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[complete_cast]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KIND=[MIN($0)], COMPLETE_NERDY_INTERNET_MOVIE=[MIN($1)]), id = 1939732
  BindableProject(kind1=[$21], title=[$36]), id = 1939731
    BindableJoin(condition=[AND(=($20, $38), =($28, $35))], joinType=[inner]), id = 1939730
      BindableJoin(condition=[AND(=($28, $33), =($17, $34))], joinType=[inner]), id = 1939728
        BindableProject(id1=[$10], movie_id1=[$11], subject_id=[$12], status_id=[$13], id00=[$14], kind=[$15], id10=[$16], name=[$17], country_code=[$18], imdb_id=[$19], name_pcode_nf=[$20], name_pcode_sf=[$21], md5sum=[$22], id2=[$23], kind0=[$24], id3=[$25], info0=[$26], id4=[$27], keyword=[$28], phonetic_code=[$29], id5=[$30], kind1=[$31], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 1939727
          BindableProject(id=[$22], movie_id=[$23], info_type_id=[$24], info=[$25], note=[$26], id0=[$27], movie_id0=[$28], company_id=[$29], company_type_id=[$30], note0=[$31], id1=[$0], movie_id1=[$1], subject_id=[$2], status_id=[$3], id00=[$4], kind=[$5], id10=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info0=[$16], id4=[$17], keyword=[$18], phonetic_code=[$19], id5=[$20], kind1=[$21]), id = 1939726
            BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info=[$16], id4=[$17], keyword=[$18], phonetic_code=[$19], id6=[$30], kind1=[$31], id5=[$20], movie_id0=[$21], info_type_id=[$22], info0=[$23], note=[$24], id00=[$25], movie_id00=[$26], company_id=[$27], company_type_id=[$28], note0=[$29]), id = 1939725
              BindableJoin(condition=[true], joinType=[inner]), id = 1939724
                BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info=[$16], id5=[$27], keyword=[$28], phonetic_code=[$29], id4=[$17], movie_id0=[$18], info_type_id=[$19], info0=[$20], note=[$21], id00=[$22], movie_id00=[$23], company_id=[$24], company_type_id=[$25], note0=[$26]), id = 1939722
                  BindableJoin(condition=[true], joinType=[inner]), id = 1939721
                    BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id4=[$25], info0=[$26], id3=[$15], movie_id0=[$16], info_type_id=[$17], info=[$18], note=[$19], id00=[$20], movie_id00=[$21], company_id=[$22], company_type_id=[$23], note0=[$24]), id = 1939719
                      BindableJoin(condition=[=($25, $17)], joinType=[inner]), id = 1939718
                        BindableProject(id2=[$12], movie_id1=[$13], subject_id=[$14], status_id=[$15], id00=[$16], kind0=[$17], id10=[$18], name=[$19], country_code=[$20], imdb_id=[$21], name_pcode_nf=[$22], name_pcode_sf=[$23], md5sum=[$24], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 1939716
                          BindableJoin(condition=[AND(=($6, $13), =($18, $7))], joinType=[inner]), id = 1939715
                            BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 1939710
                              BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 1939709
                                BindableFilter(condition=[AND(LIKE($4, '%internet%'), LIKE($3, 'USA:% 200%'))]), id = 1939708
                                  BindableTableScan(table=[[movie_info]]), id = 1699845
                                BindableTableScan(table=[[movie_companies]]), id = 1699833
                              BindableTableScan(table=[[company_type]]), id = 1699785
                            BindableJoin(condition=[true], joinType=[inner]), id = 1939714
                              BindableJoin(condition=[=($4, $3)], joinType=[inner]), id = 1939712
                                BindableTableScan(table=[[complete_cast]]), id = 1699757
                                BindableFilter(condition=[=($1, 'complete+verified')]), id = 1939711
                                  BindableTableScan(table=[[comp_cast_type]]), id = 1699761
                              BindableFilter(condition=[=($2, '[us]')]), id = 1939713
                                BindableTableScan(table=[[company_name]]), id = 1699773
                        BindableFilter(condition=[=($1, 'release dates')]), id = 1939717
                          BindableTableScan(table=[[info_type]]), id = 1699797
                    BindableFilter(condition=[SEARCH($1, Sarg['alienation':VARCHAR, 'dignity':VARCHAR, 'loner':VARCHAR, 'nerd':VARCHAR]:VARCHAR)]), id = 1939720
                      BindableTableScan(table=[[keyword]]), id = 1699809
                BindableFilter(condition=[=($1, 'movie')]), id = 1939723
                  BindableTableScan(table=[[kind_type]]), id = 1699821
        BindableTableScan(table=[[movie_keyword]]), id = 1699857
      BindableFilter(condition=[>($4, 2000)]), id = 1939729
        BindableTableScan(table=[[title]]), id = 1699869


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(kt.kind) AS movie_kind, MIN(t.title) AS complete_us_internet_movie FROM complete_cast AS cc, comp_cast_type AS cct1, company_name AS cn, company_type AS ct, info_type AS it1, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, title AS t WHERE cct1.kind = 'complete+verified' AND cn.country_code = '[us]' AND it1.info = 'release dates' AND kt.kind IN ('movie', 'tv movie', 'video movie', 'video game') AND mi.note LIKE '%internet%' AND mi.info IS NOT NULL AND (mi.info LIKE 'USA:% 199%' OR mi.info LIKE 'USA:% 200%') AND t.production_year > 1990 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND cn.id = mc.company_id AND ct.id = mc.company_type_id AND cct1.id = cc.status_id

[SqlNode]
SELECT MIN(`KT`.`KIND`) AS `MOVIE_KIND`, MIN(`T`.`TITLE`) AS `COMPLETE_US_INTERNET_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'complete+verified' AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'release dates' AND `KT`.`KIND` IN ('movie', 'tv movie', 'video movie', 'video game') AND `MI`.`NOTE` LIKE '%internet%' AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'USA:% 199%' OR `MI`.`INFO` LIKE 'USA:% 200%') AND `T`.`PRODUCTION_YEAR` > 1990 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CCT1`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`KT`.`KIND`) AS `MOVIE_KIND`, MIN(`T`.`TITLE`) AS `COMPLETE_US_INTERNET_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'complete+verified' AND `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'release dates' AND `KT`.`kind` IN ('movie', 'tv movie', 'video movie', 'video game') AND `MI`.`note` LIKE '%internet%' AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'USA:% 199%' OR `MI`.`info` LIKE 'USA:% 200%') AND `T`.`production_year` > 1990 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CCT1`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KIND=[MIN($0)], COMPLETE_US_INTERNET_MOVIE=[MIN($1)])
  LogicalProject(kind1=[$21], title=[$36])
    LogicalFilter(condition=[AND(=($5, 'complete+verified'), =($8, '[us]'), =($16, 'release dates'), OR(=($21, 'movie'), =($21, 'tv movie'), =($21, 'video movie'), =($21, 'video game')), LIKE($31, '%internet%'), IS NOT NULL($30), OR(LIKE($30, 'USA:% 199%'), LIKE($30, 'USA:% 200%')), >($39, 1990), =($20, $38), =($35, $28), =($35, $33), =($35, $23), =($35, $1), =($33, $28), =($33, $23), =($33, $1), =($28, $23), =($28, $1), =($23, $1), =($17, $34), =($15, $29), =($6, $24), =($13, $25), =($4, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[complete_cast]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KIND=[MIN($0)], COMPLETE_US_INTERNET_MOVIE=[MIN($1)]), id = 2179268
  BindableProject(kind1=[$21], title=[$36]), id = 2179267
    BindableJoin(condition=[AND(=($20, $38), =($28, $35))], joinType=[inner]), id = 2179266
      BindableJoin(condition=[AND(=($28, $33), =($17, $34))], joinType=[inner]), id = 2179264
        BindableProject(id1=[$10], movie_id1=[$11], subject_id=[$12], status_id=[$13], id00=[$14], kind=[$15], id10=[$16], name=[$17], country_code=[$18], imdb_id=[$19], name_pcode_nf=[$20], name_pcode_sf=[$21], md5sum=[$22], id2=[$23], kind0=[$24], id3=[$25], info0=[$26], id4=[$27], keyword=[$28], phonetic_code=[$29], id5=[$30], kind1=[$31], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2179263
          BindableProject(id=[$22], movie_id=[$23], info_type_id=[$24], info=[$25], note=[$26], id0=[$27], movie_id0=[$28], company_id=[$29], company_type_id=[$30], note0=[$31], id1=[$0], movie_id1=[$1], subject_id=[$2], status_id=[$3], id00=[$4], kind=[$5], id10=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info0=[$16], id4=[$17], keyword=[$18], phonetic_code=[$19], id5=[$20], kind1=[$21]), id = 2179262
            BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info=[$16], id4=[$17], keyword=[$18], phonetic_code=[$19], id6=[$30], kind1=[$31], id5=[$20], movie_id0=[$21], info_type_id=[$22], info0=[$23], note=[$24], id00=[$25], movie_id00=[$26], company_id=[$27], company_type_id=[$28], note0=[$29]), id = 2179261
              BindableJoin(condition=[true], joinType=[inner]), id = 2179260
                BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id3=[$15], info=[$16], id5=[$27], keyword=[$28], phonetic_code=[$29], id4=[$17], movie_id0=[$18], info_type_id=[$19], info0=[$20], note=[$21], id00=[$22], movie_id00=[$23], company_id=[$24], company_type_id=[$25], note0=[$26]), id = 2179258
                  BindableJoin(condition=[true], joinType=[inner]), id = 2179257
                    BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], name=[$7], country_code=[$8], imdb_id=[$9], name_pcode_nf=[$10], name_pcode_sf=[$11], md5sum=[$12], id2=[$13], kind0=[$14], id4=[$25], info0=[$26], id3=[$15], movie_id0=[$16], info_type_id=[$17], info=[$18], note=[$19], id00=[$20], movie_id00=[$21], company_id=[$22], company_type_id=[$23], note0=[$24]), id = 2179256
                      BindableJoin(condition=[=($25, $17)], joinType=[inner]), id = 2179255
                        BindableProject(id2=[$12], movie_id1=[$13], subject_id=[$14], status_id=[$15], id00=[$16], kind0=[$17], id10=[$18], name=[$19], country_code=[$20], imdb_id=[$21], name_pcode_nf=[$22], name_pcode_sf=[$23], md5sum=[$24], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 2179253
                          BindableJoin(condition=[AND(=($6, $13), =($18, $7))], joinType=[inner]), id = 2179252
                            BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 2179247
                              BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 2179246
                                BindableFilter(condition=[AND(LIKE($4, '%internet%'), OR(LIKE($3, 'USA:% 199%'), LIKE($3, 'USA:% 200%')))]), id = 2179245
                                  BindableTableScan(table=[[movie_info]]), id = 1939910
                                BindableTableScan(table=[[movie_companies]]), id = 1939898
                              BindableTableScan(table=[[company_type]]), id = 1939850
                            BindableJoin(condition=[true], joinType=[inner]), id = 2179251
                              BindableJoin(condition=[=($4, $3)], joinType=[inner]), id = 2179249
                                BindableTableScan(table=[[complete_cast]]), id = 1939822
                                BindableFilter(condition=[=($1, 'complete+verified')]), id = 2179248
                                  BindableTableScan(table=[[comp_cast_type]]), id = 1939826
                              BindableFilter(condition=[=($2, '[us]')]), id = 2179250
                                BindableTableScan(table=[[company_name]]), id = 1939838
                        BindableFilter(condition=[=($1, 'release dates')]), id = 2179254
                          BindableTableScan(table=[[info_type]]), id = 1939862
                    BindableTableScan(table=[[keyword]]), id = 1939874
                BindableFilter(condition=[SEARCH($1, Sarg['movie':VARCHAR, 'tv movie':VARCHAR, 'video game':VARCHAR, 'video movie':VARCHAR]:VARCHAR)]), id = 2179259
                  BindableTableScan(table=[[kind_type]]), id = 1939886
        BindableTableScan(table=[[movie_keyword]]), id = 1939922
      BindableFilter(condition=[>($4, 1990)]), id = 2179265
        BindableTableScan(table=[[title]]), id = 1939934


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS voiced_action_movie_jap_eng FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat') AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:%201%') AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND t.production_year > 2010 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS_NAME`, MIN(`T`.`TITLE`) AS `VOICED_ACTION_MOVIE_JAP_ENG`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `K`.`KEYWORD` IN ('hero', 'martial-arts', 'hand-to-hand-combat') AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%201%' OR `MI`.`INFO` LIKE 'USA:%201%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS_NAME`, MIN(`T`.`TITLE`) AS `VOICED_ACTION_MOVIE_JAP_ENG`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `K`.`keyword` IN ('hero', 'martial-arts', 'hand-to-hand-combat') AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%201%' OR `MI`.`info` LIKE 'USA:%201%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `T`.`production_year` > 2010 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICED_CHAR_NAME=[MIN($0)], VOICING_ACTRESS_NAME=[MIN($1)], VOICED_ACTION_MOVIE_JAP_ENG=[MIN($2)])
  LogicalProject(name0=[$9], name2=[$48], title=[$59])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($30, 'release dates'), OR(=($32, 'hero'), =($32, 'martial-arts'), =($32, 'hand-to-hand-combat')), IS NOT NULL($42), OR(LIKE($42, 'Japan:%201%'), LIKE($42, 'USA:%201%')), =($51, 'f'), LIKE($48, '%An%'), =($57, 'actress'), >($62, 2010), =($58, $40), =($58, $35), =($58, $17), =($58, $45), =($35, $17), =($35, $40), =($35, $45), =($40, $17), =($40, $45), =($17, $45), =($22, $36), =($29, $41), =($47, $16), =($56, $21), =($47, $1), =($16, $1), =($8, $18), =($31, $46))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[aka_name]])
                            LogicalTableScan(table=[[char_name]])
                          LogicalTableScan(table=[[cast_info]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICED_CHAR_NAME=[MIN($0)], VOICING_ACTRESS_NAME=[MIN($1)], VOICED_ACTION_MOVIE_JAP_ENG=[MIN($2)]), id = 2227624
  BindableProject(name0=[$9], name2=[$48], title=[$59]), id = 2227623
    BindableJoin(condition=[=($40, $58)], joinType=[inner]), id = 2227622
      BindableJoin(condition=[=($56, $21)], joinType=[inner]), id = 2227620
        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], name_pcode_nf0=[$12], surname_pcode0=[$13], md5sum0=[$14], id1=[$15], person_id0=[$16], movie_id=[$17], person_role_id=[$18], note=[$19], nr_order=[$20], role_id=[$21], id2=[$22], name1=[$23], country_code=[$24], imdb_id0=[$25], name_pcode_nf1=[$26], name_pcode_sf=[$27], md5sum1=[$28], id3=[$29], info=[$30], id4=[$31], keyword=[$32], phonetic_code=[$33], id5=[$34], movie_id0=[$35], company_id=[$36], company_type_id=[$37], note0=[$38], id6=[$39], movie_id1=[$40], info_type_id=[$41], info0=[$42], note1=[$43], id8=[$53], movie_id2=[$54], keyword_id=[$55], id7=[$44], name2=[$45], imdb_index1=[$46], imdb_id1=[$47], gender=[$48], name_pcode_cf0=[$49], name_pcode_nf2=[$50], surname_pcode1=[$51], md5sum2=[$52]), id = 2227618
          BindableJoin(condition=[AND(=($35, $54), =($31, $55))], joinType=[inner]), id = 2227617
            BindableJoin(condition=[=($16, $44)], joinType=[inner]), id = 2227616
              BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], name0=[$19], imdb_index0=[$20], imdb_id=[$21], name_pcode_nf0=[$22], surname_pcode0=[$23], md5sum0=[$24], id10=[$25], person_id0=[$26], movie_id1=[$27], person_role_id=[$28], note1=[$29], nr_order=[$30], role_id=[$31], id2=[$32], name1=[$33], country_code=[$34], imdb_id0=[$35], name_pcode_nf1=[$36], name_pcode_sf=[$37], md5sum1=[$38], id3=[$39], info0=[$40], id4=[$41], keyword=[$42], phonetic_code=[$43], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2227614
                BindableJoin(condition=[AND(=($6, $27), =($32, $7), =($39, $2))], joinType=[inner]), id = 2227613
                  BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 2227602
                    BindableFilter(condition=[OR(LIKE($3, 'Japan:%201%'), LIKE($3, 'USA:%201%'))]), id = 2227601
                      BindableTableScan(table=[[movie_info]]), id = 2179441
                    BindableTableScan(table=[[movie_companies]]), id = 2179429
                  BindableJoin(condition=[true], joinType=[inner]), id = 2227612
                    BindableJoin(condition=[true], joinType=[inner]), id = 2227610
                      BindableJoin(condition=[true], joinType=[inner]), id = 2227608
                        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 2227606
                          BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 2227605
                            BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 2227604
                              BindableTableScan(table=[[aka_name]]), id = 2179365
                              BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 2227603
                                BindableTableScan(table=[[cast_info]]), id = 2179381
                            BindableTableScan(table=[[char_name]]), id = 2179369
                        BindableFilter(condition=[=($2, '[us]')]), id = 2227607
                          BindableTableScan(table=[[company_name]]), id = 2179393
                      BindableFilter(condition=[=($1, 'release dates')]), id = 2227609
                        BindableTableScan(table=[[info_type]]), id = 2179405
                    BindableFilter(condition=[SEARCH($1, Sarg['hand-to-hand-combat':VARCHAR, 'hero':VARCHAR, 'martial-arts':VARCHAR]:VARCHAR)]), id = 2227611
                      BindableTableScan(table=[[keyword]]), id = 2179417
              BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 2227615
                BindableTableScan(table=[[name]]), id = 2179465
            BindableTableScan(table=[[movie_keyword]]), id = 2179453
        BindableFilter(condition=[=($1, 'actress')]), id = 2227619
          BindableTableScan(table=[[role_type]]), id = 2179477
      BindableFilter(condition=[>($4, 2010)]), id = 2227621
        BindableTableScan(table=[[title]]), id = 2179489


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress_name, MIN(t.title) AS kung_fu_panda FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND cn.name = 'DreamWorks Animation' AND it.info = 'release dates' AND k.keyword IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie') AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%201%' OR mi.info LIKE 'USA:%201%') AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND t.production_year > 2010 AND t.title LIKE 'Kung Fu Panda%' AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND ci.movie_id = mk.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS_NAME`, MIN(`T`.`TITLE`) AS `KUNG_FU_PANDA`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `CN`.`NAME` = 'DreamWorks Animation' AND `IT`.`INFO` = 'release dates' AND `K`.`KEYWORD` IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie') AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%201%' OR `MI`.`INFO` LIKE 'USA:%201%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`TITLE` LIKE 'Kung Fu Panda%' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS_NAME`, MIN(`T`.`TITLE`) AS `KUNG_FU_PANDA`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `CN`.`name` = 'DreamWorks Animation' AND `IT`.`info` = 'release dates' AND `K`.`keyword` IN ('hero', 'martial-arts', 'hand-to-hand-combat', 'computer-animated-movie') AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%201%' OR `MI`.`info` LIKE 'USA:%201%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `T`.`production_year` > 2010 AND `T`.`title` LIKE 'Kung Fu Panda%' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICED_CHAR_NAME=[MIN($0)], VOICING_ACTRESS_NAME=[MIN($1)], KUNG_FU_PANDA=[MIN($2)])
  LogicalProject(name0=[$9], name2=[$48], title=[$59])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($23, 'DreamWorks Animation'), =($30, 'release dates'), OR(=($32, 'hero'), =($32, 'martial-arts'), =($32, 'hand-to-hand-combat'), =($32, 'computer-animated-movie')), IS NOT NULL($42), OR(LIKE($42, 'Japan:%201%'), LIKE($42, 'USA:%201%')), =($51, 'f'), LIKE($48, '%An%'), =($57, 'actress'), >($62, 2010), LIKE($59, 'Kung Fu Panda%'), =($58, $40), =($58, $35), =($58, $17), =($58, $45), =($35, $17), =($35, $40), =($35, $45), =($40, $17), =($40, $45), =($17, $45), =($22, $36), =($29, $41), =($47, $16), =($56, $21), =($47, $1), =($16, $1), =($8, $18), =($31, $46))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[aka_name]])
                            LogicalTableScan(table=[[char_name]])
                          LogicalTableScan(table=[[cast_info]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICED_CHAR_NAME=[MIN($0)], VOICING_ACTRESS_NAME=[MIN($1)], KUNG_FU_PANDA=[MIN($2)]), id = 2275980
  BindableProject(name0=[$9], name2=[$48], title=[$59]), id = 2275979
    BindableJoin(condition=[=($40, $58)], joinType=[inner]), id = 2275978
      BindableJoin(condition=[=($56, $21)], joinType=[inner]), id = 2275976
        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], name_pcode_nf0=[$12], surname_pcode0=[$13], md5sum0=[$14], id1=[$15], person_id0=[$16], movie_id=[$17], person_role_id=[$18], note=[$19], nr_order=[$20], role_id=[$21], id2=[$22], name1=[$23], country_code=[$24], imdb_id0=[$25], name_pcode_nf1=[$26], name_pcode_sf=[$27], md5sum1=[$28], id3=[$29], info=[$30], id4=[$31], keyword=[$32], phonetic_code=[$33], id5=[$34], movie_id0=[$35], company_id=[$36], company_type_id=[$37], note0=[$38], id6=[$39], movie_id1=[$40], info_type_id=[$41], info0=[$42], note1=[$43], id8=[$53], movie_id2=[$54], keyword_id=[$55], id7=[$44], name2=[$45], imdb_index1=[$46], imdb_id1=[$47], gender=[$48], name_pcode_cf0=[$49], name_pcode_nf2=[$50], surname_pcode1=[$51], md5sum2=[$52]), id = 2275974
          BindableJoin(condition=[AND(=($35, $54), =($31, $55))], joinType=[inner]), id = 2275973
            BindableJoin(condition=[=($16, $44)], joinType=[inner]), id = 2275972
              BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], name0=[$19], imdb_index0=[$20], imdb_id=[$21], name_pcode_nf0=[$22], surname_pcode0=[$23], md5sum0=[$24], id10=[$25], person_id0=[$26], movie_id1=[$27], person_role_id=[$28], note1=[$29], nr_order=[$30], role_id=[$31], id2=[$32], name1=[$33], country_code=[$34], imdb_id0=[$35], name_pcode_nf1=[$36], name_pcode_sf=[$37], md5sum1=[$38], id3=[$39], info0=[$40], id4=[$41], keyword=[$42], phonetic_code=[$43], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2275970
                BindableJoin(condition=[AND(=($6, $27), =($32, $7), =($39, $2))], joinType=[inner]), id = 2275969
                  BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 2275958
                    BindableFilter(condition=[OR(LIKE($3, 'Japan:%201%'), LIKE($3, 'USA:%201%'))]), id = 2275957
                      BindableTableScan(table=[[movie_info]]), id = 2227797
                    BindableTableScan(table=[[movie_companies]]), id = 2227785
                  BindableJoin(condition=[true], joinType=[inner]), id = 2275968
                    BindableJoin(condition=[true], joinType=[inner]), id = 2275966
                      BindableJoin(condition=[true], joinType=[inner]), id = 2275964
                        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 2275962
                          BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 2275961
                            BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 2275960
                              BindableTableScan(table=[[aka_name]]), id = 2227721
                              BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 2275959
                                BindableTableScan(table=[[cast_info]]), id = 2227737
                            BindableTableScan(table=[[char_name]]), id = 2227725
                        BindableFilter(condition=[AND(=($2, '[us]'), =($1, 'DreamWorks Animation'))]), id = 2275963
                          BindableTableScan(table=[[company_name]]), id = 2227749
                      BindableFilter(condition=[=($1, 'release dates')]), id = 2275965
                        BindableTableScan(table=[[info_type]]), id = 2227761
                    BindableFilter(condition=[SEARCH($1, Sarg['computer-animated-movie':VARCHAR, 'hand-to-hand-combat':VARCHAR, 'hero':VARCHAR, 'martial-arts':VARCHAR]:VARCHAR)]), id = 2275967
                      BindableTableScan(table=[[keyword]]), id = 2227773
              BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 2275971
                BindableTableScan(table=[[name]]), id = 2227821
            BindableTableScan(table=[[movie_keyword]]), id = 2227809
        BindableFilter(condition=[=($1, 'actress')]), id = 2275975
          BindableTableScan(table=[[role_type]]), id = 2227833
      BindableFilter(condition=[AND(>($4, 2010), LIKE($1, 'Kung Fu Panda%'))]), id = 2275977
        BindableTableScan(table=[[title]]), id = 2227845


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity') AND mi.info = 'Horror' AND n.gender = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `MALE_WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'blood', 'gore', 'death', 'female-nudity') AND `MI`.`INFO` = 'Horror' AND `N`.`GENDER` = 'm' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `MALE_WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'blood', 'gore', 'death', 'female-nudity') AND `MI`.`info` = 'Horror' AND `N`.`gender` = 'm' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MALE_WRITER=[MIN($2)], VIOLENT_MOVIE_TITLE=[MIN($3)])
  LogicalProject(info1=[$17], info2=[$22], name=[$28], title=[$37])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), =($8, 'genres'), =($10, 'votes'), OR(=($12, 'murder'), =($12, 'blood'), =($12, 'gore'), =($12, 'death'), =($12, 'female-nudity')), =($17, 'Horror'), =($31, 'm'), =($36, $15), =($36, $20), =($36, $2), =($36, $25), =($2, $15), =($2, $20), =($2, $25), =($15, $20), =($15, $25), =($20, $25), =($27, $1), =($7, $16), =($9, $21), =($11, $26))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[cast_info]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MALE_WRITER=[MIN($2)], VIOLENT_MOVIE_TITLE=[MIN($3)]), id = 2279744
  BindableProject(info1=[$17], info2=[$22], name=[$28], title=[$37]), id = 2279743
    BindableJoin(condition=[=($15, $36)], joinType=[inner]), id = 2279742
      BindableJoin(condition=[=($27, $1)], joinType=[inner]), id = 2279741
        BindableJoin(condition=[AND(=($2, $25), =($11, $26))], joinType=[inner]), id = 2279739
          BindableJoin(condition=[AND(=($2, $20), =($9, $21))], joinType=[inner]), id = 2279738
            BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id1=[$9], info0=[$10], id3=[$16], keyword=[$17], phonetic_code=[$18], id2=[$11], movie_id0=[$12], info_type_id=[$13], info1=[$14], note0=[$15]), id = 2279737
              BindableJoin(condition=[true], joinType=[inner]), id = 2279736
                BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id2=[$14], info1=[$15], id1=[$9], movie_id0=[$10], info_type_id=[$11], info0=[$12], note0=[$13]), id = 2279734
                  BindableJoin(condition=[true], joinType=[inner]), id = 2279733
                    BindableProject(id1=[$7], person_id=[$8], movie_id0=[$9], person_role_id=[$10], note0=[$11], nr_order=[$12], role_id=[$13], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2279731
                      BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 2279730
                        BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 2279728
                          BindableFilter(condition=[=($3, 'Horror')]), id = 2279726
                            BindableTableScan(table=[[movie_info]]), id = 2276091
                          BindableFilter(condition=[=($1, 'genres')]), id = 2279727
                            BindableTableScan(table=[[info_type]]), id = 2276059
                        BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 2279729
                          BindableTableScan(table=[[cast_info]]), id = 2276055
                    BindableFilter(condition=[=($1, 'votes')]), id = 2279732
                      BindableTableScan(table=[[info_type]]), id = 2276059
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'murder':VARCHAR]:VARCHAR)]), id = 2279735
                  BindableTableScan(table=[[keyword]]), id = 2276079
            BindableTableScan(table=[[movie_info_idx]]), id = 2276103
          BindableTableScan(table=[[movie_keyword]]), id = 2276115
        BindableFilter(condition=[=($4, 'm')]), id = 2279740
          BindableTableScan(table=[[name]]), id = 2276127
      BindableTableScan(table=[[title]]), id = 2276139


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'blood', 'gore', 'death', 'female-nudity') AND mi.info = 'Horror' AND n.gender = 'm' AND t.production_year > 2010 AND t.title LIKE 'Vampire%' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `MALE_WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'blood', 'gore', 'death', 'female-nudity') AND `MI`.`INFO` = 'Horror' AND `N`.`GENDER` = 'm' AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`TITLE` LIKE 'Vampire%' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `MALE_WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'blood', 'gore', 'death', 'female-nudity') AND `MI`.`info` = 'Horror' AND `N`.`gender` = 'm' AND `T`.`production_year` > 2010 AND `T`.`title` LIKE 'Vampire%' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MALE_WRITER=[MIN($2)], VIOLENT_MOVIE_TITLE=[MIN($3)])
  LogicalProject(info1=[$17], info2=[$22], name=[$28], title=[$37])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), =($8, 'genres'), =($10, 'votes'), OR(=($12, 'murder'), =($12, 'blood'), =($12, 'gore'), =($12, 'death'), =($12, 'female-nudity')), =($17, 'Horror'), =($31, 'm'), >($40, 2010), LIKE($37, 'Vampire%'), =($36, $15), =($36, $20), =($36, $2), =($36, $25), =($2, $15), =($2, $20), =($2, $25), =($15, $20), =($15, $25), =($20, $25), =($27, $1), =($7, $16), =($9, $21), =($11, $26))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[cast_info]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MALE_WRITER=[MIN($2)], VIOLENT_MOVIE_TITLE=[MIN($3)]), id = 2283569
  BindableProject(info1=[$17], info2=[$22], name=[$28], title=[$37]), id = 2283568
    BindableJoin(condition=[=($15, $36)], joinType=[inner]), id = 2283567
      BindableJoin(condition=[=($27, $1)], joinType=[inner]), id = 2283565
        BindableJoin(condition=[AND(=($2, $25), =($11, $26))], joinType=[inner]), id = 2283563
          BindableJoin(condition=[AND(=($2, $20), =($9, $21))], joinType=[inner]), id = 2283562
            BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id1=[$9], info0=[$10], id3=[$16], keyword=[$17], phonetic_code=[$18], id2=[$11], movie_id0=[$12], info_type_id=[$13], info1=[$14], note0=[$15]), id = 2283561
              BindableJoin(condition=[true], joinType=[inner]), id = 2283560
                BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id2=[$14], info1=[$15], id1=[$9], movie_id0=[$10], info_type_id=[$11], info0=[$12], note0=[$13]), id = 2283558
                  BindableJoin(condition=[true], joinType=[inner]), id = 2283557
                    BindableProject(id1=[$7], person_id=[$8], movie_id0=[$9], person_role_id=[$10], note0=[$11], nr_order=[$12], role_id=[$13], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2283555
                      BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 2283554
                        BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 2283552
                          BindableFilter(condition=[=($3, 'Horror')]), id = 2283550
                            BindableTableScan(table=[[movie_info]]), id = 2279855
                          BindableFilter(condition=[=($1, 'genres')]), id = 2283551
                            BindableTableScan(table=[[info_type]]), id = 2279823
                        BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 2283553
                          BindableTableScan(table=[[cast_info]]), id = 2279819
                    BindableFilter(condition=[=($1, 'votes')]), id = 2283556
                      BindableTableScan(table=[[info_type]]), id = 2279823
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'murder':VARCHAR]:VARCHAR)]), id = 2283559
                  BindableTableScan(table=[[keyword]]), id = 2279843
            BindableTableScan(table=[[movie_info_idx]]), id = 2279867
          BindableTableScan(table=[[movie_keyword]]), id = 2279879
        BindableFilter(condition=[=($4, 'm')]), id = 2283564
          BindableTableScan(table=[[name]]), id = 2279891
      BindableFilter(condition=[AND(>($4, 2010), LIKE($1, 'Vampire%'))]), id = 2283566
        BindableTableScan(table=[[title]]), id = 2279903


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS male_writer, MIN(t.title) AS violent_movie_title FROM cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND n.gender = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi_idx.movie_id = mk.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `MALE_WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`INFO` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `N`.`GENDER` = 'm' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `MALE_WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_MOVIE_TITLE`
FROM `CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`info` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `N`.`gender` = 'm' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MALE_WRITER=[MIN($2)], VIOLENT_MOVIE_TITLE=[MIN($3)])
  LogicalProject(info1=[$17], info2=[$22], name=[$28], title=[$37])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), =($8, 'genres'), =($10, 'votes'), OR(=($12, 'murder'), =($12, 'violence'), =($12, 'blood'), =($12, 'gore'), =($12, 'death'), =($12, 'female-nudity'), =($12, 'hospital')), OR(=($17, 'Horror'), =($17, 'Action'), =($17, 'Sci-Fi'), =($17, 'Thriller'), =($17, 'Crime'), =($17, 'War')), =($31, 'm'), =($36, $15), =($36, $20), =($36, $2), =($36, $25), =($2, $15), =($2, $20), =($2, $25), =($15, $20), =($15, $25), =($20, $25), =($27, $1), =($7, $16), =($9, $21), =($11, $26))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalTableScan(table=[[cast_info]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], MALE_WRITER=[MIN($2)], VIOLENT_MOVIE_TITLE=[MIN($3)]), id = 2287333
  BindableProject(info1=[$17], info2=[$22], name=[$28], title=[$37]), id = 2287332
    BindableJoin(condition=[=($15, $36)], joinType=[inner]), id = 2287331
      BindableJoin(condition=[=($27, $1)], joinType=[inner]), id = 2287330
        BindableJoin(condition=[AND(=($2, $25), =($11, $26))], joinType=[inner]), id = 2287328
          BindableJoin(condition=[AND(=($2, $20), =($9, $21))], joinType=[inner]), id = 2287327
            BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id1=[$9], info0=[$10], id3=[$16], keyword=[$17], phonetic_code=[$18], id2=[$11], movie_id0=[$12], info_type_id=[$13], info1=[$14], note0=[$15]), id = 2287326
              BindableJoin(condition=[true], joinType=[inner]), id = 2287325
                BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], info=[$8], id2=[$14], info1=[$15], id1=[$9], movie_id0=[$10], info_type_id=[$11], info0=[$12], note0=[$13]), id = 2287323
                  BindableJoin(condition=[true], joinType=[inner]), id = 2287322
                    BindableProject(id1=[$7], person_id=[$8], movie_id0=[$9], person_role_id=[$10], note0=[$11], nr_order=[$12], role_id=[$13], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2287320
                      BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 2287319
                        BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 2287317
                          BindableFilter(condition=[SEARCH($3, Sarg['Action':VARCHAR, 'Crime':VARCHAR, 'Horror':VARCHAR, 'Sci-Fi':VARCHAR, 'Thriller':VARCHAR, 'War':VARCHAR]:VARCHAR)]), id = 2287315
                            BindableTableScan(table=[[movie_info]]), id = 2283680
                          BindableFilter(condition=[=($1, 'genres')]), id = 2287316
                            BindableTableScan(table=[[info_type]]), id = 2283648
                        BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 2287318
                          BindableTableScan(table=[[cast_info]]), id = 2283644
                    BindableFilter(condition=[=($1, 'votes')]), id = 2287321
                      BindableTableScan(table=[[info_type]]), id = 2283648
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 2287324
                  BindableTableScan(table=[[keyword]]), id = 2283668
            BindableTableScan(table=[[movie_info_idx]]), id = 2283692
          BindableTableScan(table=[[movie_keyword]]), id = 2283704
        BindableFilter(condition=[=($4, 'm')]), id = 2287329
          BindableTableScan(table=[[name]]), id = 2283716
      BindableTableScan(table=[[title]]), id = 2283728


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(n.name) AS playing_actor, MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE '%complete%' AND chn.name IS NOT NULL AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%') AND it2.info = 'rating' AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind = 'movie' AND mi_idx.info > '7.0' AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`N`.`NAME`) AS `PLAYING_ACTOR`, MIN(`T`.`TITLE`) AS `COMPLETE_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE '%complete%' AND `CHN`.`NAME` IS NOT NULL AND (`CHN`.`NAME` LIKE '%man%' OR `CHN`.`NAME` LIKE '%Man%') AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND `KT`.`KIND` = 'movie' AND `MI_IDX`.`INFO` > '7.0' AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`N`.`NAME`) AS `PLAYING_ACTOR`, MIN(`T`.`TITLE`) AS `COMPLETE_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE '%complete%' AND `CHN`.`name` IS NOT NULL AND (`CHN`.`name` LIKE '%man%' OR `CHN`.`name` LIKE '%Man%') AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND `KT`.`kind` = 'movie' AND `MI_IDX`.`info` > '7.0' AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `CI`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CC`.`movie_id` = `MI_IDX`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `CI`.`person_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RATING=[MIN($1)], PLAYING_ACTOR=[MIN($2)], COMPLETE_HERO_MOVIE=[MIN($3)])
  LogicalProject(name=[$9], info0=[$32], name0=[$38], title=[$47])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, '%complete%'), IS NOT NULL($9), OR(LIKE($9, '%man%'), LIKE($9, '%Man%')), =($23, 'rating'), OR(=($25, 'superhero'), =($25, 'marvel-comics'), =($25, 'based-on-comic'), =($25, 'tv-special'), =($25, 'fight'), =($25, 'violence'), =($25, 'magnet'), =($25, 'web'), =($25, 'claw'), =($25, 'laser')), =($28, 'movie'), >($32, '7.0'), >($50, 2000), =($27, $49), =($46, $35), =($46, $17), =($46, $1), =($46, $30), =($35, $17), =($35, $1), =($35, $30), =($17, $1), =($17, $30), =($1, $30), =($8, $18), =($37, $16), =($24, $36), =($4, $2), =($6, $3), =($22, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RATING=[MIN($1)], PLAYING_ACTOR=[MIN($2)], COMPLETE_HERO_MOVIE=[MIN($3)]), id = 2335298
  BindableProject(name=[$9], info0=[$32], name0=[$38], title=[$47]), id = 2335297
    BindableJoin(condition=[AND(=($27, $49), =($35, $46))], joinType=[inner]), id = 2335296
      BindableJoin(condition=[=($37, $16)], joinType=[inner]), id = 2335294
        BindableJoin(condition=[AND(=($17, $35), =($24, $36))], joinType=[inner]), id = 2335293
          BindableJoin(condition=[AND(=($17, $30), =($22, $31))], joinType=[inner]), id = 2335292
            BindableJoin(condition=[true], joinType=[inner]), id = 2335290
              BindableJoin(condition=[true], joinType=[inner]), id = 2335288
                BindableJoin(condition=[true], joinType=[inner]), id = 2335286
                  BindableJoin(condition=[AND(=($17, $1), =($8, $18))], joinType=[inner]), id = 2335284
                    BindableJoin(condition=[true], joinType=[inner]), id = 2335283
                      BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 2335281
                        BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 2335279
                          BindableTableScan(table=[[complete_cast]]), id = 2287429
                          BindableFilter(condition=[=($1, 'cast')]), id = 2335278
                            BindableTableScan(table=[[comp_cast_type]]), id = 2287433
                        BindableFilter(condition=[LIKE($1, '%complete%')]), id = 2335280
                          BindableTableScan(table=[[comp_cast_type]]), id = 2287433
                      BindableFilter(condition=[OR(LIKE($1, '%man%'), LIKE($1, '%Man%'))]), id = 2335282
                        BindableTableScan(table=[[char_name]]), id = 2287453
                    BindableTableScan(table=[[cast_info]]), id = 2287465
                  BindableFilter(condition=[=($1, 'rating')]), id = 2335285
                    BindableTableScan(table=[[info_type]]), id = 2287477
                BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'claw':VARCHAR, 'fight':VARCHAR, 'laser':VARCHAR, 'magnet':VARCHAR, 'marvel-comics':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR, 'web':VARCHAR]:VARCHAR)]), id = 2335287
                  BindableTableScan(table=[[keyword]]), id = 2287489
              BindableFilter(condition=[=($1, 'movie')]), id = 2335289
                BindableTableScan(table=[[kind_type]]), id = 2287501
            BindableFilter(condition=[>($3, '7.0')]), id = 2335291
              BindableTableScan(table=[[movie_info_idx]]), id = 2287513
          BindableTableScan(table=[[movie_keyword]]), id = 2287525
        BindableTableScan(table=[[name]]), id = 2287537
      BindableFilter(condition=[>($4, 2000)]), id = 2335295
        BindableTableScan(table=[[title]]), id = 2287549


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE '%complete%' AND chn.name IS NOT NULL AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%') AND it2.info = 'rating' AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight') AND kt.kind = 'movie' AND mi_idx.info > '8.0' AND t.production_year > 2005 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE '%complete%' AND `CHN`.`NAME` IS NOT NULL AND (`CHN`.`NAME` LIKE '%man%' OR `CHN`.`NAME` LIKE '%Man%') AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight') AND `KT`.`KIND` = 'movie' AND `MI_IDX`.`INFO` > '8.0' AND `T`.`PRODUCTION_YEAR` > 2005 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE '%complete%' AND `CHN`.`name` IS NOT NULL AND (`CHN`.`name` LIKE '%man%' OR `CHN`.`name` LIKE '%Man%') AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('superhero', 'marvel-comics', 'based-on-comic', 'fight') AND `KT`.`kind` = 'movie' AND `MI_IDX`.`info` > '8.0' AND `T`.`production_year` > 2005 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `CI`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CC`.`movie_id` = `MI_IDX`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `CI`.`person_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RATING=[MIN($1)], COMPLETE_HERO_MOVIE=[MIN($2)])
  LogicalProject(name=[$9], info0=[$32], title=[$47])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, '%complete%'), IS NOT NULL($9), OR(LIKE($9, '%man%'), LIKE($9, '%Man%')), =($23, 'rating'), OR(=($25, 'superhero'), =($25, 'marvel-comics'), =($25, 'based-on-comic'), =($25, 'fight')), =($28, 'movie'), >($32, '8.0'), >($50, 2005), =($27, $49), =($46, $35), =($46, $17), =($46, $1), =($46, $30), =($35, $17), =($35, $1), =($35, $30), =($17, $1), =($17, $30), =($1, $30), =($8, $18), =($37, $16), =($24, $36), =($4, $2), =($6, $3), =($22, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RATING=[MIN($1)], COMPLETE_HERO_MOVIE=[MIN($2)]), id = 2383263
  BindableProject(name=[$9], info0=[$32], title=[$47]), id = 2383262
    BindableJoin(condition=[AND(=($27, $49), =($35, $46))], joinType=[inner]), id = 2383261
      BindableJoin(condition=[=($37, $16)], joinType=[inner]), id = 2383259
        BindableJoin(condition=[AND(=($17, $35), =($24, $36))], joinType=[inner]), id = 2383258
          BindableJoin(condition=[AND(=($17, $30), =($22, $31))], joinType=[inner]), id = 2383257
            BindableJoin(condition=[true], joinType=[inner]), id = 2383255
              BindableJoin(condition=[true], joinType=[inner]), id = 2383253
                BindableJoin(condition=[true], joinType=[inner]), id = 2383251
                  BindableJoin(condition=[AND(=($17, $1), =($8, $18))], joinType=[inner]), id = 2383249
                    BindableJoin(condition=[true], joinType=[inner]), id = 2383248
                      BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 2383246
                        BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 2383244
                          BindableTableScan(table=[[complete_cast]]), id = 2335394
                          BindableFilter(condition=[=($1, 'cast')]), id = 2383243
                            BindableTableScan(table=[[comp_cast_type]]), id = 2335398
                        BindableFilter(condition=[LIKE($1, '%complete%')]), id = 2383245
                          BindableTableScan(table=[[comp_cast_type]]), id = 2335398
                      BindableFilter(condition=[OR(LIKE($1, '%man%'), LIKE($1, '%Man%'))]), id = 2383247
                        BindableTableScan(table=[[char_name]]), id = 2335418
                    BindableTableScan(table=[[cast_info]]), id = 2335430
                  BindableFilter(condition=[=($1, 'rating')]), id = 2383250
                    BindableTableScan(table=[[info_type]]), id = 2335442
                BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'fight':VARCHAR, 'marvel-comics':VARCHAR, 'superhero':VARCHAR]:VARCHAR)]), id = 2383252
                  BindableTableScan(table=[[keyword]]), id = 2335454
              BindableFilter(condition=[=($1, 'movie')]), id = 2383254
                BindableTableScan(table=[[kind_type]]), id = 2335466
            BindableFilter(condition=[>($3, '8.0')]), id = 2383256
              BindableTableScan(table=[[movie_info_idx]]), id = 2335478
          BindableTableScan(table=[[movie_keyword]]), id = 2335490
        BindableTableScan(table=[[name]]), id = 2335502
      BindableFilter(condition=[>($4, 2005)]), id = 2383260
        BindableTableScan(table=[[title]]), id = 2335514


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS character_name, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_hero_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, info_type AS it2, keyword AS k, kind_type AS kt, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE '%complete%' AND chn.name IS NOT NULL AND (chn.name LIKE '%man%' OR chn.name LIKE '%Man%') AND it2.info = 'rating' AND k.keyword IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND kt.kind = 'movie' AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND t.id = cc.movie_id AND t.id = mi_idx.movie_id AND mk.movie_id = ci.movie_id AND mk.movie_id = cc.movie_id AND mk.movie_id = mi_idx.movie_id AND ci.movie_id = cc.movie_id AND ci.movie_id = mi_idx.movie_id AND cc.movie_id = mi_idx.movie_id AND chn.id = ci.person_role_id AND n.id = ci.person_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND it2.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE '%complete%' AND `CHN`.`NAME` IS NOT NULL AND (`CHN`.`NAME` LIKE '%man%' OR `CHN`.`NAME` LIKE '%Man%') AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND `KT`.`KIND` = 'movie' AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_HERO_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE '%complete%' AND `CHN`.`name` IS NOT NULL AND (`CHN`.`name` LIKE '%man%' OR `CHN`.`name` LIKE '%Man%') AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('superhero', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence', 'magnet', 'web', 'claw', 'laser') AND `KT`.`kind` = 'movie' AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `CI`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CC`.`movie_id` = `MI_IDX`.`movie_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `CI`.`person_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RATING=[MIN($1)], COMPLETE_HERO_MOVIE=[MIN($2)])
  LogicalProject(name=[$9], info0=[$32], title=[$47])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, '%complete%'), IS NOT NULL($9), OR(LIKE($9, '%man%'), LIKE($9, '%Man%')), =($23, 'rating'), OR(=($25, 'superhero'), =($25, 'marvel-comics'), =($25, 'based-on-comic'), =($25, 'tv-special'), =($25, 'fight'), =($25, 'violence'), =($25, 'magnet'), =($25, 'web'), =($25, 'claw'), =($25, 'laser')), =($28, 'movie'), >($50, 2000), =($27, $49), =($46, $35), =($46, $17), =($46, $1), =($46, $30), =($35, $17), =($35, $1), =($35, $30), =($17, $1), =($17, $30), =($1, $30), =($8, $18), =($37, $16), =($24, $36), =($4, $2), =($6, $3), =($22, $31))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[char_name]])
                      LogicalTableScan(table=[[cast_info]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[kind_type]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CHARACTER_NAME=[MIN($0)], RATING=[MIN($1)], COMPLETE_HERO_MOVIE=[MIN($2)]), id = 2431119
  BindableProject(name=[$9], info0=[$32], title=[$47]), id = 2431118
    BindableJoin(condition=[AND(=($27, $49), =($35, $46))], joinType=[inner]), id = 2431117
      BindableJoin(condition=[=($37, $16)], joinType=[inner]), id = 2431115
        BindableJoin(condition=[AND(=($17, $35), =($24, $36))], joinType=[inner]), id = 2431114
          BindableJoin(condition=[AND(=($17, $30), =($22, $31))], joinType=[inner]), id = 2431113
            BindableJoin(condition=[true], joinType=[inner]), id = 2431112
              BindableJoin(condition=[true], joinType=[inner]), id = 2431110
                BindableJoin(condition=[true], joinType=[inner]), id = 2431108
                  BindableJoin(condition=[AND(=($17, $1), =($8, $18))], joinType=[inner]), id = 2431106
                    BindableJoin(condition=[true], joinType=[inner]), id = 2431105
                      BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 2431103
                        BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 2431101
                          BindableTableScan(table=[[complete_cast]]), id = 2383359
                          BindableFilter(condition=[=($1, 'cast')]), id = 2431100
                            BindableTableScan(table=[[comp_cast_type]]), id = 2383363
                        BindableFilter(condition=[LIKE($1, '%complete%')]), id = 2431102
                          BindableTableScan(table=[[comp_cast_type]]), id = 2383363
                      BindableFilter(condition=[OR(LIKE($1, '%man%'), LIKE($1, '%Man%'))]), id = 2431104
                        BindableTableScan(table=[[char_name]]), id = 2383383
                    BindableTableScan(table=[[cast_info]]), id = 2383395
                  BindableFilter(condition=[=($1, 'rating')]), id = 2431107
                    BindableTableScan(table=[[info_type]]), id = 2383407
                BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'claw':VARCHAR, 'fight':VARCHAR, 'laser':VARCHAR, 'magnet':VARCHAR, 'marvel-comics':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR, 'web':VARCHAR]:VARCHAR)]), id = 2431109
                  BindableTableScan(table=[[keyword]]), id = 2383419
              BindableFilter(condition=[=($1, 'movie')]), id = 2431111
                BindableTableScan(table=[[kind_type]]), id = 2383431
            BindableTableScan(table=[[movie_info_idx]]), id = 2383443
          BindableTableScan(table=[[movie_keyword]]), id = 2383455
        BindableTableScan(table=[[name]]), id = 2383467
      BindableFilter(condition=[>($4, 2000)]), id = 2431116
        BindableTableScan(table=[[title]]), id = 2383479


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS producing_company, MIN(lt.link) AS link_type, MIN(t.title) AS complete_western_sequel FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t WHERE cct1.kind IN ('cast', 'crew') AND cct2.kind = 'complete' AND NOT (cn.country_code = '[pl]') AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind = 'production companies' AND k.keyword = 'sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German') AND t.production_year BETWEEN 1950 AND 2000 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND mi.movie_id = t.id AND t.id = cc.movie_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mi.movie_id AND mk.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = cc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `COMPLETE_WESTERN_SEQUEL`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` IN ('cast', 'crew') AND `CCT2`.`KIND` = 'complete' AND NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `MI`.`INFO` IN ('Sweden', 'Germany', 'Swedish', 'German') AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1950 AND 2000 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `MI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `COMPLETE_WESTERN_SEQUEL`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` IN ('cast', 'crew') AND `CCT2`.`kind` = 'complete' AND NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `MI`.`info` IN ('Sweden', 'Germany', 'Swedish', 'German') AND `T`.`production_year` BETWEEN ASYMMETRIC 1950 AND 2000 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `MI`.`movie_id` = `T`.`id` AND `T`.`id` = `CC`.`movie_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `ML`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `ML`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], LINK_TYPE=[MIN($1)], COMPLETE_WESTERN_SEQUEL=[MIN($2)])
  LogicalProject(name=[$9], link=[$21], title=[$40])
    LogicalFilter(condition=[AND(OR(=($5, 'cast'), =($5, 'crew')), =($7, 'complete'), NOT(=($10, '[pl]')), OR(LIKE($9, '%Film%'), LIKE($9, '%Warner%')), =($16, 'production companies'), =($18, 'sequel'), LIKE($21, '%follow%'), IS NULL($26), OR(=($30, 'Sweden'), =($30, 'Germany'), =($30, 'Swedish'), =($30, 'German')), >=($43, 1950), <=($43, 2000), =($20, $38), =($36, $39), =($39, $33), =($34, $17), =($39, $23), =($25, $15), =($24, $8), =($28, $39), =($39, $1), =($4, $2), =($6, $3), =($36, $33), =($36, $23), =($33, $23), =($36, $28), =($33, $28), =($23, $28), =($36, $1), =($33, $1), =($23, $1), =($28, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[link_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], LINK_TYPE=[MIN($1)], COMPLETE_WESTERN_SEQUEL=[MIN($2)]), id = 2431544
  BindableProject(name=[$9], link=[$21], title=[$40]), id = 2431543
    BindableJoin(condition=[=($36, $39)], joinType=[inner]), id = 2431542
      BindableValues(tuples=[[]]), id = 2431479
      BindableFilter(condition=[SEARCH($4, Sarg[[1950..2000]])]), id = 2431541
        BindableTableScan(table=[[title]]), id = 2431335


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS producing_company, MIN(lt.link) AS link_type, MIN(t.title) AS complete_western_sequel FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t WHERE cct1.kind IN ('cast', 'crew') AND cct2.kind = 'complete' AND NOT (cn.country_code ='[pl]') AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind ='production companies' AND k.keyword ='sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German') AND t.production_year = 1998 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND mi.movie_id = t.id AND t.id = cc.movie_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mi.movie_id AND mk.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = cc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `COMPLETE_WESTERN_SEQUEL`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` IN ('cast', 'crew') AND `CCT2`.`KIND` = 'complete' AND NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `MI`.`INFO` IN ('Sweden', 'Germany', 'Swedish', 'German') AND `T`.`PRODUCTION_YEAR` = 1998 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `MI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `COMPLETE_WESTERN_SEQUEL`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` IN ('cast', 'crew') AND `CCT2`.`kind` = 'complete' AND NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `MI`.`info` IN ('Sweden', 'Germany', 'Swedish', 'German') AND `T`.`production_year` = 1998 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `MI`.`movie_id` = `T`.`id` AND `T`.`id` = `CC`.`movie_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `ML`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `ML`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], LINK_TYPE=[MIN($1)], COMPLETE_WESTERN_SEQUEL=[MIN($2)])
  LogicalProject(name=[$9], link=[$21], title=[$40])
    LogicalFilter(condition=[AND(OR(=($5, 'cast'), =($5, 'crew')), =($7, 'complete'), NOT(=($10, '[pl]')), OR(LIKE($9, '%Film%'), LIKE($9, '%Warner%')), =($16, 'production companies'), =($18, 'sequel'), LIKE($21, '%follow%'), IS NULL($26), OR(=($30, 'Sweden'), =($30, 'Germany'), =($30, 'Swedish'), =($30, 'German')), =($43, 1998), =($20, $38), =($36, $39), =($39, $33), =($34, $17), =($39, $23), =($25, $15), =($24, $8), =($28, $39), =($39, $1), =($4, $2), =($6, $3), =($36, $33), =($36, $23), =($33, $23), =($36, $28), =($33, $28), =($23, $28), =($36, $1), =($33, $1), =($23, $1), =($28, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[link_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], LINK_TYPE=[MIN($1)], COMPLETE_WESTERN_SEQUEL=[MIN($2)]), id = 2431969
  BindableProject(name=[$9], link=[$21], title=[$40]), id = 2431968
    BindableJoin(condition=[=($36, $39)], joinType=[inner]), id = 2431967
      BindableValues(tuples=[[]]), id = 2431904
      BindableFilter(condition=[=($4, 1998)]), id = 2431966
        BindableTableScan(table=[[title]]), id = 2431760


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS producing_company, MIN(lt.link) AS link_type, MIN(t.title) AS complete_western_sequel FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, keyword AS k, link_type AS lt, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, movie_link AS ml, title AS t WHERE cct1.kind = 'cast' AND cct2.kind LIKE 'complete%' AND NOT (cn.country_code ='[pl]') AND (cn.name LIKE '%Film%' OR cn.name LIKE '%Warner%') AND ct.kind ='production companies' AND k.keyword ='sequel' AND lt.link LIKE '%follow%' AND mc.note IS NULL AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English') AND t.production_year BETWEEN 1950 AND 2010 AND lt.id = ml.link_type_id AND ml.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND t.id = mc.movie_id AND mc.company_type_id = ct.id AND mc.company_id = cn.id AND mi.movie_id = t.id AND t.id = cc.movie_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id AND ml.movie_id = mk.movie_id AND ml.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND ml.movie_id = mi.movie_id AND mk.movie_id = mi.movie_id AND mc.movie_id = mi.movie_id AND ml.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = cc.movie_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `COMPLETE_WESTERN_SEQUEL`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` LIKE 'complete%' AND NOT `CN`.`COUNTRY_CODE` = '[pl]' AND (`CN`.`NAME` LIKE '%Film%' OR `CN`.`NAME` LIKE '%Warner%') AND `CT`.`KIND` = 'production companies' AND `K`.`KEYWORD` = 'sequel' AND `LT`.`LINK` LIKE '%follow%' AND `MC`.`NOTE` IS NULL AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English') AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1950 AND 2010 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `ML`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_TYPE_ID` = `CT`.`ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `MI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID` AND `ML`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `PRODUCING_COMPANY`, MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T`.`TITLE`) AS `COMPLETE_WESTERN_SEQUEL`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` LIKE 'complete%' AND NOT `CN`.`country_code` = '[pl]' AND (`CN`.`name` LIKE '%Film%' OR `CN`.`name` LIKE '%Warner%') AND `CT`.`kind` = 'production companies' AND `K`.`keyword` = 'sequel' AND `LT`.`link` LIKE '%follow%' AND `MC`.`note` IS NULL AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'English') AND `T`.`production_year` BETWEEN ASYMMETRIC 1950 AND 2010 AND `LT`.`id` = `ML`.`link_type_id` AND `ML`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_type_id` = `CT`.`id` AND `MC`.`company_id` = `CN`.`id` AND `MI`.`movie_id` = `T`.`id` AND `T`.`id` = `CC`.`movie_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id` AND `ML`.`movie_id` = `MK`.`movie_id` AND `ML`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `ML`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `ML`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], LINK_TYPE=[MIN($1)], COMPLETE_WESTERN_SEQUEL=[MIN($2)])
  LogicalProject(name=[$9], link=[$21], title=[$40])
    LogicalFilter(condition=[AND(=($5, 'cast'), LIKE($7, 'complete%'), NOT(=($10, '[pl]')), OR(LIKE($9, '%Film%'), LIKE($9, '%Warner%')), =($16, 'production companies'), =($18, 'sequel'), LIKE($21, '%follow%'), IS NULL($26), OR(=($30, 'Sweden'), =($30, 'Norway'), =($30, 'Germany'), =($30, 'Denmark'), =($30, 'Swedish'), =($30, 'Denish'), =($30, 'Norwegian'), =($30, 'German'), =($30, 'English')), >=($43, 1950), <=($43, 2010), =($20, $38), =($36, $39), =($39, $33), =($34, $17), =($39, $23), =($25, $15), =($24, $8), =($28, $39), =($39, $1), =($4, $2), =($6, $3), =($36, $33), =($36, $23), =($33, $23), =($36, $28), =($33, $28), =($23, $28), =($36, $1), =($33, $1), =($23, $1), =($28, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[company_name]])
                      LogicalTableScan(table=[[company_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[link_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[movie_link]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], PRODUCING_COMPANY=[MIN($0)], LINK_TYPE=[MIN($1)], COMPLETE_WESTERN_SEQUEL=[MIN($2)]), id = 2432394
  BindableProject(name=[$9], link=[$21], title=[$40]), id = 2432393
    BindableJoin(condition=[=($36, $39)], joinType=[inner]), id = 2432392
      BindableValues(tuples=[[]]), id = 2432329
      BindableFilter(condition=[SEARCH($4, Sarg[[1950..2010]])]), id = 2432391
        BindableTableScan(table=[[title]]), id = 2432185


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE cct1.kind = 'crew' AND NOT (cct2.kind = 'complete+verified') AND NOT (cn.country_code = '[us]') AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mc.note NOT LIKE '%(USA)%' AND mc.note LIKE '%(200%)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info < '8.5' AND t.production_year > 2000 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.movie_id = cc.movie_id AND mi_idx.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_EURO_DARK_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'crew' AND NOT `CCT2`.`KIND` = 'complete+verified' AND NOT `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '8.5' AND `T`.`PRODUCTION_YEAR` > 2000 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_EURO_DARK_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'crew' AND NOT `CCT2`.`kind` = 'complete+verified' AND NOT `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MC`.`note` NOT LIKE '%(USA)%' AND `MC`.`note` LIKE '%(200%)%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '8.5' AND `T`.`production_year` > 2000 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI_IDX`.`movie_id` = `CC`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], COMPLETE_EURO_DARK_MOVIE=[MIN($2)])
  LogicalProject(name=[$9], info2=[$39], title=[$45])
    LogicalFilter(condition=[AND(=($5, 'crew'), NOT(=($7, 'complete+verified')), NOT(=($10, '[us]')), =($18, 'countries'), =($20, 'rating'), OR(=($22, 'murder'), =($22, 'murder-in-title'), =($22, 'blood'), =($22, 'violence')), OR(=($25, 'movie'), =($25, 'episode')), NOT(LIKE($30, '%(USA)%')), LIKE($30, '%(200%)%'), OR(=($34, 'Sweden'), =($34, 'Norway'), =($34, 'Germany'), =($34, 'Denmark'), =($34, 'Swedish'), =($34, 'Danish'), =($34, 'Norwegian'), =($34, 'German'), =($34, 'USA'), =($34, 'American')), <($39, '8.5'), >($48, 2000), =($24, $47), =($44, $32), =($44, $42), =($44, $37), =($44, $27), =($44, $1), =($42, $32), =($42, $37), =($42, $27), =($42, $1), =($32, $37), =($32, $27), =($32, $1), =($27, $37), =($27, $1), =($37, $1), =($21, $43), =($17, $33), =($19, $38), =($15, $29), =($8, $28), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalTableScan(table=[[complete_cast]])
                                LogicalTableScan(table=[[comp_cast_type]])
                              LogicalTableScan(table=[[comp_cast_type]])
                            LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], COMPLETE_EURO_DARK_MOVIE=[MIN($2)]), id = 2948376
  BindableProject(name=[$9], info2=[$39], title=[$45]), id = 2948375
    BindableJoin(condition=[AND(=($24, $47), =($32, $44))], joinType=[inner]), id = 2948374
      BindableJoin(condition=[AND(=($32, $42), =($21, $43))], joinType=[inner]), id = 2948372
        BindableJoin(condition=[AND(=($32, $37), =($19, $38))], joinType=[inner]), id = 2948371
          BindableProject(id1=[$10], movie_id1=[$11], subject_id=[$12], status_id=[$13], id00=[$14], kind=[$15], id10=[$16], kind0=[$17], id2=[$18], name=[$19], country_code=[$20], imdb_id=[$21], name_pcode_nf=[$22], name_pcode_sf=[$23], md5sum=[$24], id3=[$25], kind1=[$26], id4=[$27], info0=[$28], id5=[$29], info00=[$30], id6=[$31], keyword=[$32], phonetic_code=[$33], id7=[$34], kind2=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 2948369
            BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], subject_id=[$2], status_id=[$3], id00=[$4], kind=[$5], id10=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info0=[$18], id5=[$19], info00=[$20], id6=[$21], keyword=[$22], phonetic_code=[$23], id7=[$24], kind2=[$25]), id = 2948368
              BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id5=[$19], info0=[$20], id6=[$21], keyword=[$22], phonetic_code=[$23], id8=[$34], kind2=[$35], id7=[$24], movie_id0=[$25], info_type_id=[$26], info1=[$27], note=[$28], id00=[$29], movie_id00=[$30], company_id=[$31], company_type_id=[$32], note0=[$33]), id = 2948367
                BindableJoin(condition=[true], joinType=[inner]), id = 2948366
                  BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id5=[$19], info0=[$20], id7=[$31], keyword=[$32], phonetic_code=[$33], id6=[$21], movie_id0=[$22], info_type_id=[$23], info1=[$24], note=[$25], id00=[$26], movie_id00=[$27], company_id=[$28], company_type_id=[$29], note0=[$30]), id = 2948364
                    BindableJoin(condition=[true], joinType=[inner]), id = 2948363
                      BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id6=[$29], info1=[$30], id5=[$19], movie_id0=[$20], info_type_id=[$21], info0=[$22], note=[$23], id00=[$24], movie_id00=[$25], company_id=[$26], company_type_id=[$27], note0=[$28]), id = 2948361
                        BindableJoin(condition=[true], joinType=[inner]), id = 2948360
                          BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id5=[$27], info0=[$28], id4=[$17], movie_id0=[$18], info_type_id=[$19], info=[$20], note=[$21], id00=[$22], movie_id00=[$23], company_id=[$24], company_type_id=[$25], note0=[$26]), id = 2948358
                            BindableJoin(condition=[=($27, $19)], joinType=[inner]), id = 2948357
                              BindableProject(id2=[$12], movie_id1=[$13], subject_id=[$14], status_id=[$15], id00=[$16], kind0=[$17], id10=[$18], kind00=[$19], id20=[$20], name=[$21], country_code=[$22], imdb_id=[$23], name_pcode_nf=[$24], name_pcode_sf=[$25], md5sum=[$26], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 2948355
                                BindableJoin(condition=[AND(=($6, $13), =($20, $7))], joinType=[inner]), id = 2948354
                                  BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 2948347
                                    BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 2948346
                                      BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Danish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 2948344
                                        BindableTableScan(table=[[movie_info]]), id = 2432607
                                      BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), NOT(LIKE($4, '%(USA)%')))]), id = 2948345
                                        BindableTableScan(table=[[movie_companies]]), id = 2432595
                                    BindableTableScan(table=[[company_type]]), id = 2432539
                                  BindableJoin(condition=[true], joinType=[inner]), id = 2948353
                                    BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 2948351
                                      BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 2948349
                                        BindableTableScan(table=[[complete_cast]]), id = 2432503
                                        BindableFilter(condition=[=($1, 'crew')]), id = 2948348
                                          BindableTableScan(table=[[comp_cast_type]]), id = 2432507
                                      BindableFilter(condition=[<>($1, 'complete+verified')]), id = 2948350
                                        BindableTableScan(table=[[comp_cast_type]]), id = 2432507
                                    BindableFilter(condition=[<>($2, '[us]')]), id = 2948352
                                      BindableTableScan(table=[[company_name]]), id = 2432527
                              BindableFilter(condition=[=($1, 'countries')]), id = 2948356
                                BindableTableScan(table=[[info_type]]), id = 2432551
                          BindableFilter(condition=[=($1, 'rating')]), id = 2948359
                            BindableTableScan(table=[[info_type]]), id = 2432551
                      BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 2948362
                        BindableTableScan(table=[[keyword]]), id = 2432571
                  BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 2948365
                    BindableTableScan(table=[[kind_type]]), id = 2432583
          BindableFilter(condition=[<($3, '8.5')]), id = 2948370
            BindableTableScan(table=[[movie_info_idx]]), id = 2432619
        BindableTableScan(table=[[movie_keyword]]), id = 2432631
      BindableFilter(condition=[>($4, 2000)]), id = 2948373
        BindableTableScan(table=[[title]]), id = 2432643


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE cct1.kind = 'crew' AND NOT (cct2.kind = 'complete+verified') AND NOT (cn.country_code = '[us]') AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mc.note NOT LIKE '%(USA)%' AND mc.note LIKE '%(200%)%' AND mi.info IN ('Sweden', 'Germany', 'Swedish', 'German') AND mi_idx.info > '6.5' AND t.production_year > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.movie_id = cc.movie_id AND mi_idx.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_EURO_DARK_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'crew' AND NOT `CCT2`.`KIND` = 'complete+verified' AND NOT `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MI`.`INFO` IN ('Sweden', 'Germany', 'Swedish', 'German') AND `MI_IDX`.`INFO` > '6.5' AND `T`.`PRODUCTION_YEAR` > 2005 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_EURO_DARK_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'crew' AND NOT `CCT2`.`kind` = 'complete+verified' AND NOT `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MC`.`note` NOT LIKE '%(USA)%' AND `MC`.`note` LIKE '%(200%)%' AND `MI`.`info` IN ('Sweden', 'Germany', 'Swedish', 'German') AND `MI_IDX`.`info` > '6.5' AND `T`.`production_year` > 2005 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI_IDX`.`movie_id` = `CC`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], COMPLETE_EURO_DARK_MOVIE=[MIN($2)])
  LogicalProject(name=[$9], info2=[$39], title=[$45])
    LogicalFilter(condition=[AND(=($5, 'crew'), NOT(=($7, 'complete+verified')), NOT(=($10, '[us]')), =($18, 'countries'), =($20, 'rating'), OR(=($22, 'murder'), =($22, 'murder-in-title'), =($22, 'blood'), =($22, 'violence')), OR(=($25, 'movie'), =($25, 'episode')), NOT(LIKE($30, '%(USA)%')), LIKE($30, '%(200%)%'), OR(=($34, 'Sweden'), =($34, 'Germany'), =($34, 'Swedish'), =($34, 'German')), >($39, '6.5'), >($48, 2005), =($24, $47), =($44, $32), =($44, $42), =($44, $37), =($44, $27), =($44, $1), =($42, $32), =($42, $37), =($42, $27), =($42, $1), =($32, $37), =($32, $27), =($32, $1), =($27, $37), =($27, $1), =($37, $1), =($21, $43), =($17, $33), =($19, $38), =($15, $29), =($8, $28), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalTableScan(table=[[complete_cast]])
                                LogicalTableScan(table=[[comp_cast_type]])
                              LogicalTableScan(table=[[comp_cast_type]])
                            LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], COMPLETE_EURO_DARK_MOVIE=[MIN($2)]), id = 3464358
  BindableProject(name=[$9], info2=[$39], title=[$45]), id = 3464357
    BindableJoin(condition=[AND(=($24, $47), =($32, $44))], joinType=[inner]), id = 3464356
      BindableJoin(condition=[AND(=($32, $42), =($21, $43))], joinType=[inner]), id = 3464354
        BindableJoin(condition=[AND(=($32, $37), =($19, $38))], joinType=[inner]), id = 3464353
          BindableProject(id1=[$10], movie_id1=[$11], subject_id=[$12], status_id=[$13], id00=[$14], kind=[$15], id10=[$16], kind0=[$17], id2=[$18], name=[$19], country_code=[$20], imdb_id=[$21], name_pcode_nf=[$22], name_pcode_sf=[$23], md5sum=[$24], id3=[$25], kind1=[$26], id4=[$27], info0=[$28], id5=[$29], info00=[$30], id6=[$31], keyword=[$32], phonetic_code=[$33], id7=[$34], kind2=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 3464351
            BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], subject_id=[$2], status_id=[$3], id00=[$4], kind=[$5], id10=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info0=[$18], id5=[$19], info00=[$20], id6=[$21], keyword=[$22], phonetic_code=[$23], id7=[$24], kind2=[$25]), id = 3464350
              BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id5=[$19], info0=[$20], id6=[$21], keyword=[$22], phonetic_code=[$23], id8=[$34], kind2=[$35], id7=[$24], movie_id0=[$25], info_type_id=[$26], info1=[$27], note=[$28], id00=[$29], movie_id00=[$30], company_id=[$31], company_type_id=[$32], note0=[$33]), id = 3464349
                BindableJoin(condition=[true], joinType=[inner]), id = 3464348
                  BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id5=[$19], info0=[$20], id7=[$31], keyword=[$32], phonetic_code=[$33], id6=[$21], movie_id0=[$22], info_type_id=[$23], info1=[$24], note=[$25], id00=[$26], movie_id00=[$27], company_id=[$28], company_type_id=[$29], note0=[$30]), id = 3464346
                    BindableJoin(condition=[true], joinType=[inner]), id = 3464345
                      BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id6=[$29], info1=[$30], id5=[$19], movie_id0=[$20], info_type_id=[$21], info0=[$22], note=[$23], id00=[$24], movie_id00=[$25], company_id=[$26], company_type_id=[$27], note0=[$28]), id = 3464343
                        BindableJoin(condition=[true], joinType=[inner]), id = 3464342
                          BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id5=[$27], info0=[$28], id4=[$17], movie_id0=[$18], info_type_id=[$19], info=[$20], note=[$21], id00=[$22], movie_id00=[$23], company_id=[$24], company_type_id=[$25], note0=[$26]), id = 3464340
                            BindableJoin(condition=[=($27, $19)], joinType=[inner]), id = 3464339
                              BindableProject(id2=[$12], movie_id1=[$13], subject_id=[$14], status_id=[$15], id00=[$16], kind0=[$17], id10=[$18], kind00=[$19], id20=[$20], name=[$21], country_code=[$22], imdb_id=[$23], name_pcode_nf=[$24], name_pcode_sf=[$25], md5sum=[$26], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 3464337
                                BindableJoin(condition=[AND(=($6, $13), =($20, $7))], joinType=[inner]), id = 3464336
                                  BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 3464329
                                    BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 3464328
                                      BindableFilter(condition=[SEARCH($3, Sarg['German':VARCHAR, 'Germany':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR]:VARCHAR)]), id = 3464326
                                        BindableTableScan(table=[[movie_info]]), id = 2948589
                                      BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), NOT(LIKE($4, '%(USA)%')))]), id = 3464327
                                        BindableTableScan(table=[[movie_companies]]), id = 2948577
                                    BindableTableScan(table=[[company_type]]), id = 2948521
                                  BindableJoin(condition=[true], joinType=[inner]), id = 3464335
                                    BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 3464333
                                      BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 3464331
                                        BindableTableScan(table=[[complete_cast]]), id = 2948485
                                        BindableFilter(condition=[=($1, 'crew')]), id = 3464330
                                          BindableTableScan(table=[[comp_cast_type]]), id = 2948489
                                      BindableFilter(condition=[<>($1, 'complete+verified')]), id = 3464332
                                        BindableTableScan(table=[[comp_cast_type]]), id = 2948489
                                    BindableFilter(condition=[<>($2, '[us]')]), id = 3464334
                                      BindableTableScan(table=[[company_name]]), id = 2948509
                              BindableFilter(condition=[=($1, 'countries')]), id = 3464338
                                BindableTableScan(table=[[info_type]]), id = 2948533
                          BindableFilter(condition=[=($1, 'rating')]), id = 3464341
                            BindableTableScan(table=[[info_type]]), id = 2948533
                      BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 3464344
                        BindableTableScan(table=[[keyword]]), id = 2948553
                  BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 3464347
                    BindableTableScan(table=[[kind_type]]), id = 2948565
          BindableFilter(condition=[>($3, '6.5')]), id = 3464352
            BindableTableScan(table=[[movie_info_idx]]), id = 2948601
        BindableTableScan(table=[[movie_keyword]]), id = 2948613
      BindableFilter(condition=[>($4, 2005)]), id = 3464355
        BindableTableScan(table=[[title]]), id = 2948625


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn.name) AS movie_company, MIN(mi_idx.info) AS rating, MIN(t.title) AS complete_euro_dark_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, company_name AS cn, company_type AS ct, info_type AS it1, info_type AS it2, keyword AS k, kind_type AS kt, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE cct1.kind = 'cast' AND cct2.kind = 'complete' AND NOT (cn.country_code = '[us]') AND it1.info = 'countries' AND it2.info = 'rating' AND k.keyword IN ('murder', 'murder-in-title', 'blood', 'violence') AND kt.kind IN ('movie', 'episode') AND mc.note NOT LIKE '%(USA)%' AND mc.note LIKE '%(200%)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND mi_idx.info < '8.5' AND t.production_year > 2005 AND kt.id = t.kind_id AND t.id = mi.movie_id AND t.id = mk.movie_id AND t.id = mi_idx.movie_id AND t.id = mc.movie_id AND t.id = cc.movie_id AND mk.movie_id = mi.movie_id AND mk.movie_id = mi_idx.movie_id AND mk.movie_id = mc.movie_id AND mk.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mc.movie_id AND mi.movie_id = cc.movie_id AND mc.movie_id = mi_idx.movie_id AND mc.movie_id = cc.movie_id AND mi_idx.movie_id = cc.movie_id AND k.id = mk.keyword_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND ct.id = mc.company_type_id AND cn.id = mc.company_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_EURO_DARK_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` = 'complete' AND NOT `CN`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'countries' AND `IT2`.`INFO` = 'rating' AND `K`.`KEYWORD` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`KIND` IN ('movie', 'episode') AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(200%)%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`INFO` < '8.5' AND `T`.`PRODUCTION_YEAR` > 2005 AND `KT`.`ID` = `T`.`KIND_ID` AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`CN`.`NAME`) AS `MOVIE_COMPANY`, MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `COMPLETE_EURO_DARK_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`COMPANY_NAME` AS `CN`,
`COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`KIND_TYPE` AS `KT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` = 'complete' AND NOT `CN`.`country_code` = '[us]' AND `IT1`.`info` = 'countries' AND `IT2`.`info` = 'rating' AND `K`.`keyword` IN ('murder', 'murder-in-title', 'blood', 'violence') AND `KT`.`kind` IN ('movie', 'episode') AND `MC`.`note` NOT LIKE '%(USA)%' AND `MC`.`note` LIKE '%(200%)%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Danish', 'Norwegian', 'German', 'USA', 'American') AND `MI_IDX`.`info` < '8.5' AND `T`.`production_year` > 2005 AND `KT`.`id` = `T`.`kind_id` AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MC`.`movie_id` = `MI_IDX`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI_IDX`.`movie_id` = `CC`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `CT`.`id` = `MC`.`company_type_id` AND `CN`.`id` = `MC`.`company_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], COMPLETE_EURO_DARK_MOVIE=[MIN($2)])
  LogicalProject(name=[$9], info2=[$39], title=[$45])
    LogicalFilter(condition=[AND(=($5, 'cast'), =($7, 'complete'), NOT(=($10, '[us]')), =($18, 'countries'), =($20, 'rating'), OR(=($22, 'murder'), =($22, 'murder-in-title'), =($22, 'blood'), =($22, 'violence')), OR(=($25, 'movie'), =($25, 'episode')), NOT(LIKE($30, '%(USA)%')), LIKE($30, '%(200%)%'), OR(=($34, 'Sweden'), =($34, 'Norway'), =($34, 'Germany'), =($34, 'Denmark'), =($34, 'Swedish'), =($34, 'Danish'), =($34, 'Norwegian'), =($34, 'German'), =($34, 'USA'), =($34, 'American')), <($39, '8.5'), >($48, 2005), =($24, $47), =($44, $32), =($44, $42), =($44, $37), =($44, $27), =($44, $1), =($42, $32), =($42, $37), =($42, $27), =($42, $1), =($32, $37), =($32, $27), =($32, $1), =($27, $37), =($27, $1), =($37, $1), =($21, $43), =($17, $33), =($19, $38), =($15, $29), =($8, $28), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalTableScan(table=[[complete_cast]])
                                LogicalTableScan(table=[[comp_cast_type]])
                              LogicalTableScan(table=[[comp_cast_type]])
                            LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[company_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[kind_type]])
                LogicalTableScan(table=[[movie_companies]])
              LogicalTableScan(table=[[movie_info]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_COMPANY=[MIN($0)], RATING=[MIN($1)], COMPLETE_EURO_DARK_MOVIE=[MIN($2)]), id = 3980340
  BindableProject(name=[$9], info2=[$39], title=[$45]), id = 3980339
    BindableJoin(condition=[AND(=($24, $47), =($32, $44))], joinType=[inner]), id = 3980338
      BindableJoin(condition=[AND(=($32, $42), =($21, $43))], joinType=[inner]), id = 3980336
        BindableJoin(condition=[AND(=($32, $37), =($19, $38))], joinType=[inner]), id = 3980335
          BindableProject(id1=[$10], movie_id1=[$11], subject_id=[$12], status_id=[$13], id00=[$14], kind=[$15], id10=[$16], kind0=[$17], id2=[$18], name=[$19], country_code=[$20], imdb_id=[$21], name_pcode_nf=[$22], name_pcode_sf=[$23], md5sum=[$24], id3=[$25], kind1=[$26], id4=[$27], info0=[$28], id5=[$29], info00=[$30], id6=[$31], keyword=[$32], phonetic_code=[$33], id7=[$34], kind2=[$35], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 3980333
            BindableProject(id=[$26], movie_id=[$27], info_type_id=[$28], info=[$29], note=[$30], id0=[$31], movie_id0=[$32], company_id=[$33], company_type_id=[$34], note0=[$35], id1=[$0], movie_id1=[$1], subject_id=[$2], status_id=[$3], id00=[$4], kind=[$5], id10=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info0=[$18], id5=[$19], info00=[$20], id6=[$21], keyword=[$22], phonetic_code=[$23], id7=[$24], kind2=[$25]), id = 3980332
              BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id5=[$19], info0=[$20], id6=[$21], keyword=[$22], phonetic_code=[$23], id8=[$34], kind2=[$35], id7=[$24], movie_id0=[$25], info_type_id=[$26], info1=[$27], note=[$28], id00=[$29], movie_id00=[$30], company_id=[$31], company_type_id=[$32], note0=[$33]), id = 3980331
                BindableJoin(condition=[true], joinType=[inner]), id = 3980330
                  BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id5=[$19], info0=[$20], id7=[$31], keyword=[$32], phonetic_code=[$33], id6=[$21], movie_id0=[$22], info_type_id=[$23], info1=[$24], note=[$25], id00=[$26], movie_id00=[$27], company_id=[$28], company_type_id=[$29], note0=[$30]), id = 3980328
                    BindableJoin(condition=[true], joinType=[inner]), id = 3980327
                      BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id4=[$17], info=[$18], id6=[$29], info1=[$30], id5=[$19], movie_id0=[$20], info_type_id=[$21], info0=[$22], note=[$23], id00=[$24], movie_id00=[$25], company_id=[$26], company_type_id=[$27], note0=[$28]), id = 3980325
                        BindableJoin(condition=[true], joinType=[inner]), id = 3980324
                          BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], name=[$9], country_code=[$10], imdb_id=[$11], name_pcode_nf=[$12], name_pcode_sf=[$13], md5sum=[$14], id3=[$15], kind1=[$16], id5=[$27], info0=[$28], id4=[$17], movie_id0=[$18], info_type_id=[$19], info=[$20], note=[$21], id00=[$22], movie_id00=[$23], company_id=[$24], company_type_id=[$25], note0=[$26]), id = 3980322
                            BindableJoin(condition=[=($27, $19)], joinType=[inner]), id = 3980321
                              BindableProject(id2=[$12], movie_id1=[$13], subject_id=[$14], status_id=[$15], id00=[$16], kind0=[$17], id10=[$18], kind00=[$19], id20=[$20], name=[$21], country_code=[$22], imdb_id=[$23], name_pcode_nf=[$24], name_pcode_sf=[$25], md5sum=[$26], id1=[$10], kind=[$11], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9]), id = 3980319
                                BindableJoin(condition=[AND(=($6, $13), =($20, $7))], joinType=[inner]), id = 3980318
                                  BindableJoin(condition=[=($10, $8)], joinType=[inner]), id = 3980311
                                    BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 3980310
                                      BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Danish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 3980308
                                        BindableTableScan(table=[[movie_info]]), id = 3464571
                                      BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), NOT(LIKE($4, '%(USA)%')))]), id = 3980309
                                        BindableTableScan(table=[[movie_companies]]), id = 3464559
                                    BindableTableScan(table=[[company_type]]), id = 3464503
                                  BindableJoin(condition=[true], joinType=[inner]), id = 3980317
                                    BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 3980315
                                      BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 3980313
                                        BindableTableScan(table=[[complete_cast]]), id = 3464467
                                        BindableFilter(condition=[=($1, 'cast')]), id = 3980312
                                          BindableTableScan(table=[[comp_cast_type]]), id = 3464471
                                      BindableFilter(condition=[=($1, 'complete')]), id = 3980314
                                        BindableTableScan(table=[[comp_cast_type]]), id = 3464471
                                    BindableFilter(condition=[<>($2, '[us]')]), id = 3980316
                                      BindableTableScan(table=[[company_name]]), id = 3464491
                              BindableFilter(condition=[=($1, 'countries')]), id = 3980320
                                BindableTableScan(table=[[info_type]]), id = 3464515
                          BindableFilter(condition=[=($1, 'rating')]), id = 3980323
                            BindableTableScan(table=[[info_type]]), id = 3464515
                      BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'murder':VARCHAR, 'murder-in-title':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 3980326
                        BindableTableScan(table=[[keyword]]), id = 3464535
                  BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'movie':VARCHAR]:VARCHAR)]), id = 3980329
                    BindableTableScan(table=[[kind_type]]), id = 3464547
          BindableFilter(condition=[<($3, '8.5')]), id = 3980334
            BindableTableScan(table=[[movie_info_idx]]), id = 3464583
        BindableTableScan(table=[[movie_keyword]]), id = 3464595
      BindableFilter(condition=[>($4, 2005)]), id = 3980337
        BindableTableScan(table=[[title]]), id = 3464607


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t WHERE cct1.kind ='cast' AND cct2.kind ='complete+verified' AND chn.name = 'Queen' AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND it3.info = 'trivia' AND k.keyword = 'computer-animation' AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%') AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2010 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND n.id = pi.person_id AND ci.person_id = pi.person_id AND it3.id = pi.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_ANIMATION`
FROM `AKA_NAME` AS `AN`,
`COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT3`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` = 'complete+verified' AND `CHN`.`NAME` = 'Queen' AND `CI`.`NOTE` IN ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `IT3`.`INFO` = 'trivia' AND `K`.`KEYWORD` = 'computer-animation' AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%200%' OR `MI`.`INFO` LIKE 'USA:%200%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `T`.`TITLE` = 'Shrek 2' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2000 AND 2010 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `PI`.`PERSON_ID` AND `CI`.`PERSON_ID` = `PI`.`PERSON_ID` AND `IT3`.`ID` = `PI`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_ANIMATION`
FROM `AKA_NAME` AS `AN`,
`COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT3`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` = 'complete+verified' AND `CHN`.`name` = 'Queen' AND `CI`.`note` IN ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `IT3`.`info` = 'trivia' AND `K`.`keyword` = 'computer-animation' AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%200%' OR `MI`.`info` LIKE 'USA:%200%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `T`.`title` = 'Shrek 2' AND `T`.`production_year` BETWEEN ASYMMETRIC 2000 AND 2010 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `PI`.`person_id` AND `CI`.`person_id` = `PI`.`person_id` AND `IT3`.`id` = `PI`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICED_CHAR=[MIN($0)], VOICING_ACTRESS=[MIN($1)], VOICED_ANIMATION=[MIN($2)])
  LogicalProject(name0=[$17], name2=[$58], title=[$74])
    LogicalFilter(condition=[AND(=($13, 'cast'), =($15, 'complete+verified'), =($17, 'Queen'), OR(=($27, '(voice)'), =($27, '(voice) (uncredited)'), =($27, '(voice: English version)')), =($32, '[us]'), =($38, 'release dates'), =($40, 'trivia'), =($42, 'computer-animation'), IS NOT NULL($52), OR(LIKE($52, 'Japan:%200%'), LIKE($52, 'USA:%200%')), =($61, 'f'), LIKE($58, '%An%'), =($72, 'actress'), =($74, 'Shrek 2'), >=($77, 2000), <=($77, 2010), =($73, $50), =($73, $45), =($73, $25), =($73, $55), =($73, $9), =($45, $25), =($45, $50), =($45, $55), =($45, $9), =($50, $25), =($50, $55), =($50, $9), =($25, $55), =($25, $9), =($55, $9), =($30, $46), =($37, $51), =($57, $24), =($71, $29), =($57, $1), =($24, $1), =($16, $26), =($57, $67), =($24, $67), =($39, $68), =($41, $56), =($12, $10), =($14, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalJoin(condition=[true], joinType=[inner])
                                  LogicalJoin(condition=[true], joinType=[inner])
                                    LogicalJoin(condition=[true], joinType=[inner])
                                      LogicalTableScan(table=[[aka_name]])
                                      LogicalTableScan(table=[[complete_cast]])
                                    LogicalTableScan(table=[[comp_cast_type]])
                                  LogicalTableScan(table=[[comp_cast_type]])
                                LogicalTableScan(table=[[char_name]])
                              LogicalTableScan(table=[[cast_info]])
                            LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[info_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[keyword]])
                    LogicalTableScan(table=[[movie_companies]])
                  LogicalTableScan(table=[[movie_info]])
                LogicalTableScan(table=[[movie_keyword]])
              LogicalTableScan(table=[[name]])
            LogicalTableScan(table=[[person_info]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICED_CHAR=[MIN($0)], VOICING_ACTRESS=[MIN($1)], VOICED_ANIMATION=[MIN($2)]), id = 4175576
  BindableProject(name0=[$17], name2=[$58], title=[$74]), id = 4175575
    BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id11=[$54], movie_id3=[$55], keyword_id=[$56], id12=[$57], name2=[$58], imdb_index1=[$59], imdb_id1=[$60], gender=[$61], name_pcode_cf0=[$62], name_pcode_nf2=[$63], surname_pcode1=[$64], md5sum2=[$65], id13=[$66], person_id1=[$67], info_type_id0=[$68], info2=[$69], note2=[$70], id15=[$83], role=[$84], id14=[$71], title=[$72], imdb_index2=[$73], kind_id=[$74], production_year=[$75], imdb_id2=[$76], phonetic_code0=[$77], episode_of_id=[$78], season_nr=[$79], episode_nr=[$80], series_years=[$81], md5sum3=[$82]), id = 4175574
      BindableJoin(condition=[=($83, $29)], joinType=[inner]), id = 4175573
        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id11=[$54], movie_id3=[$55], keyword_id=[$56], id12=[$57], name2=[$58], imdb_index1=[$59], imdb_id1=[$60], gender=[$61], name_pcode_cf0=[$62], name_pcode_nf2=[$63], surname_pcode1=[$64], md5sum2=[$65], id14=[$78], person_id1=[$79], info_type_id0=[$80], info2=[$81], note2=[$82], id13=[$66], title=[$67], imdb_index2=[$68], kind_id=[$69], production_year=[$70], imdb_id2=[$71], phonetic_code0=[$72], episode_of_id=[$73], season_nr=[$74], episode_nr=[$75], series_years=[$76], md5sum3=[$77]), id = 4175571
          BindableJoin(condition=[AND(=($57, $79), =($39, $80))], joinType=[inner]), id = 4175570
            BindableJoin(condition=[=($50, $66)], joinType=[inner]), id = 4175569
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id12=[$63], movie_id3=[$64], keyword_id=[$65], id11=[$54], name2=[$55], imdb_index1=[$56], imdb_id1=[$57], gender=[$58], name_pcode_cf0=[$59], name_pcode_nf2=[$60], surname_pcode1=[$61], md5sum2=[$62]), id = 4175567
                BindableJoin(condition=[AND(=($45, $64), =($41, $65))], joinType=[inner]), id = 4175566
                  BindableJoin(condition=[=($24, $54)], joinType=[inner]), id = 4175565
                    BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], movie_id1=[$19], subject_id=[$20], status_id=[$21], id10=[$22], kind=[$23], id2=[$24], kind0=[$25], id3=[$26], name0=[$27], imdb_index0=[$28], imdb_id=[$29], name_pcode_nf0=[$30], surname_pcode0=[$31], md5sum0=[$32], id4=[$33], person_id0=[$34], movie_id00=[$35], person_role_id=[$36], note1=[$37], nr_order=[$38], role_id=[$39], id5=[$40], name1=[$41], country_code=[$42], imdb_id0=[$43], name_pcode_nf1=[$44], name_pcode_sf=[$45], md5sum1=[$46], id6=[$47], info0=[$48], id7=[$49], info00=[$50], id8=[$51], keyword=[$52], phonetic_code=[$53], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4175563
                      BindableJoin(condition=[AND(=($47, $2), =($35, $6), =($40, $7))], joinType=[inner]), id = 4175562
                        BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 4175543
                          BindableFilter(condition=[OR(LIKE($3, 'Japan:%200%'), LIKE($3, 'USA:%200%'))]), id = 4175542
                            BindableTableScan(table=[[movie_info]]), id = 3980586
                          BindableTableScan(table=[[movie_companies]]), id = 3980574
                        BindableJoin(condition=[true], joinType=[inner]), id = 4175561
                          BindableJoin(condition=[true], joinType=[inner]), id = 4175559
                            BindableJoin(condition=[true], joinType=[inner]), id = 4175557
                              BindableJoin(condition=[true], joinType=[inner]), id = 4175555
                                BindableProject(id1=[$14], person_id0=[$15], name0=[$16], imdb_index0=[$17], name_pcode_cf=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id00=[$22], movie_id0=[$23], subject_id=[$24], status_id=[$25], id10=[$26], kind=[$27], id2=[$28], kind0=[$29], id0=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6]), id = 4175553
                                  BindableJoin(condition=[AND(=($2, $23), =($1, $15))], joinType=[inner]), id = 4175552
                                    BindableJoin(condition=[=($7, $3)], joinType=[inner]), id = 4175546
                                      BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR]:VARCHAR)]), id = 4175544
                                        BindableTableScan(table=[[cast_info]]), id = 3980518
                                      BindableFilter(condition=[=($1, 'Queen')]), id = 4175545
                                        BindableTableScan(table=[[char_name]]), id = 3980506
                                    BindableJoin(condition=[=($14, $11)], joinType=[inner]), id = 4175551
                                      BindableJoin(condition=[=($12, $10)], joinType=[inner]), id = 4175549
                                        BindableJoin(condition=[true], joinType=[inner]), id = 4175547
                                          BindableTableScan(table=[[aka_name]]), id = 3980470
                                          BindableTableScan(table=[[complete_cast]]), id = 3980474
                                        BindableFilter(condition=[=($1, 'cast')]), id = 4175548
                                          BindableTableScan(table=[[comp_cast_type]]), id = 3980486
                                      BindableFilter(condition=[=($1, 'complete+verified')]), id = 4175550
                                        BindableTableScan(table=[[comp_cast_type]]), id = 3980486
                                BindableFilter(condition=[=($2, '[us]')]), id = 4175554
                                  BindableTableScan(table=[[company_name]]), id = 3980530
                              BindableFilter(condition=[=($1, 'release dates')]), id = 4175556
                                BindableTableScan(table=[[info_type]]), id = 3980542
                            BindableFilter(condition=[=($1, 'trivia')]), id = 4175558
                              BindableTableScan(table=[[info_type]]), id = 3980542
                          BindableFilter(condition=[=($1, 'computer-animation')]), id = 4175560
                            BindableTableScan(table=[[keyword]]), id = 3980562
                    BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 4175564
                      BindableTableScan(table=[[name]]), id = 3980610
                  BindableTableScan(table=[[movie_keyword]]), id = 3980598
              BindableFilter(condition=[AND(=($1, 'Shrek 2'), SEARCH($4, Sarg[[2000..2010]]))]), id = 4175568
                BindableTableScan(table=[[title]]), id = 3980646
            BindableTableScan(table=[[person_info]]), id = 3980622
        BindableFilter(condition=[=($1, 'actress')]), id = 4175572
          BindableTableScan(table=[[role_type]]), id = 3980634


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t WHERE cct1.kind ='cast' AND cct2.kind ='complete+verified' AND chn.name = 'Queen' AND ci.note IN ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND it3.info = 'height' AND k.keyword = 'computer-animation' AND mi.info LIKE 'USA:%200%' AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND t.title = 'Shrek 2' AND t.production_year BETWEEN 2000 AND 2005 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND n.id = pi.person_id AND ci.person_id = pi.person_id AND it3.id = pi.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_ANIMATION`
FROM `AKA_NAME` AS `AN`,
`COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT3`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` = 'complete+verified' AND `CHN`.`NAME` = 'Queen' AND `CI`.`NOTE` IN ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `IT3`.`INFO` = 'height' AND `K`.`KEYWORD` = 'computer-animation' AND `MI`.`INFO` LIKE 'USA:%200%' AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `T`.`TITLE` = 'Shrek 2' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2000 AND 2005 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `PI`.`PERSON_ID` AND `CI`.`PERSON_ID` = `PI`.`PERSON_ID` AND `IT3`.`ID` = `PI`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_ANIMATION`
FROM `AKA_NAME` AS `AN`,
`COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT3`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` = 'complete+verified' AND `CHN`.`name` = 'Queen' AND `CI`.`note` IN ('(voice)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `IT3`.`info` = 'height' AND `K`.`keyword` = 'computer-animation' AND `MI`.`info` LIKE 'USA:%200%' AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `T`.`title` = 'Shrek 2' AND `T`.`production_year` BETWEEN ASYMMETRIC 2000 AND 2005 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `PI`.`person_id` AND `CI`.`person_id` = `PI`.`person_id` AND `IT3`.`id` = `PI`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICED_CHAR=[MIN($0)], VOICING_ACTRESS=[MIN($1)], VOICED_ANIMATION=[MIN($2)])
  LogicalProject(name0=[$17], name2=[$58], title=[$74])
    LogicalFilter(condition=[AND(=($13, 'cast'), =($15, 'complete+verified'), =($17, 'Queen'), OR(=($27, '(voice)'), =($27, '(voice) (uncredited)'), =($27, '(voice: English version)')), =($32, '[us]'), =($38, 'release dates'), =($40, 'height'), =($42, 'computer-animation'), LIKE($52, 'USA:%200%'), =($61, 'f'), LIKE($58, '%An%'), =($72, 'actress'), =($74, 'Shrek 2'), >=($77, 2000), <=($77, 2005), =($73, $50), =($73, $45), =($73, $25), =($73, $55), =($73, $9), =($45, $25), =($45, $50), =($45, $55), =($45, $9), =($50, $25), =($50, $55), =($50, $9), =($25, $55), =($25, $9), =($55, $9), =($30, $46), =($37, $51), =($57, $24), =($71, $29), =($57, $1), =($24, $1), =($16, $26), =($57, $67), =($24, $67), =($39, $68), =($41, $56), =($12, $10), =($14, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalJoin(condition=[true], joinType=[inner])
                                  LogicalJoin(condition=[true], joinType=[inner])
                                    LogicalJoin(condition=[true], joinType=[inner])
                                      LogicalTableScan(table=[[aka_name]])
                                      LogicalTableScan(table=[[complete_cast]])
                                    LogicalTableScan(table=[[comp_cast_type]])
                                  LogicalTableScan(table=[[comp_cast_type]])
                                LogicalTableScan(table=[[char_name]])
                              LogicalTableScan(table=[[cast_info]])
                            LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[info_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[keyword]])
                    LogicalTableScan(table=[[movie_companies]])
                  LogicalTableScan(table=[[movie_info]])
                LogicalTableScan(table=[[movie_keyword]])
              LogicalTableScan(table=[[name]])
            LogicalTableScan(table=[[person_info]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICED_CHAR=[MIN($0)], VOICING_ACTRESS=[MIN($1)], VOICED_ANIMATION=[MIN($2)]), id = 4370812
  BindableProject(name0=[$17], name2=[$58], title=[$74]), id = 4370811
    BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id11=[$54], movie_id3=[$55], keyword_id=[$56], id12=[$57], name2=[$58], imdb_index1=[$59], imdb_id1=[$60], gender=[$61], name_pcode_cf0=[$62], name_pcode_nf2=[$63], surname_pcode1=[$64], md5sum2=[$65], id13=[$66], person_id1=[$67], info_type_id0=[$68], info2=[$69], note2=[$70], id15=[$83], role=[$84], id14=[$71], title=[$72], imdb_index2=[$73], kind_id=[$74], production_year=[$75], imdb_id2=[$76], phonetic_code0=[$77], episode_of_id=[$78], season_nr=[$79], episode_nr=[$80], series_years=[$81], md5sum3=[$82]), id = 4370810
      BindableJoin(condition=[=($83, $29)], joinType=[inner]), id = 4370809
        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id11=[$54], movie_id3=[$55], keyword_id=[$56], id12=[$57], name2=[$58], imdb_index1=[$59], imdb_id1=[$60], gender=[$61], name_pcode_cf0=[$62], name_pcode_nf2=[$63], surname_pcode1=[$64], md5sum2=[$65], id14=[$78], person_id1=[$79], info_type_id0=[$80], info2=[$81], note2=[$82], id13=[$66], title=[$67], imdb_index2=[$68], kind_id=[$69], production_year=[$70], imdb_id2=[$71], phonetic_code0=[$72], episode_of_id=[$73], season_nr=[$74], episode_nr=[$75], series_years=[$76], md5sum3=[$77]), id = 4370807
          BindableJoin(condition=[AND(=($57, $79), =($39, $80))], joinType=[inner]), id = 4370806
            BindableJoin(condition=[=($50, $66)], joinType=[inner]), id = 4370805
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id12=[$63], movie_id3=[$64], keyword_id=[$65], id11=[$54], name2=[$55], imdb_index1=[$56], imdb_id1=[$57], gender=[$58], name_pcode_cf0=[$59], name_pcode_nf2=[$60], surname_pcode1=[$61], md5sum2=[$62]), id = 4370803
                BindableJoin(condition=[AND(=($45, $64), =($41, $65))], joinType=[inner]), id = 4370802
                  BindableJoin(condition=[=($24, $54)], joinType=[inner]), id = 4370801
                    BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], movie_id1=[$19], subject_id=[$20], status_id=[$21], id10=[$22], kind=[$23], id2=[$24], kind0=[$25], id3=[$26], name0=[$27], imdb_index0=[$28], imdb_id=[$29], name_pcode_nf0=[$30], surname_pcode0=[$31], md5sum0=[$32], id4=[$33], person_id0=[$34], movie_id00=[$35], person_role_id=[$36], note1=[$37], nr_order=[$38], role_id=[$39], id5=[$40], name1=[$41], country_code=[$42], imdb_id0=[$43], name_pcode_nf1=[$44], name_pcode_sf=[$45], md5sum1=[$46], id6=[$47], info0=[$48], id7=[$49], info00=[$50], id8=[$51], keyword=[$52], phonetic_code=[$53], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4370799
                      BindableJoin(condition=[AND(=($47, $2), =($35, $6), =($40, $7))], joinType=[inner]), id = 4370798
                        BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 4370779
                          BindableFilter(condition=[LIKE($3, 'USA:%200%')]), id = 4370778
                            BindableTableScan(table=[[movie_info]]), id = 4175822
                          BindableTableScan(table=[[movie_companies]]), id = 4175810
                        BindableJoin(condition=[true], joinType=[inner]), id = 4370797
                          BindableJoin(condition=[true], joinType=[inner]), id = 4370795
                            BindableJoin(condition=[true], joinType=[inner]), id = 4370793
                              BindableJoin(condition=[true], joinType=[inner]), id = 4370791
                                BindableProject(id1=[$14], person_id0=[$15], name0=[$16], imdb_index0=[$17], name_pcode_cf=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id00=[$22], movie_id0=[$23], subject_id=[$24], status_id=[$25], id10=[$26], kind=[$27], id2=[$28], kind0=[$29], id0=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6]), id = 4370789
                                  BindableJoin(condition=[AND(=($2, $23), =($1, $15))], joinType=[inner]), id = 4370788
                                    BindableJoin(condition=[=($7, $3)], joinType=[inner]), id = 4370782
                                      BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR]:VARCHAR)]), id = 4370780
                                        BindableTableScan(table=[[cast_info]]), id = 4175754
                                      BindableFilter(condition=[=($1, 'Queen')]), id = 4370781
                                        BindableTableScan(table=[[char_name]]), id = 4175742
                                    BindableJoin(condition=[=($14, $11)], joinType=[inner]), id = 4370787
                                      BindableJoin(condition=[=($12, $10)], joinType=[inner]), id = 4370785
                                        BindableJoin(condition=[true], joinType=[inner]), id = 4370783
                                          BindableTableScan(table=[[aka_name]]), id = 4175706
                                          BindableTableScan(table=[[complete_cast]]), id = 4175710
                                        BindableFilter(condition=[=($1, 'cast')]), id = 4370784
                                          BindableTableScan(table=[[comp_cast_type]]), id = 4175722
                                      BindableFilter(condition=[=($1, 'complete+verified')]), id = 4370786
                                        BindableTableScan(table=[[comp_cast_type]]), id = 4175722
                                BindableFilter(condition=[=($2, '[us]')]), id = 4370790
                                  BindableTableScan(table=[[company_name]]), id = 4175766
                              BindableFilter(condition=[=($1, 'release dates')]), id = 4370792
                                BindableTableScan(table=[[info_type]]), id = 4175778
                            BindableFilter(condition=[=($1, 'height')]), id = 4370794
                              BindableTableScan(table=[[info_type]]), id = 4175778
                          BindableFilter(condition=[=($1, 'computer-animation')]), id = 4370796
                            BindableTableScan(table=[[keyword]]), id = 4175798
                    BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 4370800
                      BindableTableScan(table=[[name]]), id = 4175846
                  BindableTableScan(table=[[movie_keyword]]), id = 4175834
              BindableFilter(condition=[AND(=($1, 'Shrek 2'), SEARCH($4, Sarg[[2000..2005]]))]), id = 4370804
                BindableTableScan(table=[[title]]), id = 4175882
            BindableTableScan(table=[[person_info]]), id = 4175858
        BindableFilter(condition=[=($1, 'actress')]), id = 4370808
          BindableTableScan(table=[[role_type]]), id = 4175870


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(chn.name) AS voiced_char, MIN(n.name) AS voicing_actress, MIN(t.title) AS voiced_animation FROM aka_name AS an, complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, char_name AS chn, cast_info AS ci, company_name AS cn, info_type AS it, info_type AS it3, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_keyword AS mk, name AS n, person_info AS pi, role_type AS rt, title AS t WHERE cct1.kind ='cast' AND cct2.kind ='complete+verified' AND ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND it.info = 'release dates' AND it3.info = 'trivia' AND k.keyword = 'computer-animation' AND mi.info IS NOT NULL AND (mi.info LIKE 'Japan:%200%' OR mi.info LIKE 'USA:%200%') AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND t.production_year BETWEEN 2000 AND 2010 AND t.id = mi.movie_id AND t.id = mc.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND mc.movie_id = ci.movie_id AND mc.movie_id = mi.movie_id AND mc.movie_id = mk.movie_id AND mc.movie_id = cc.movie_id AND mi.movie_id = ci.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND cn.id = mc.company_id AND it.id = mi.info_type_id AND n.id = ci.person_id AND rt.id = ci.role_id AND n.id = an.person_id AND ci.person_id = an.person_id AND chn.id = ci.person_role_id AND n.id = pi.person_id AND ci.person_id = pi.person_id AND it3.id = pi.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_ANIMATION`
FROM `AKA_NAME` AS `AN`,
`COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT3`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` = 'complete+verified' AND `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `IT`.`INFO` = 'release dates' AND `IT3`.`INFO` = 'trivia' AND `K`.`KEYWORD` = 'computer-animation' AND `MI`.`INFO` IS NOT NULL AND (`MI`.`INFO` LIKE 'Japan:%200%' OR `MI`.`INFO` LIKE 'USA:%200%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2000 AND 2010 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CI`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `RT`.`ID` = `CI`.`ROLE_ID` AND `N`.`ID` = `AN`.`PERSON_ID` AND `CI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `N`.`ID` = `PI`.`PERSON_ID` AND `CI`.`PERSON_ID` = `PI`.`PERSON_ID` AND `IT3`.`ID` = `PI`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`CHN`.`NAME`) AS `VOICED_CHAR`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `VOICED_ANIMATION`
FROM `AKA_NAME` AS `AN`,
`COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT`,
`INFO_TYPE` AS `IT3`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` = 'complete+verified' AND `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `IT`.`info` = 'release dates' AND `IT3`.`info` = 'trivia' AND `K`.`keyword` = 'computer-animation' AND `MI`.`info` IS NOT NULL AND (`MI`.`info` LIKE 'Japan:%200%' OR `MI`.`info` LIKE 'USA:%200%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `T`.`production_year` BETWEEN ASYMMETRIC 2000 AND 2010 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `MC`.`movie_id` = `CI`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `MC`.`movie_id` = `MK`.`movie_id` AND `MC`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `CI`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `CN`.`id` = `MC`.`company_id` AND `IT`.`id` = `MI`.`info_type_id` AND `N`.`id` = `CI`.`person_id` AND `RT`.`id` = `CI`.`role_id` AND `N`.`id` = `AN`.`person_id` AND `CI`.`person_id` = `AN`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `N`.`id` = `PI`.`person_id` AND `CI`.`person_id` = `PI`.`person_id` AND `IT3`.`id` = `PI`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], VOICED_CHAR=[MIN($0)], VOICING_ACTRESS=[MIN($1)], VOICED_ANIMATION=[MIN($2)])
  LogicalProject(name0=[$17], name2=[$58], title=[$74])
    LogicalFilter(condition=[AND(=($13, 'cast'), =($15, 'complete+verified'), OR(=($27, '(voice)'), =($27, '(voice: Japanese version)'), =($27, '(voice) (uncredited)'), =($27, '(voice: English version)')), =($32, '[us]'), =($38, 'release dates'), =($40, 'trivia'), =($42, 'computer-animation'), IS NOT NULL($52), OR(LIKE($52, 'Japan:%200%'), LIKE($52, 'USA:%200%')), =($61, 'f'), LIKE($58, '%An%'), =($72, 'actress'), >=($77, 2000), <=($77, 2010), =($73, $50), =($73, $45), =($73, $25), =($73, $55), =($73, $9), =($45, $25), =($45, $50), =($45, $55), =($45, $9), =($50, $25), =($50, $55), =($50, $9), =($25, $55), =($25, $9), =($55, $9), =($30, $46), =($37, $51), =($57, $24), =($71, $29), =($57, $1), =($24, $1), =($16, $26), =($57, $67), =($24, $67), =($39, $68), =($41, $56), =($12, $10), =($14, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalJoin(condition=[true], joinType=[inner])
                                  LogicalJoin(condition=[true], joinType=[inner])
                                    LogicalJoin(condition=[true], joinType=[inner])
                                      LogicalTableScan(table=[[aka_name]])
                                      LogicalTableScan(table=[[complete_cast]])
                                    LogicalTableScan(table=[[comp_cast_type]])
                                  LogicalTableScan(table=[[comp_cast_type]])
                                LogicalTableScan(table=[[char_name]])
                              LogicalTableScan(table=[[cast_info]])
                            LogicalTableScan(table=[[company_name]])
                          LogicalTableScan(table=[[info_type]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[keyword]])
                    LogicalTableScan(table=[[movie_companies]])
                  LogicalTableScan(table=[[movie_info]])
                LogicalTableScan(table=[[movie_keyword]])
              LogicalTableScan(table=[[name]])
            LogicalTableScan(table=[[person_info]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], VOICED_CHAR=[MIN($0)], VOICING_ACTRESS=[MIN($1)], VOICED_ANIMATION=[MIN($2)]), id = 4561683
  BindableProject(name0=[$17], name2=[$58], title=[$74]), id = 4561682
    BindableJoin(condition=[=($50, $73)], joinType=[inner]), id = 4561681
      BindableJoin(condition=[=($71, $29)], joinType=[inner]), id = 4561679
        BindableJoin(condition=[AND(=($57, $67), =($39, $68))], joinType=[inner]), id = 4561677
          BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], movie_id=[$9], subject_id=[$10], status_id=[$11], id1=[$12], kind=[$13], id2=[$14], kind0=[$15], id3=[$16], name0=[$17], imdb_index0=[$18], imdb_id=[$19], name_pcode_nf0=[$20], surname_pcode0=[$21], md5sum0=[$22], id4=[$23], person_id0=[$24], movie_id0=[$25], person_role_id=[$26], note=[$27], nr_order=[$28], role_id=[$29], id5=[$30], name1=[$31], country_code=[$32], imdb_id0=[$33], name_pcode_nf1=[$34], name_pcode_sf=[$35], md5sum1=[$36], id6=[$37], info=[$38], id7=[$39], info0=[$40], id8=[$41], keyword=[$42], phonetic_code=[$43], id9=[$44], movie_id1=[$45], company_id=[$46], company_type_id=[$47], note0=[$48], id10=[$49], movie_id2=[$50], info_type_id=[$51], info1=[$52], note1=[$53], id12=[$63], movie_id3=[$64], keyword_id=[$65], id11=[$54], name2=[$55], imdb_index1=[$56], imdb_id1=[$57], gender=[$58], name_pcode_cf0=[$59], name_pcode_nf2=[$60], surname_pcode1=[$61], md5sum2=[$62]), id = 4561676
            BindableJoin(condition=[AND(=($45, $64), =($41, $65))], joinType=[inner]), id = 4561675
              BindableJoin(condition=[=($24, $54)], joinType=[inner]), id = 4561674
                BindableProject(id1=[$10], person_id=[$11], name=[$12], imdb_index=[$13], name_pcode_cf=[$14], name_pcode_nf=[$15], surname_pcode=[$16], md5sum=[$17], id00=[$18], movie_id1=[$19], subject_id=[$20], status_id=[$21], id10=[$22], kind=[$23], id2=[$24], kind0=[$25], id3=[$26], name0=[$27], imdb_index0=[$28], imdb_id=[$29], name_pcode_nf0=[$30], surname_pcode0=[$31], md5sum0=[$32], id4=[$33], person_id0=[$34], movie_id00=[$35], person_role_id=[$36], note1=[$37], nr_order=[$38], role_id=[$39], id5=[$40], name1=[$41], country_code=[$42], imdb_id0=[$43], name_pcode_nf1=[$44], name_pcode_sf=[$45], md5sum1=[$46], id6=[$47], info0=[$48], id7=[$49], info00=[$50], id8=[$51], keyword=[$52], phonetic_code=[$53], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4561672
                  BindableJoin(condition=[AND(=($47, $2), =($35, $6), =($40, $7))], joinType=[inner]), id = 4561671
                    BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 4561653
                      BindableFilter(condition=[OR(LIKE($3, 'Japan:%200%'), LIKE($3, 'USA:%200%'))]), id = 4561652
                        BindableTableScan(table=[[movie_info]]), id = 4371058
                      BindableTableScan(table=[[movie_companies]]), id = 4371046
                    BindableJoin(condition=[true], joinType=[inner]), id = 4561670
                      BindableJoin(condition=[true], joinType=[inner]), id = 4561668
                        BindableJoin(condition=[true], joinType=[inner]), id = 4561666
                          BindableJoin(condition=[true], joinType=[inner]), id = 4561664
                            BindableProject(id1=[$14], person_id0=[$15], name0=[$16], imdb_index0=[$17], name_pcode_cf=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id00=[$22], movie_id0=[$23], subject_id=[$24], status_id=[$25], id10=[$26], kind=[$27], id2=[$28], kind0=[$29], id0=[$7], name=[$8], imdb_index=[$9], imdb_id=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6]), id = 4561662
                              BindableJoin(condition=[AND(=($2, $23), =($1, $15))], joinType=[inner]), id = 4561661
                                BindableJoin(condition=[=($7, $3)], joinType=[inner]), id = 4561655
                                  BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 4561654
                                    BindableTableScan(table=[[cast_info]]), id = 4370990
                                  BindableTableScan(table=[[char_name]]), id = 4370978
                                BindableJoin(condition=[=($14, $11)], joinType=[inner]), id = 4561660
                                  BindableJoin(condition=[=($12, $10)], joinType=[inner]), id = 4561658
                                    BindableJoin(condition=[true], joinType=[inner]), id = 4561656
                                      BindableTableScan(table=[[aka_name]]), id = 4370942
                                      BindableTableScan(table=[[complete_cast]]), id = 4370946
                                    BindableFilter(condition=[=($1, 'cast')]), id = 4561657
                                      BindableTableScan(table=[[comp_cast_type]]), id = 4370958
                                  BindableFilter(condition=[=($1, 'complete+verified')]), id = 4561659
                                    BindableTableScan(table=[[comp_cast_type]]), id = 4370958
                            BindableFilter(condition=[=($2, '[us]')]), id = 4561663
                              BindableTableScan(table=[[company_name]]), id = 4371002
                          BindableFilter(condition=[=($1, 'release dates')]), id = 4561665
                            BindableTableScan(table=[[info_type]]), id = 4371014
                        BindableFilter(condition=[=($1, 'trivia')]), id = 4561667
                          BindableTableScan(table=[[info_type]]), id = 4371014
                      BindableFilter(condition=[=($1, 'computer-animation')]), id = 4561669
                        BindableTableScan(table=[[keyword]]), id = 4371034
                BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 4561673
                  BindableTableScan(table=[[name]]), id = 4371082
              BindableTableScan(table=[[movie_keyword]]), id = 4371070
          BindableTableScan(table=[[person_info]]), id = 4371094
        BindableFilter(condition=[=($1, 'actress')]), id = 4561678
          BindableTableScan(table=[[role_type]]), id = 4371106
      BindableFilter(condition=[SEARCH($4, Sarg[[2000..2010]])]), id = 4561680
        BindableTableScan(table=[[title]]), id = 4371118


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t WHERE cn.country_code ='[de]' AND k.keyword ='character-name-in-title' AND cn.id = mc.company_id AND mc.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[de]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[de]' AND `K`.`keyword` = 'character-name-in-title' AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$19])
    LogicalFilter(condition=[AND(=($2, '[de]'), =($8, 'character-name-in-title'), =($0, $12), =($11, $18), =($18, $16), =($17, $7), =($11, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 4563321
  BindableProject(title=[$19]), id = 4563320
    BindableJoin(condition=[=($11, $18)], joinType=[inner]), id = 4563319
      BindableJoin(condition=[AND(=($17, $7), =($11, $16))], joinType=[inner]), id = 4563318
        BindableJoin(condition=[=($0, $12)], joinType=[inner]), id = 4563317
          BindableJoin(condition=[true], joinType=[inner]), id = 4563316
            BindableFilter(condition=[=($2, '[de]')]), id = 4563314
              BindableTableScan(table=[[company_name]]), id = 4561731
            BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 4563315
              BindableTableScan(table=[[keyword]]), id = 4561735
          BindableTableScan(table=[[movie_companies]]), id = 4561747
        BindableTableScan(table=[[movie_keyword]]), id = 4561759
      BindableTableScan(table=[[title]]), id = 4561771


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t WHERE cn.country_code ='[nl]' AND k.keyword ='character-name-in-title' AND cn.id = mc.company_id AND mc.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[nl]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[nl]' AND `K`.`keyword` = 'character-name-in-title' AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$19])
    LogicalFilter(condition=[AND(=($2, '[nl]'), =($8, 'character-name-in-title'), =($0, $12), =($11, $18), =($18, $16), =($17, $7), =($11, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 4564959
  BindableProject(title=[$19]), id = 4564958
    BindableJoin(condition=[=($11, $18)], joinType=[inner]), id = 4564957
      BindableJoin(condition=[AND(=($17, $7), =($11, $16))], joinType=[inner]), id = 4564956
        BindableJoin(condition=[=($0, $12)], joinType=[inner]), id = 4564955
          BindableJoin(condition=[true], joinType=[inner]), id = 4564954
            BindableFilter(condition=[=($2, '[nl]')]), id = 4564952
              BindableTableScan(table=[[company_name]]), id = 4563369
            BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 4564953
              BindableTableScan(table=[[keyword]]), id = 4563373
          BindableTableScan(table=[[movie_companies]]), id = 4563385
        BindableTableScan(table=[[movie_keyword]]), id = 4563397
      BindableTableScan(table=[[title]]), id = 4563409


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t WHERE cn.country_code ='[sm]' AND k.keyword ='character-name-in-title' AND cn.id = mc.company_id AND mc.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[sm]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[sm]' AND `K`.`keyword` = 'character-name-in-title' AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$19])
    LogicalFilter(condition=[AND(=($2, '[sm]'), =($8, 'character-name-in-title'), =($0, $12), =($11, $18), =($18, $16), =($17, $7), =($11, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 4566597
  BindableProject(title=[$19]), id = 4566596
    BindableJoin(condition=[=($11, $18)], joinType=[inner]), id = 4566595
      BindableJoin(condition=[AND(=($17, $7), =($11, $16))], joinType=[inner]), id = 4566594
        BindableJoin(condition=[=($0, $12)], joinType=[inner]), id = 4566593
          BindableJoin(condition=[true], joinType=[inner]), id = 4566592
            BindableFilter(condition=[=($2, '[sm]')]), id = 4566590
              BindableTableScan(table=[[company_name]]), id = 4565007
            BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 4566591
              BindableTableScan(table=[[keyword]]), id = 4565011
          BindableTableScan(table=[[movie_companies]]), id = 4565023
        BindableTableScan(table=[[movie_keyword]]), id = 4565035
      BindableTableScan(table=[[title]]), id = 4565047


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM company_name AS cn, keyword AS k, movie_companies AS mc, movie_keyword AS mk, title AS t WHERE cn.country_code ='[us]' AND k.keyword ='character-name-in-title' AND cn.id = mc.company_id AND mc.movie_id = t.id AND t.id = mk.movie_id AND mk.keyword_id = k.id AND mc.movie_id = mk.movie_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `K`.`KEYWORD` = 'character-name-in-title' AND `CN`.`ID` = `MC`.`COMPANY_ID` AND `MC`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `MC`.`MOVIE_ID` = `MK`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `COMPANY_NAME` AS `CN`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `K`.`keyword` = 'character-name-in-title' AND `CN`.`id` = `MC`.`company_id` AND `MC`.`movie_id` = `T`.`id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`keyword_id` = `K`.`id` AND `MC`.`movie_id` = `MK`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$19])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($8, 'character-name-in-title'), =($0, $12), =($11, $18), =($18, $16), =($17, $7), =($11, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 4568235
  BindableProject(title=[$19]), id = 4568234
    BindableJoin(condition=[=($11, $18)], joinType=[inner]), id = 4568233
      BindableJoin(condition=[AND(=($17, $7), =($11, $16))], joinType=[inner]), id = 4568232
        BindableJoin(condition=[=($0, $12)], joinType=[inner]), id = 4568231
          BindableJoin(condition=[true], joinType=[inner]), id = 4568230
            BindableFilter(condition=[=($2, '[us]')]), id = 4568228
              BindableTableScan(table=[[company_name]]), id = 4566645
            BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 4568229
              BindableTableScan(table=[[keyword]]), id = 4566649
          BindableTableScan(table=[[movie_companies]]), id = 4566661
        BindableTableScan(table=[[movie_keyword]]), id = 4566673
      BindableTableScan(table=[[title]]), id = 4566685


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS complete_violent_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind IN ('cast', 'crew') AND cct2.kind ='complete+verified' AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info IN ('Horror', 'Thriller') AND n.gender = 'm' AND t.production_year > 2000 AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `COMPLETE_VIOLENT_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` IN ('cast', 'crew') AND `CCT2`.`KIND` = 'complete+verified' AND `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`INFO` IN ('Horror', 'Thriller') AND `N`.`GENDER` = 'm' AND `T`.`PRODUCTION_YEAR` > 2000 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `COMPLETE_VIOLENT_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` IN ('cast', 'crew') AND `CCT2`.`kind` = 'complete+verified' AND `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`info` IN ('Horror', 'Thriller') AND `N`.`gender` = 'm' AND `T`.`production_year` > 2000 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], COMPLETE_VIOLENT_MOVIE=[MIN($3)])
  LogicalProject(info1=[$25], info2=[$30], name=[$36], title=[$45])
    LogicalFilter(condition=[AND(OR(=($5, 'cast'), =($5, 'crew')), =($7, 'complete+verified'), OR(=($12, '(writer)'), =($12, '(head writer)'), =($12, '(written by)'), =($12, '(story)'), =($12, '(story editor)')), =($16, 'genres'), =($18, 'votes'), OR(=($20, 'murder'), =($20, 'violence'), =($20, 'blood'), =($20, 'gore'), =($20, 'death'), =($20, 'female-nudity'), =($20, 'hospital')), OR(=($25, 'Horror'), =($25, 'Thriller')), =($39, 'm'), >($48, 2000), =($44, $23), =($44, $28), =($44, $10), =($44, $33), =($44, $1), =($10, $23), =($10, $28), =($10, $33), =($10, $1), =($23, $28), =($23, $33), =($23, $1), =($28, $33), =($28, $1), =($33, $1), =($35, $9), =($15, $24), =($17, $29), =($19, $34), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[cast_info]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], COMPLETE_VIOLENT_MOVIE=[MIN($3)]), id = 4578770
  BindableProject(info1=[$25], info2=[$30], name=[$36], title=[$45]), id = 4578769
    BindableJoin(condition=[=($23, $44)], joinType=[inner]), id = 4578768
      BindableJoin(condition=[=($35, $9)], joinType=[inner]), id = 4578766
        BindableJoin(condition=[AND(=($10, $33), =($19, $34))], joinType=[inner]), id = 4578764
          BindableJoin(condition=[AND(=($10, $28), =($17, $29))], joinType=[inner]), id = 4578763
            BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], person_id=[$9], movie_id0=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id3=[$15], info=[$16], id4=[$17], info0=[$18], id6=[$24], keyword=[$25], phonetic_code=[$26], id5=[$19], movie_id1=[$20], info_type_id=[$21], info1=[$22], note0=[$23]), id = 4578762
              BindableJoin(condition=[true], joinType=[inner]), id = 4578761
                BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], person_id=[$9], movie_id0=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id3=[$15], info=[$16], id5=[$22], info1=[$23], id4=[$17], movie_id1=[$18], info_type_id=[$19], info0=[$20], note0=[$21]), id = 4578759
                  BindableJoin(condition=[true], joinType=[inner]), id = 4578758
                    BindableProject(id1=[$7], movie_id0=[$8], subject_id=[$9], status_id=[$10], id00=[$11], kind=[$12], id10=[$13], kind0=[$14], id2=[$15], person_id=[$16], movie_id00=[$17], person_role_id=[$18], note0=[$19], nr_order=[$20], role_id=[$21], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4578756
                      BindableJoin(condition=[=($17, $1)], joinType=[inner]), id = 4578755
                        BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 4578748
                          BindableFilter(condition=[SEARCH($3, Sarg['Horror':VARCHAR, 'Thriller':VARCHAR]:VARCHAR)]), id = 4578746
                            BindableTableScan(table=[[movie_info]]), id = 4568398
                          BindableFilter(condition=[=($1, 'genres')]), id = 4578747
                            BindableTableScan(table=[[info_type]]), id = 4568366
                        BindableJoin(condition=[=($10, $1)], joinType=[inner]), id = 4578754
                          BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 4578752
                            BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 4578750
                              BindableTableScan(table=[[complete_cast]]), id = 4568330
                              BindableFilter(condition=[SEARCH($1, Sarg['cast':VARCHAR, 'crew':VARCHAR]:VARCHAR)]), id = 4578749
                                BindableTableScan(table=[[comp_cast_type]]), id = 4568334
                            BindableFilter(condition=[=($1, 'complete+verified')]), id = 4578751
                              BindableTableScan(table=[[comp_cast_type]]), id = 4568334
                          BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 4578753
                            BindableTableScan(table=[[cast_info]]), id = 4568354
                    BindableFilter(condition=[=($1, 'votes')]), id = 4578757
                      BindableTableScan(table=[[info_type]]), id = 4568366
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 4578760
                  BindableTableScan(table=[[keyword]]), id = 4568386
            BindableTableScan(table=[[movie_info_idx]]), id = 4568410
          BindableTableScan(table=[[movie_keyword]]), id = 4568422
        BindableFilter(condition=[=($4, 'm')]), id = 4578765
          BindableTableScan(table=[[name]]), id = 4568434
      BindableFilter(condition=[>($4, 2000)]), id = 4578767
        BindableTableScan(table=[[title]]), id = 4568446


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS complete_gore_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind IN ('cast', 'crew') AND cct2.kind ='complete+verified' AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info IN ('Horror', 'Thriller') AND n.gender = 'm' AND t.production_year > 2000 AND (t.title LIKE '%Freddy%' OR t.title LIKE '%Jason%' OR t.title LIKE 'Saw%') AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `COMPLETE_GORE_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` IN ('cast', 'crew') AND `CCT2`.`KIND` = 'complete+verified' AND `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`INFO` IN ('Horror', 'Thriller') AND `N`.`GENDER` = 'm' AND `T`.`PRODUCTION_YEAR` > 2000 AND (`T`.`TITLE` LIKE '%Freddy%' OR `T`.`TITLE` LIKE '%Jason%' OR `T`.`TITLE` LIKE 'Saw%') AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `COMPLETE_GORE_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` IN ('cast', 'crew') AND `CCT2`.`kind` = 'complete+verified' AND `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`info` IN ('Horror', 'Thriller') AND `N`.`gender` = 'm' AND `T`.`production_year` > 2000 AND (`T`.`title` LIKE '%Freddy%' OR `T`.`title` LIKE '%Jason%' OR `T`.`title` LIKE 'Saw%') AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], COMPLETE_GORE_MOVIE=[MIN($3)])
  LogicalProject(info1=[$25], info2=[$30], name=[$36], title=[$45])
    LogicalFilter(condition=[AND(OR(=($5, 'cast'), =($5, 'crew')), =($7, 'complete+verified'), OR(=($12, '(writer)'), =($12, '(head writer)'), =($12, '(written by)'), =($12, '(story)'), =($12, '(story editor)')), =($16, 'genres'), =($18, 'votes'), OR(=($20, 'murder'), =($20, 'violence'), =($20, 'blood'), =($20, 'gore'), =($20, 'death'), =($20, 'female-nudity'), =($20, 'hospital')), OR(=($25, 'Horror'), =($25, 'Thriller')), =($39, 'm'), >($48, 2000), OR(LIKE($45, '%Freddy%'), LIKE($45, '%Jason%'), LIKE($45, 'Saw%')), =($44, $23), =($44, $28), =($44, $10), =($44, $33), =($44, $1), =($10, $23), =($10, $28), =($10, $33), =($10, $1), =($23, $28), =($23, $33), =($23, $1), =($28, $33), =($28, $1), =($33, $1), =($35, $9), =($15, $24), =($17, $29), =($19, $34), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[cast_info]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], COMPLETE_GORE_MOVIE=[MIN($3)]), id = 4589305
  BindableProject(info1=[$25], info2=[$30], name=[$36], title=[$45]), id = 4589304
    BindableJoin(condition=[=($23, $44)], joinType=[inner]), id = 4589303
      BindableJoin(condition=[=($35, $9)], joinType=[inner]), id = 4589301
        BindableJoin(condition=[AND(=($10, $33), =($19, $34))], joinType=[inner]), id = 4589299
          BindableJoin(condition=[AND(=($10, $28), =($17, $29))], joinType=[inner]), id = 4589298
            BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], person_id=[$9], movie_id0=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id3=[$15], info=[$16], id4=[$17], info0=[$18], id6=[$24], keyword=[$25], phonetic_code=[$26], id5=[$19], movie_id1=[$20], info_type_id=[$21], info1=[$22], note0=[$23]), id = 4589297
              BindableJoin(condition=[true], joinType=[inner]), id = 4589296
                BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], person_id=[$9], movie_id0=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id3=[$15], info=[$16], id5=[$22], info1=[$23], id4=[$17], movie_id1=[$18], info_type_id=[$19], info0=[$20], note0=[$21]), id = 4589294
                  BindableJoin(condition=[true], joinType=[inner]), id = 4589293
                    BindableProject(id1=[$7], movie_id0=[$8], subject_id=[$9], status_id=[$10], id00=[$11], kind=[$12], id10=[$13], kind0=[$14], id2=[$15], person_id=[$16], movie_id00=[$17], person_role_id=[$18], note0=[$19], nr_order=[$20], role_id=[$21], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4589291
                      BindableJoin(condition=[=($17, $1)], joinType=[inner]), id = 4589290
                        BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 4589283
                          BindableFilter(condition=[SEARCH($3, Sarg['Horror':VARCHAR, 'Thriller':VARCHAR]:VARCHAR)]), id = 4589281
                            BindableTableScan(table=[[movie_info]]), id = 4578933
                          BindableFilter(condition=[=($1, 'genres')]), id = 4589282
                            BindableTableScan(table=[[info_type]]), id = 4578901
                        BindableJoin(condition=[=($10, $1)], joinType=[inner]), id = 4589289
                          BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 4589287
                            BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 4589285
                              BindableTableScan(table=[[complete_cast]]), id = 4578865
                              BindableFilter(condition=[SEARCH($1, Sarg['cast':VARCHAR, 'crew':VARCHAR]:VARCHAR)]), id = 4589284
                                BindableTableScan(table=[[comp_cast_type]]), id = 4578869
                            BindableFilter(condition=[=($1, 'complete+verified')]), id = 4589286
                              BindableTableScan(table=[[comp_cast_type]]), id = 4578869
                          BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 4589288
                            BindableTableScan(table=[[cast_info]]), id = 4578889
                    BindableFilter(condition=[=($1, 'votes')]), id = 4589292
                      BindableTableScan(table=[[info_type]]), id = 4578901
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 4589295
                  BindableTableScan(table=[[keyword]]), id = 4578921
            BindableTableScan(table=[[movie_info_idx]]), id = 4578945
          BindableTableScan(table=[[movie_keyword]]), id = 4578957
        BindableFilter(condition=[=($4, 'm')]), id = 4589300
          BindableTableScan(table=[[name]]), id = 4578969
      BindableFilter(condition=[AND(>($4, 2000), OR(LIKE($1, '%Freddy%'), LIKE($1, '%Jason%'), LIKE($1, 'Saw%')))]), id = 4589302
        BindableTableScan(table=[[title]]), id = 4578981


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS complete_violent_movie FROM complete_cast AS cc, comp_cast_type AS cct1, comp_cast_type AS cct2, cast_info AS ci, info_type AS it1, info_type AS it2, keyword AS k, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE cct1.kind = 'cast' AND cct2.kind ='complete+verified' AND ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND n.gender = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = cc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = cc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = cc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = cc.movie_id AND mk.movie_id = cc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cct1.id = cc.subject_id AND cct2.id = cc.status_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `COMPLETE_VIOLENT_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`KIND` = 'cast' AND `CCT2`.`KIND` = 'complete+verified' AND `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`INFO` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `N`.`GENDER` = 'm' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `CC`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CCT1`.`ID` = `CC`.`SUBJECT_ID` AND `CCT2`.`ID` = `CC`.`STATUS_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `COMPLETE_VIOLENT_MOVIE`
FROM `COMPLETE_CAST` AS `CC`,
`COMP_CAST_TYPE` AS `CCT1`,
`COMP_CAST_TYPE` AS `CCT2`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CCT1`.`kind` = 'cast' AND `CCT2`.`kind` = 'complete+verified' AND `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`info` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `N`.`gender` = 'm' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CC`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `CC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `CC`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `CC`.`movie_id` AND `MK`.`movie_id` = `CC`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CCT1`.`id` = `CC`.`subject_id` AND `CCT2`.`id` = `CC`.`status_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], COMPLETE_VIOLENT_MOVIE=[MIN($3)])
  LogicalProject(info1=[$25], info2=[$30], name=[$36], title=[$45])
    LogicalFilter(condition=[AND(=($5, 'cast'), =($7, 'complete+verified'), OR(=($12, '(writer)'), =($12, '(head writer)'), =($12, '(written by)'), =($12, '(story)'), =($12, '(story editor)')), =($16, 'genres'), =($18, 'votes'), OR(=($20, 'murder'), =($20, 'violence'), =($20, 'blood'), =($20, 'gore'), =($20, 'death'), =($20, 'female-nudity'), =($20, 'hospital')), OR(=($25, 'Horror'), =($25, 'Action'), =($25, 'Sci-Fi'), =($25, 'Thriller'), =($25, 'Crime'), =($25, 'War')), =($39, 'm'), =($44, $23), =($44, $28), =($44, $10), =($44, $33), =($44, $1), =($10, $23), =($10, $28), =($10, $33), =($10, $1), =($23, $28), =($23, $33), =($23, $1), =($28, $33), =($28, $1), =($33, $1), =($35, $9), =($15, $24), =($17, $29), =($19, $34), =($4, $2), =($6, $3))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalTableScan(table=[[complete_cast]])
                            LogicalTableScan(table=[[comp_cast_type]])
                          LogicalTableScan(table=[[comp_cast_type]])
                        LogicalTableScan(table=[[cast_info]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[info_type]])
                  LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], COMPLETE_VIOLENT_MOVIE=[MIN($3)]), id = 4599761
  BindableProject(info1=[$25], info2=[$30], name=[$36], title=[$45]), id = 4599760
    BindableJoin(condition=[=($23, $44)], joinType=[inner]), id = 4599759
      BindableJoin(condition=[=($35, $9)], joinType=[inner]), id = 4599758
        BindableJoin(condition=[AND(=($10, $33), =($19, $34))], joinType=[inner]), id = 4599756
          BindableJoin(condition=[AND(=($10, $28), =($17, $29))], joinType=[inner]), id = 4599755
            BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], person_id=[$9], movie_id0=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id3=[$15], info=[$16], id4=[$17], info0=[$18], id6=[$24], keyword=[$25], phonetic_code=[$26], id5=[$19], movie_id1=[$20], info_type_id=[$21], info1=[$22], note0=[$23]), id = 4599754
              BindableJoin(condition=[true], joinType=[inner]), id = 4599753
                BindableProject(id=[$0], movie_id=[$1], subject_id=[$2], status_id=[$3], id0=[$4], kind=[$5], id1=[$6], kind0=[$7], id2=[$8], person_id=[$9], movie_id0=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id3=[$15], info=[$16], id5=[$22], info1=[$23], id4=[$17], movie_id1=[$18], info_type_id=[$19], info0=[$20], note0=[$21]), id = 4599751
                  BindableJoin(condition=[true], joinType=[inner]), id = 4599750
                    BindableProject(id1=[$7], movie_id0=[$8], subject_id=[$9], status_id=[$10], id00=[$11], kind=[$12], id10=[$13], kind0=[$14], id2=[$15], person_id=[$16], movie_id00=[$17], person_role_id=[$18], note0=[$19], nr_order=[$20], role_id=[$21], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4599748
                      BindableJoin(condition=[=($17, $1)], joinType=[inner]), id = 4599747
                        BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 4599740
                          BindableFilter(condition=[SEARCH($3, Sarg['Action':VARCHAR, 'Crime':VARCHAR, 'Horror':VARCHAR, 'Sci-Fi':VARCHAR, 'Thriller':VARCHAR, 'War':VARCHAR]:VARCHAR)]), id = 4599738
                            BindableTableScan(table=[[movie_info]]), id = 4589468
                          BindableFilter(condition=[=($1, 'genres')]), id = 4599739
                            BindableTableScan(table=[[info_type]]), id = 4589436
                        BindableJoin(condition=[=($10, $1)], joinType=[inner]), id = 4599746
                          BindableJoin(condition=[=($6, $3)], joinType=[inner]), id = 4599744
                            BindableJoin(condition=[=($4, $2)], joinType=[inner]), id = 4599742
                              BindableTableScan(table=[[complete_cast]]), id = 4589400
                              BindableFilter(condition=[=($1, 'cast')]), id = 4599741
                                BindableTableScan(table=[[comp_cast_type]]), id = 4589404
                            BindableFilter(condition=[=($1, 'complete+verified')]), id = 4599743
                              BindableTableScan(table=[[comp_cast_type]]), id = 4589404
                          BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 4599745
                            BindableTableScan(table=[[cast_info]]), id = 4589424
                    BindableFilter(condition=[=($1, 'votes')]), id = 4599749
                      BindableTableScan(table=[[info_type]]), id = 4589436
                BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 4599752
                  BindableTableScan(table=[[keyword]]), id = 4589456
            BindableTableScan(table=[[movie_info_idx]]), id = 4589480
          BindableTableScan(table=[[movie_keyword]]), id = 4589492
        BindableFilter(condition=[=($4, 'm')]), id = 4599757
          BindableTableScan(table=[[name]]), id = 4589504
      BindableTableScan(table=[[title]]), id = 4589516


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND cn.name LIKE 'Lionsgate%' AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info IN ('Horror', 'Thriller') AND n.gender = 'm' AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_LIONGATE_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `CN`.`NAME` LIKE 'Lionsgate%' AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`INFO` IN ('Horror', 'Thriller') AND `N`.`GENDER` = 'm' AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_LIONGATE_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `CN`.`name` LIKE 'Lionsgate%' AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`info` IN ('Horror', 'Thriller') AND `N`.`gender` = 'm' AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], VIOLENT_LIONGATE_MOVIE=[MIN($3)])
  LogicalProject(info1=[$29], info2=[$34], name0=[$40], title=[$49])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), LIKE($8, 'Lionsgate%'), =($15, 'genres'), =($17, 'votes'), OR(=($19, 'murder'), =($19, 'violence'), =($19, 'blood'), =($19, 'gore'), =($19, 'death'), =($19, 'female-nudity'), =($19, 'hospital')), OR(=($29, 'Horror'), =($29, 'Thriller')), =($43, 'm'), =($48, $27), =($48, $32), =($48, $2), =($48, $37), =($48, $22), =($2, $27), =($2, $32), =($2, $37), =($2, $22), =($27, $32), =($27, $37), =($27, $22), =($32, $37), =($32, $22), =($37, $22), =($39, $1), =($14, $28), =($16, $33), =($18, $38), =($7, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[cast_info]])
                          LogicalTableScan(table=[[company_name]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], VIOLENT_LIONGATE_MOVIE=[MIN($3)]), id = 4605769
  BindableProject(info1=[$29], info2=[$34], name0=[$40], title=[$49]), id = 4605768
    BindableJoin(condition=[=($27, $48)], joinType=[inner]), id = 4605767
      BindableJoin(condition=[=($39, $1)], joinType=[inner]), id = 4605766
        BindableJoin(condition=[AND(=($2, $37), =($18, $38))], joinType=[inner]), id = 4605764
          BindableJoin(condition=[AND(=($2, $32), =($16, $33))], joinType=[inner]), id = 4605763
            BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], keyword=[$19], phonetic_code=[$20], id5=[$26], movie_id1=[$27], company_id=[$28], company_type_id=[$29], note1=[$30], id4=[$21], movie_id0=[$22], info_type_id=[$23], info1=[$24], note0=[$25]), id = 4605762
              BindableJoin(condition=[AND(=($2, $27), =($7, $28))], joinType=[inner]), id = 4605761
                BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id4=[$23], keyword=[$24], phonetic_code=[$25], id3=[$18], movie_id0=[$19], info_type_id=[$20], info1=[$21], note0=[$22]), id = 4605760
                  BindableJoin(condition=[true], joinType=[inner]), id = 4605759
                    BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id3=[$21], info1=[$22], id2=[$16], movie_id0=[$17], info_type_id=[$18], info0=[$19], note0=[$20]), id = 4605757
                      BindableJoin(condition=[true], joinType=[inner]), id = 4605756
                        BindableProject(id1=[$7], person_id=[$8], movie_id0=[$9], person_role_id=[$10], note0=[$11], nr_order=[$12], role_id=[$13], id00=[$14], name=[$15], country_code=[$16], imdb_id=[$17], name_pcode_nf=[$18], name_pcode_sf=[$19], md5sum=[$20], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4605754
                          BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 4605753
                            BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 4605749
                              BindableFilter(condition=[SEARCH($3, Sarg['Horror':VARCHAR, 'Thriller':VARCHAR]:VARCHAR)]), id = 4605747
                                BindableTableScan(table=[[movie_info]]), id = 4599910
                              BindableFilter(condition=[=($1, 'genres')]), id = 4605748
                                BindableTableScan(table=[[info_type]]), id = 4599866
                            BindableJoin(condition=[true], joinType=[inner]), id = 4605752
                              BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 4605750
                                BindableTableScan(table=[[cast_info]]), id = 4599850
                              BindableFilter(condition=[LIKE($1, 'Lionsgate%')]), id = 4605751
                                BindableTableScan(table=[[company_name]]), id = 4599854
                        BindableFilter(condition=[=($1, 'votes')]), id = 4605755
                          BindableTableScan(table=[[info_type]]), id = 4599866
                    BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 4605758
                      BindableTableScan(table=[[keyword]]), id = 4599886
                BindableTableScan(table=[[movie_companies]]), id = 4599898
            BindableTableScan(table=[[movie_info_idx]]), id = 4599922
          BindableTableScan(table=[[movie_keyword]]), id = 4599934
        BindableFilter(condition=[=($4, 'm')]), id = 4605765
          BindableTableScan(table=[[name]]), id = 4599946
      BindableTableScan(table=[[title]]), id = 4599958


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND cn.name LIKE 'Lionsgate%' AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mc.note LIKE '%(Blu-ray)%' AND mi.info IN ('Horror', 'Thriller') AND n.gender = 'm' AND t.production_year > 2000 AND (t.title LIKE '%Freddy%' OR t.title LIKE '%Jason%' OR t.title LIKE 'Saw%') AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_LIONGATE_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `CN`.`NAME` LIKE 'Lionsgate%' AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MC`.`NOTE` LIKE '%(Blu-ray)%' AND `MI`.`INFO` IN ('Horror', 'Thriller') AND `N`.`GENDER` = 'm' AND `T`.`PRODUCTION_YEAR` > 2000 AND (`T`.`TITLE` LIKE '%Freddy%' OR `T`.`TITLE` LIKE '%Jason%' OR `T`.`TITLE` LIKE 'Saw%') AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_LIONGATE_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `CN`.`name` LIKE 'Lionsgate%' AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MC`.`note` LIKE '%(Blu-ray)%' AND `MI`.`info` IN ('Horror', 'Thriller') AND `N`.`gender` = 'm' AND `T`.`production_year` > 2000 AND (`T`.`title` LIKE '%Freddy%' OR `T`.`title` LIKE '%Jason%' OR `T`.`title` LIKE 'Saw%') AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], VIOLENT_LIONGATE_MOVIE=[MIN($3)])
  LogicalProject(info1=[$29], info2=[$34], name0=[$40], title=[$49])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), LIKE($8, 'Lionsgate%'), =($15, 'genres'), =($17, 'votes'), OR(=($19, 'murder'), =($19, 'violence'), =($19, 'blood'), =($19, 'gore'), =($19, 'death'), =($19, 'female-nudity'), =($19, 'hospital')), LIKE($25, '%(Blu-ray)%'), OR(=($29, 'Horror'), =($29, 'Thriller')), =($43, 'm'), >($52, 2000), OR(LIKE($49, '%Freddy%'), LIKE($49, '%Jason%'), LIKE($49, 'Saw%')), =($48, $27), =($48, $32), =($48, $2), =($48, $37), =($48, $22), =($2, $27), =($2, $32), =($2, $37), =($2, $22), =($27, $32), =($27, $37), =($27, $22), =($32, $37), =($32, $22), =($37, $22), =($39, $1), =($14, $28), =($16, $33), =($18, $38), =($7, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[cast_info]])
                          LogicalTableScan(table=[[company_name]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], VIOLENT_LIONGATE_MOVIE=[MIN($3)]), id = 4611923
  BindableProject(info1=[$29], info2=[$34], name0=[$40], title=[$49]), id = 4611922
    BindableJoin(condition=[=($27, $48)], joinType=[inner]), id = 4611921
      BindableJoin(condition=[=($39, $1)], joinType=[inner]), id = 4611919
        BindableJoin(condition=[AND(=($2, $37), =($18, $38))], joinType=[inner]), id = 4611917
          BindableJoin(condition=[AND(=($2, $32), =($16, $33))], joinType=[inner]), id = 4611916
            BindableJoin(condition=[AND(=($2, $27), =($14, $28))], joinType=[inner]), id = 4611915
              BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id4=[$23], keyword=[$24], phonetic_code=[$25], id3=[$18], movie_id0=[$19], company_id=[$20], company_type_id=[$21], note0=[$22]), id = 4611913
                BindableJoin(condition=[true], joinType=[inner]), id = 4611912
                  BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id3=[$21], info0=[$22], id2=[$16], movie_id0=[$17], company_id=[$18], company_type_id=[$19], note0=[$20]), id = 4611910
                    BindableJoin(condition=[true], joinType=[inner]), id = 4611909
                      BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id2=[$19], info=[$20], id1=[$14], movie_id0=[$15], company_id=[$16], company_type_id=[$17], note0=[$18]), id = 4611907
                        BindableJoin(condition=[true], joinType=[inner]), id = 4611906
                          BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id1=[$12], name=[$13], country_code=[$14], imdb_id=[$15], name_pcode_nf=[$16], name_pcode_sf=[$17], md5sum=[$18], id0=[$7], movie_id0=[$8], company_id=[$9], company_type_id=[$10], note0=[$11]), id = 4611904
                            BindableJoin(condition=[=($12, $9)], joinType=[inner]), id = 4611903
                              BindableJoin(condition=[=($2, $8)], joinType=[inner]), id = 4611901
                                BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 4611899
                                  BindableTableScan(table=[[cast_info]]), id = 4605858
                                BindableFilter(condition=[LIKE($4, '%(Blu-ray)%')]), id = 4611900
                                  BindableTableScan(table=[[movie_companies]]), id = 4605906
                              BindableFilter(condition=[LIKE($1, 'Lionsgate%')]), id = 4611902
                                BindableTableScan(table=[[company_name]]), id = 4605862
                          BindableFilter(condition=[=($1, 'genres')]), id = 4611905
                            BindableTableScan(table=[[info_type]]), id = 4605874
                      BindableFilter(condition=[=($1, 'votes')]), id = 4611908
                        BindableTableScan(table=[[info_type]]), id = 4605874
                  BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 4611911
                    BindableTableScan(table=[[keyword]]), id = 4605894
              BindableFilter(condition=[SEARCH($3, Sarg['Horror':VARCHAR, 'Thriller':VARCHAR]:VARCHAR)]), id = 4611914
                BindableTableScan(table=[[movie_info]]), id = 4605918
            BindableTableScan(table=[[movie_info_idx]]), id = 4605930
          BindableTableScan(table=[[movie_keyword]]), id = 4605942
        BindableFilter(condition=[=($4, 'm')]), id = 4611918
          BindableTableScan(table=[[name]]), id = 4605954
      BindableFilter(condition=[AND(>($4, 2000), OR(LIKE($1, '%Freddy%'), LIKE($1, '%Jason%'), LIKE($1, 'Saw%')))]), id = 4611920
        BindableTableScan(table=[[title]]), id = 4605966


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi.info) AS movie_budget, MIN(mi_idx.info) AS movie_votes, MIN(n.name) AS writer, MIN(t.title) AS violent_liongate_movie FROM cast_info AS ci, company_name AS cn, info_type AS it1, info_type AS it2, keyword AS k, movie_companies AS mc, movie_info AS mi, movie_info_idx AS mi_idx, movie_keyword AS mk, name AS n, title AS t WHERE ci.note IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND cn.name LIKE 'Lionsgate%' AND it1.info = 'genres' AND it2.info = 'votes' AND k.keyword IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND mi.info IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND t.id = mi.movie_id AND t.id = mi_idx.movie_id AND t.id = ci.movie_id AND t.id = mk.movie_id AND t.id = mc.movie_id AND ci.movie_id = mi.movie_id AND ci.movie_id = mi_idx.movie_id AND ci.movie_id = mk.movie_id AND ci.movie_id = mc.movie_id AND mi.movie_id = mi_idx.movie_id AND mi.movie_id = mk.movie_id AND mi.movie_id = mc.movie_id AND mi_idx.movie_id = mk.movie_id AND mi_idx.movie_id = mc.movie_id AND mk.movie_id = mc.movie_id AND n.id = ci.person_id AND it1.id = mi.info_type_id AND it2.id = mi_idx.info_type_id AND k.id = mk.keyword_id AND cn.id = mc.company_id

[SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_LIONGATE_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `CN`.`NAME` LIKE 'Lionsgate%' AND `IT1`.`INFO` = 'genres' AND `IT2`.`INFO` = 'votes' AND `K`.`KEYWORD` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`INFO` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `MI_IDX`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `IT1`.`ID` = `MI`.`INFO_TYPE_ID` AND `IT2`.`ID` = `MI_IDX`.`INFO_TYPE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `CN`.`ID` = `MC`.`COMPANY_ID`

[Valid SqlNode]
SELECT MIN(`MI`.`INFO`) AS `MOVIE_BUDGET`, MIN(`MI_IDX`.`INFO`) AS `MOVIE_VOTES`, MIN(`N`.`NAME`) AS `WRITER`, MIN(`T`.`TITLE`) AS `VIOLENT_LIONGATE_MOVIE`
FROM `CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KEYWORD` AS `K`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(writer)', '(head writer)', '(written by)', '(story)', '(story editor)') AND `CN`.`name` LIKE 'Lionsgate%' AND `IT1`.`info` = 'genres' AND `IT2`.`info` = 'votes' AND `K`.`keyword` IN ('murder', 'violence', 'blood', 'gore', 'death', 'female-nudity', 'hospital') AND `MI`.`info` IN ('Horror', 'Action', 'Sci-Fi', 'Thriller', 'Crime', 'War') AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MI`.`movie_id` AND `CI`.`movie_id` = `MI_IDX`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MI`.`movie_id` = `MI_IDX`.`movie_id` AND `MI`.`movie_id` = `MK`.`movie_id` AND `MI`.`movie_id` = `MC`.`movie_id` AND `MI_IDX`.`movie_id` = `MK`.`movie_id` AND `MI_IDX`.`movie_id` = `MC`.`movie_id` AND `MK`.`movie_id` = `MC`.`movie_id` AND `N`.`id` = `CI`.`person_id` AND `IT1`.`id` = `MI`.`info_type_id` AND `IT2`.`id` = `MI_IDX`.`info_type_id` AND `K`.`id` = `MK`.`keyword_id` AND `CN`.`id` = `MC`.`company_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], VIOLENT_LIONGATE_MOVIE=[MIN($3)])
  LogicalProject(info1=[$29], info2=[$34], name0=[$40], title=[$49])
    LogicalFilter(condition=[AND(OR(=($4, '(writer)'), =($4, '(head writer)'), =($4, '(written by)'), =($4, '(story)'), =($4, '(story editor)')), LIKE($8, 'Lionsgate%'), =($15, 'genres'), =($17, 'votes'), OR(=($19, 'murder'), =($19, 'violence'), =($19, 'blood'), =($19, 'gore'), =($19, 'death'), =($19, 'female-nudity'), =($19, 'hospital')), OR(=($29, 'Horror'), =($29, 'Action'), =($29, 'Sci-Fi'), =($29, 'Thriller'), =($29, 'Crime'), =($29, 'War')), =($48, $27), =($48, $32), =($48, $2), =($48, $37), =($48, $22), =($2, $27), =($2, $32), =($2, $37), =($2, $22), =($27, $32), =($27, $37), =($27, $22), =($32, $37), =($32, $22), =($37, $22), =($39, $1), =($14, $28), =($16, $33), =($18, $38), =($7, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalTableScan(table=[[cast_info]])
                          LogicalTableScan(table=[[company_name]])
                        LogicalTableScan(table=[[info_type]])
                      LogicalTableScan(table=[[info_type]])
                    LogicalTableScan(table=[[keyword]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_BUDGET=[MIN($0)], MOVIE_VOTES=[MIN($1)], WRITER=[MIN($2)], VIOLENT_LIONGATE_MOVIE=[MIN($3)]), id = 4617864
  BindableProject(info1=[$29], info2=[$34], name0=[$40], title=[$49]), id = 4617863
    BindableJoin(condition=[=($27, $48)], joinType=[inner]), id = 4617862
      BindableJoin(condition=[=($39, $1)], joinType=[inner]), id = 4617861
        BindableJoin(condition=[AND(=($2, $37), =($18, $38))], joinType=[inner]), id = 4617860
          BindableJoin(condition=[AND(=($2, $32), =($16, $33))], joinType=[inner]), id = 4617859
            BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], keyword=[$19], phonetic_code=[$20], id5=[$26], movie_id1=[$27], company_id=[$28], company_type_id=[$29], note1=[$30], id4=[$21], movie_id0=[$22], info_type_id=[$23], info1=[$24], note0=[$25]), id = 4617858
              BindableJoin(condition=[AND(=($2, $27), =($7, $28))], joinType=[inner]), id = 4617857
                BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id4=[$23], keyword=[$24], phonetic_code=[$25], id3=[$18], movie_id0=[$19], info_type_id=[$20], info1=[$21], note0=[$22]), id = 4617856
                  BindableJoin(condition=[true], joinType=[inner]), id = 4617855
                    BindableProject(id=[$0], person_id=[$1], movie_id=[$2], person_role_id=[$3], note=[$4], nr_order=[$5], role_id=[$6], id0=[$7], name=[$8], country_code=[$9], imdb_id=[$10], name_pcode_nf=[$11], name_pcode_sf=[$12], md5sum=[$13], id1=[$14], info=[$15], id3=[$21], info1=[$22], id2=[$16], movie_id0=[$17], info_type_id=[$18], info0=[$19], note0=[$20]), id = 4617853
                      BindableJoin(condition=[true], joinType=[inner]), id = 4617852
                        BindableProject(id1=[$7], person_id=[$8], movie_id0=[$9], person_role_id=[$10], note0=[$11], nr_order=[$12], role_id=[$13], id00=[$14], name=[$15], country_code=[$16], imdb_id=[$17], name_pcode_nf=[$18], name_pcode_sf=[$19], md5sum=[$20], id0=[$5], info0=[$6], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 4617850
                          BindableJoin(condition=[=($9, $1)], joinType=[inner]), id = 4617849
                            BindableJoin(condition=[=($5, $2)], joinType=[inner]), id = 4617845
                              BindableFilter(condition=[SEARCH($3, Sarg['Action':VARCHAR, 'Crime':VARCHAR, 'Horror':VARCHAR, 'Sci-Fi':VARCHAR, 'Thriller':VARCHAR, 'War':VARCHAR]:VARCHAR)]), id = 4617843
                                BindableTableScan(table=[[movie_info]]), id = 4612072
                              BindableFilter(condition=[=($1, 'genres')]), id = 4617844
                                BindableTableScan(table=[[info_type]]), id = 4612028
                            BindableJoin(condition=[true], joinType=[inner]), id = 4617848
                              BindableFilter(condition=[SEARCH($4, Sarg['(head writer)':VARCHAR, '(story editor)':VARCHAR, '(story)':VARCHAR, '(writer)':VARCHAR, '(written by)':VARCHAR]:VARCHAR)]), id = 4617846
                                BindableTableScan(table=[[cast_info]]), id = 4612012
                              BindableFilter(condition=[LIKE($1, 'Lionsgate%')]), id = 4617847
                                BindableTableScan(table=[[company_name]]), id = 4612016
                        BindableFilter(condition=[=($1, 'votes')]), id = 4617851
                          BindableTableScan(table=[[info_type]]), id = 4612028
                    BindableFilter(condition=[SEARCH($1, Sarg['blood':VARCHAR, 'death':VARCHAR, 'female-nudity':VARCHAR, 'gore':VARCHAR, 'hospital':VARCHAR, 'murder':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 4617854
                      BindableTableScan(table=[[keyword]]), id = 4612048
                BindableTableScan(table=[[movie_companies]]), id = 4612060
            BindableTableScan(table=[[movie_info_idx]]), id = 4612084
          BindableTableScan(table=[[movie_keyword]]), id = 4612096
        BindableTableScan(table=[[name]]), id = 4612108
      BindableTableScan(table=[[title]]), id = 4612120


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(lt.link) AS link_type, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 WHERE k.keyword ='10,000-mile-club' AND mk.keyword_id = k.id AND t1.id = mk.movie_id AND ml.movie_id = t1.id AND ml.linked_movie_id = t2.id AND lt.id = ml.link_type_id AND mk.movie_id = t1.id

[SqlNode]
SELECT MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `K`.`KEYWORD` = '10,000-mile-club' AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T1`.`ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `T1`.`ID` AND `ML`.`LINKED_MOVIE_ID` = `T2`.`ID` AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `MK`.`MOVIE_ID` = `T1`.`ID`

[Valid SqlNode]
SELECT MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `K`.`keyword` = '10,000-mile-club' AND `MK`.`keyword_id` = `K`.`id` AND `T1`.`id` = `MK`.`movie_id` AND `ML`.`movie_id` = `T1`.`id` AND `ML`.`linked_movie_id` = `T2`.`id` AND `LT`.`id` = `ML`.`link_type_id` AND `MK`.`movie_id` = `T1`.`id`

[Logical plan]
LogicalAggregate(group=[{}], LINK_TYPE=[MIN($0)], FIRST_MOVIE=[MIN($1)], SECOND_MOVIE=[MIN($2)])
  LogicalProject(link=[$4], title=[$13], title0=[$25])
    LogicalFilter(condition=[AND(=($1, '10,000-mile-club'), =($7, $0), =($12, $6), =($9, $12), =($10, $24), =($3, $11), =($6, $12))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[movie_link]])
          LogicalTableScan(table=[[title]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], LINK_TYPE=[MIN($0)], FIRST_MOVIE=[MIN($1)], SECOND_MOVIE=[MIN($2)]), id = 4620974
  BindableProject(link=[$4], title=[$13], title0=[$25]), id = 4620973
    BindableJoin(condition=[=($10, $24)], joinType=[inner]), id = 4620972
      BindableJoin(condition=[=($6, $12)], joinType=[inner]), id = 4620971
        BindableJoin(condition=[AND(=($3, $11), =($6, $9))], joinType=[inner]), id = 4620970
          BindableJoin(condition=[=($7, $0)], joinType=[inner]), id = 4620969
            BindableJoin(condition=[true], joinType=[inner]), id = 4620968
              BindableFilter(condition=[=($1, '10,000-mile-club')]), id = 4620967
                BindableTableScan(table=[[keyword]]), id = 4617918
              BindableTableScan(table=[[link_type]]), id = 4617922
            BindableTableScan(table=[[movie_keyword]]), id = 4617934
          BindableTableScan(table=[[movie_link]]), id = 4617946
        BindableTableScan(table=[[title]]), id = 4617958
      BindableTableScan(table=[[title]]), id = 4617958


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(lt.link) AS link_type, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM keyword AS k, link_type AS lt, movie_keyword AS mk, movie_link AS ml, title AS t1, title AS t2 WHERE k.keyword ='character-name-in-title' AND mk.keyword_id = k.id AND t1.id = mk.movie_id AND ml.movie_id = t1.id AND ml.linked_movie_id = t2.id AND lt.id = ml.link_type_id AND mk.movie_id = t1.id

[SqlNode]
SELECT MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `K`.`KEYWORD` = 'character-name-in-title' AND `MK`.`KEYWORD_ID` = `K`.`ID` AND `T1`.`ID` = `MK`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `T1`.`ID` AND `ML`.`LINKED_MOVIE_ID` = `T2`.`ID` AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `MK`.`MOVIE_ID` = `T1`.`ID`

[Valid SqlNode]
SELECT MIN(`LT`.`LINK`) AS `LINK_TYPE`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `KEYWORD` AS `K`,
`LINK_TYPE` AS `LT`,
`MOVIE_KEYWORD` AS `MK`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `K`.`keyword` = 'character-name-in-title' AND `MK`.`keyword_id` = `K`.`id` AND `T1`.`id` = `MK`.`movie_id` AND `ML`.`movie_id` = `T1`.`id` AND `ML`.`linked_movie_id` = `T2`.`id` AND `LT`.`id` = `ML`.`link_type_id` AND `MK`.`movie_id` = `T1`.`id`

[Logical plan]
LogicalAggregate(group=[{}], LINK_TYPE=[MIN($0)], FIRST_MOVIE=[MIN($1)], SECOND_MOVIE=[MIN($2)])
  LogicalProject(link=[$4], title=[$13], title0=[$25])
    LogicalFilter(condition=[AND(=($1, 'character-name-in-title'), =($7, $0), =($12, $6), =($9, $12), =($10, $24), =($3, $11), =($6, $12))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalTableScan(table=[[keyword]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_keyword]])
            LogicalTableScan(table=[[movie_link]])
          LogicalTableScan(table=[[title]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], LINK_TYPE=[MIN($0)], FIRST_MOVIE=[MIN($1)], SECOND_MOVIE=[MIN($2)]), id = 4624084
  BindableProject(link=[$4], title=[$13], title0=[$25]), id = 4624083
    BindableJoin(condition=[=($10, $24)], joinType=[inner]), id = 4624082
      BindableJoin(condition=[=($6, $12)], joinType=[inner]), id = 4624081
        BindableJoin(condition=[AND(=($3, $11), =($6, $9))], joinType=[inner]), id = 4624080
          BindableJoin(condition=[=($7, $0)], joinType=[inner]), id = 4624079
            BindableJoin(condition=[true], joinType=[inner]), id = 4624078
              BindableFilter(condition=[=($1, 'character-name-in-title')]), id = 4624077
                BindableTableScan(table=[[keyword]]), id = 4621028
              BindableTableScan(table=[[link_type]]), id = 4621032
            BindableTableScan(table=[[movie_keyword]]), id = 4621044
          BindableTableScan(table=[[movie_link]]), id = 4621056
        BindableTableScan(table=[[title]]), id = 4621068
      BindableTableScan(table=[[title]]), id = 4621068


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 WHERE cn1.country_code = '[us]' AND it1.info = 'rating' AND it2.info = 'rating' AND kt1.kind IN ('tv series') AND kt2.kind IN ('tv series') AND lt.link IN ('sequel', 'follows', 'followed by') AND mi_idx2.info < '3.0' AND t2.production_year BETWEEN 2005 AND 2008 AND lt.id = ml.link_type_id AND t1.id = ml.movie_id AND t2.id = ml.linked_movie_id AND it1.id = mi_idx1.info_type_id AND t1.id = mi_idx1.movie_id AND kt1.id = t1.kind_id AND cn1.id = mc1.company_id AND t1.id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND it2.id = mi_idx2.info_type_id AND t2.id = mi_idx2.movie_id AND kt2.id = t2.kind_id AND cn2.id = mc2.company_id AND t2.id = mc2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id

[SqlNode]
SELECT MIN(`CN1`.`NAME`) AS `FIRST_COMPANY`, MIN(`CN2`.`NAME`) AS `SECOND_COMPANY`, MIN(`MI_IDX1`.`INFO`) AS `FIRST_RATING`, MIN(`MI_IDX2`.`INFO`) AS `SECOND_RATING`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `COMPANY_NAME` AS `CN1`,
`COMPANY_NAME` AS `CN2`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT1`,
`KIND_TYPE` AS `KT2`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC1`,
`MOVIE_COMPANIES` AS `MC2`,
`MOVIE_INFO_IDX` AS `MI_IDX1`,
`MOVIE_INFO_IDX` AS `MI_IDX2`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `CN1`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'rating' AND `IT2`.`INFO` = 'rating' AND `KT1`.`KIND` IN ('tv series') AND `KT2`.`KIND` IN ('tv series') AND `LT`.`LINK` IN ('sequel', 'follows', 'followed by') AND `MI_IDX2`.`INFO` < '3.0' AND `T2`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2005 AND 2008 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `T1`.`ID` = `ML`.`MOVIE_ID` AND `T2`.`ID` = `ML`.`LINKED_MOVIE_ID` AND `IT1`.`ID` = `MI_IDX1`.`INFO_TYPE_ID` AND `T1`.`ID` = `MI_IDX1`.`MOVIE_ID` AND `KT1`.`ID` = `T1`.`KIND_ID` AND `CN1`.`ID` = `MC1`.`COMPANY_ID` AND `T1`.`ID` = `MC1`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI_IDX1`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC1`.`MOVIE_ID` AND `MI_IDX1`.`MOVIE_ID` = `MC1`.`MOVIE_ID` AND `IT2`.`ID` = `MI_IDX2`.`INFO_TYPE_ID` AND `T2`.`ID` = `MI_IDX2`.`MOVIE_ID` AND `KT2`.`ID` = `T2`.`KIND_ID` AND `CN2`.`ID` = `MC2`.`COMPANY_ID` AND `T2`.`ID` = `MC2`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `MI_IDX2`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `MC2`.`MOVIE_ID` AND `MI_IDX2`.`MOVIE_ID` = `MC2`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN1`.`NAME`) AS `FIRST_COMPANY`, MIN(`CN2`.`NAME`) AS `SECOND_COMPANY`, MIN(`MI_IDX1`.`INFO`) AS `FIRST_RATING`, MIN(`MI_IDX2`.`INFO`) AS `SECOND_RATING`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `COMPANY_NAME` AS `CN1`,
`COMPANY_NAME` AS `CN2`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT1`,
`KIND_TYPE` AS `KT2`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC1`,
`MOVIE_COMPANIES` AS `MC2`,
`MOVIE_INFO_IDX` AS `MI_IDX1`,
`MOVIE_INFO_IDX` AS `MI_IDX2`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `CN1`.`country_code` = '[us]' AND `IT1`.`info` = 'rating' AND `IT2`.`info` = 'rating' AND `KT1`.`kind` IN ('tv series') AND `KT2`.`kind` IN ('tv series') AND `LT`.`link` IN ('sequel', 'follows', 'followed by') AND `MI_IDX2`.`info` < '3.0' AND `T2`.`production_year` BETWEEN ASYMMETRIC 2005 AND 2008 AND `LT`.`id` = `ML`.`link_type_id` AND `T1`.`id` = `ML`.`movie_id` AND `T2`.`id` = `ML`.`linked_movie_id` AND `IT1`.`id` = `MI_IDX1`.`info_type_id` AND `T1`.`id` = `MI_IDX1`.`movie_id` AND `KT1`.`id` = `T1`.`kind_id` AND `CN1`.`id` = `MC1`.`company_id` AND `T1`.`id` = `MC1`.`movie_id` AND `ML`.`movie_id` = `MI_IDX1`.`movie_id` AND `ML`.`movie_id` = `MC1`.`movie_id` AND `MI_IDX1`.`movie_id` = `MC1`.`movie_id` AND `IT2`.`id` = `MI_IDX2`.`info_type_id` AND `T2`.`id` = `MI_IDX2`.`movie_id` AND `KT2`.`id` = `T2`.`kind_id` AND `CN2`.`id` = `MC2`.`company_id` AND `T2`.`id` = `MC2`.`movie_id` AND `ML`.`linked_movie_id` = `MI_IDX2`.`movie_id` AND `ML`.`linked_movie_id` = `MC2`.`movie_id` AND `MI_IDX2`.`movie_id` = `MC2`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FIRST_COMPANY=[MIN($0)], SECOND_COMPANY=[MIN($1)], FIRST_RATING=[MIN($2)], SECOND_RATING=[MIN($3)], FIRST_MOVIE=[MIN($4)], SECOND_MOVIE=[MIN($5)])
  LogicalProject(name=[$1], name0=[$8], info1=[$37], info2=[$42], title=[$49], title0=[$61])
    LogicalFilter(condition=[AND(=($2, '[us]'), =($15, 'rating'), =($17, 'rating'), =($19, 'tv series'), =($21, 'tv series'), OR(=($23, 'sequel'), =($23, 'follows'), =($23, 'followed by')), <($42, '3.0'), >=($64, 2005), <=($64, 2008), =($22, $47), =($48, $45), =($60, $46), =($14, $36), =($48, $35), =($18, $51), =($0, $26), =($48, $25), =($45, $35), =($45, $25), =($35, $25), =($16, $41), =($60, $40), =($20, $63), =($7, $31), =($60, $30), =($46, $40), =($46, $30), =($40, $30))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalTableScan(table=[[company_name]])
                                LogicalTableScan(table=[[company_name]])
                              LogicalTableScan(table=[[info_type]])
                            LogicalTableScan(table=[[info_type]])
                          LogicalTableScan(table=[[kind_type]])
                        LogicalTableScan(table=[[kind_type]])
                      LogicalTableScan(table=[[link_type]])
                    LogicalTableScan(table=[[movie_companies]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info_idx]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_link]])
          LogicalTableScan(table=[[title]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FIRST_COMPANY=[MIN($0)], SECOND_COMPANY=[MIN($1)], FIRST_RATING=[MIN($2)], SECOND_RATING=[MIN($3)], FIRST_MOVIE=[MIN($4)], SECOND_MOVIE=[MIN($5)]), id = 15635866
  BindableProject(name=[$1], name0=[$8], info1=[$37], info2=[$42], title=[$49], title0=[$61]), id = 15635865
    BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], name0=[$8], country_code0=[$9], imdb_id0=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum0=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id=[$25], company_id=[$26], company_type_id=[$27], note=[$28], id7=[$29], movie_id0=[$30], company_id0=[$31], company_type_id0=[$32], note0=[$33], id8=[$34], movie_id1=[$35], info_type_id=[$36], info1=[$37], note1=[$38], id9=[$39], movie_id2=[$40], info_type_id0=[$41], info2=[$42], note2=[$43], id10=[$44], movie_id3=[$45], linked_movie_id=[$46], link_type_id=[$47], id12=[$60], title0=[$61], imdb_index0=[$62], kind_id0=[$63], production_year0=[$64], imdb_id2=[$65], phonetic_code0=[$66], episode_of_id0=[$67], season_nr0=[$68], episode_nr0=[$69], series_years0=[$70], md5sum2=[$71], id11=[$48], title=[$49], imdb_index=[$50], kind_id=[$51], production_year=[$52], imdb_id1=[$53], phonetic_code=[$54], episode_of_id=[$55], season_nr=[$56], episode_nr=[$57], series_years=[$58], md5sum1=[$59]), id = 15635864
      BindableJoin(condition=[AND(=($45, $60), =($18, $63))], joinType=[inner]), id = 15635863
        BindableProject(id1=[$16], name=[$17], country_code=[$18], imdb_id0=[$19], name_pcode_nf=[$20], name_pcode_sf=[$21], md5sum0=[$22], id00=[$23], name0=[$24], country_code0=[$25], imdb_id00=[$26], name_pcode_nf0=[$27], name_pcode_sf0=[$28], md5sum00=[$29], id10=[$30], info=[$31], id2=[$32], info0=[$33], id3=[$34], kind=[$35], id4=[$36], kind0=[$37], id5=[$38], link=[$39], id6=[$40], movie_id0=[$41], company_id=[$42], company_type_id=[$43], note=[$44], id7=[$45], movie_id00=[$46], company_id0=[$47], company_type_id0=[$48], note0=[$49], id8=[$50], movie_id1=[$51], info_type_id=[$52], info1=[$53], note1=[$54], id9=[$55], movie_id2=[$56], info_type_id0=[$57], info2=[$58], note2=[$59], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11]), id = 15635862
          BindableProject(id=[$44], title=[$45], imdb_index=[$46], kind_id=[$47], production_year=[$48], imdb_id=[$49], phonetic_code=[$50], episode_of_id=[$51], season_nr=[$52], episode_nr=[$53], series_years=[$54], md5sum=[$55], id0=[$56], movie_id=[$57], linked_movie_id=[$58], link_type_id=[$59], id1=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id0=[$25], company_id=[$26], company_type_id=[$27], note=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note0=[$33], id8=[$34], movie_id1=[$35], info_type_id=[$36], info1=[$37], note1=[$38], id9=[$39], movie_id2=[$40], info_type_id0=[$41], info2=[$42], note2=[$43]), id = 15635861
            BindableProject(id2=[$21], name=[$22], country_code=[$23], imdb_id0=[$24], name_pcode_nf=[$25], name_pcode_sf=[$26], md5sum0=[$27], id00=[$28], name0=[$29], country_code0=[$30], imdb_id00=[$31], name_pcode_nf0=[$32], name_pcode_sf0=[$33], md5sum00=[$34], id10=[$35], info0=[$36], id20=[$37], info00=[$38], id3=[$39], kind=[$40], id4=[$41], kind0=[$42], id5=[$43], link=[$44], id6=[$45], movie_id1=[$46], company_id=[$47], company_type_id=[$48], note0=[$49], id7=[$50], movie_id00=[$51], company_id0=[$52], company_type_id0=[$53], note00=[$54], id8=[$55], movie_id10=[$56], info_type_id0=[$57], info1=[$58], note1=[$59], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15]), id = 15635860
              BindableProject(id=[$39], title=[$40], imdb_index=[$41], kind_id=[$42], production_year=[$43], imdb_id=[$44], phonetic_code=[$45], episode_of_id=[$46], season_nr=[$47], episode_nr=[$48], series_years=[$49], md5sum=[$50], id0=[$51], movie_id=[$52], linked_movie_id=[$53], link_type_id=[$54], id1=[$55], movie_id0=[$56], info_type_id=[$57], info=[$58], note=[$59], id2=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info0=[$15], id20=[$16], info00=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id1=[$25], company_id=[$26], company_type_id=[$27], note0=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note00=[$33], id8=[$34], movie_id10=[$35], info_type_id0=[$36], info1=[$37], note1=[$38]), id = 15635859
                BindableProject(id3=[$26], name=[$27], country_code=[$28], imdb_id0=[$29], name_pcode_nf=[$30], name_pcode_sf=[$31], md5sum0=[$32], id00=[$33], name0=[$34], country_code0=[$35], imdb_id00=[$36], name_pcode_nf0=[$37], name_pcode_sf0=[$38], md5sum00=[$39], id10=[$40], info1=[$41], id20=[$42], info00=[$43], id30=[$44], kind=[$45], id4=[$46], kind0=[$47], id5=[$48], link=[$49], id6=[$50], movie_id2=[$51], company_id=[$52], company_type_id=[$53], note1=[$54], id7=[$55], movie_id00=[$56], company_id0=[$57], company_type_id0=[$58], note00=[$59], id2=[$21], movie_id1=[$22], info_type_id0=[$23], info0=[$24], note0=[$25], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20]), id = 15635858
                  BindableProject(id=[$34], title=[$35], imdb_index=[$36], kind_id=[$37], production_year=[$38], imdb_id=[$39], phonetic_code=[$40], episode_of_id=[$41], season_nr=[$42], episode_nr=[$43], series_years=[$44], md5sum=[$45], id0=[$46], movie_id=[$47], linked_movie_id=[$48], link_type_id=[$49], id1=[$50], movie_id0=[$51], info_type_id=[$52], info=[$53], note=[$54], id2=[$55], movie_id1=[$56], info_type_id0=[$57], info0=[$58], note0=[$59], id3=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info1=[$15], id20=[$16], info00=[$17], id30=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id2=[$25], company_id=[$26], company_type_id=[$27], note1=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note00=[$33]), id = 15635857
                    BindableProject(id4=[$31], name=[$32], country_code=[$33], imdb_id0=[$34], name_pcode_nf=[$35], name_pcode_sf=[$36], md5sum0=[$37], id00=[$38], name0=[$39], country_code0=[$40], imdb_id00=[$41], name_pcode_nf0=[$42], name_pcode_sf0=[$43], md5sum00=[$44], id10=[$45], info1=[$46], id20=[$47], info00=[$48], id30=[$49], kind=[$50], id40=[$51], kind0=[$52], id5=[$53], link=[$54], id6=[$55], movie_id3=[$56], company_id0=[$57], company_type_id0=[$58], note2=[$59], id3=[$26], movie_id2=[$27], company_id=[$28], company_type_id=[$29], note1=[$30], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20], id2=[$21], movie_id1=[$22], info_type_id0=[$23], info0=[$24], note0=[$25]), id = 15635856
                      BindableJoin(condition=[AND(=($45, $23), =($22, $56), =($51, $3), =($53, $15), =($47, $18), =($38, $28))], joinType=[inner]), id = 15635855
                        BindableJoin(condition=[=($17, $27)], joinType=[inner]), id = 15635843
                          BindableJoin(condition=[=($22, $13)], joinType=[inner]), id = 15635842
                            BindableJoin(condition=[=($17, $14)], joinType=[inner]), id = 15635841
                              BindableJoin(condition=[=($14, $0)], joinType=[inner]), id = 15635839
                                BindableFilter(condition=[SEARCH($4, Sarg[[2005..2008]])]), id = 15635838
                                  BindableTableScan(table=[[title]]), id = 4624301
                                BindableTableScan(table=[[movie_link]]), id = 4624289
                              BindableFilter(condition=[<($3, '3.0')]), id = 15635840
                                BindableTableScan(table=[[movie_info_idx]]), id = 4624269
                            BindableTableScan(table=[[movie_info_idx]]), id = 4624269
                          BindableTableScan(table=[[movie_companies]]), id = 4624249
                        BindableJoin(condition=[=($0, $26)], joinType=[inner]), id = 15635854
                          BindableJoin(condition=[true], joinType=[inner]), id = 15635853
                            BindableJoin(condition=[true], joinType=[inner]), id = 15635851
                              BindableJoin(condition=[true], joinType=[inner]), id = 15635850
                                BindableJoin(condition=[true], joinType=[inner]), id = 15635848
                                  BindableJoin(condition=[true], joinType=[inner]), id = 15635847
                                    BindableJoin(condition=[true], joinType=[inner]), id = 15635845
                                      BindableFilter(condition=[=($2, '[us]')]), id = 15635844
                                        BindableTableScan(table=[[company_name]]), id = 4624189
                                      BindableTableScan(table=[[company_name]]), id = 4624189
                                    BindableFilter(condition=[=($1, 'rating')]), id = 15635846
                                      BindableTableScan(table=[[info_type]]), id = 4624197
                                  BindableFilter(condition=[=($1, 'rating')]), id = 15635846
                                    BindableTableScan(table=[[info_type]]), id = 4624197
                                BindableFilter(condition=[=($1, 'tv series')]), id = 15635849
                                  BindableTableScan(table=[[kind_type]]), id = 4624217
                              BindableFilter(condition=[=($1, 'tv series')]), id = 15635849
                                BindableTableScan(table=[[kind_type]]), id = 4624217
                            BindableFilter(condition=[SEARCH($1, Sarg['followed by':VARCHAR, 'follows':VARCHAR, 'sequel':VARCHAR]:VARCHAR)]), id = 15635852
                              BindableTableScan(table=[[link_type]]), id = 4624237
                          BindableTableScan(table=[[movie_companies]]), id = 4624249
        BindableTableScan(table=[[title]]), id = 4624301


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 WHERE cn1.country_code = '[nl]' AND it1.info = 'rating' AND it2.info = 'rating' AND kt1.kind IN ('tv series') AND kt2.kind IN ('tv series') AND lt.link LIKE '%follow%' AND mi_idx2.info < '3.0' AND t2.production_year = 2007 AND lt.id = ml.link_type_id AND t1.id = ml.movie_id AND t2.id = ml.linked_movie_id AND it1.id = mi_idx1.info_type_id AND t1.id = mi_idx1.movie_id AND kt1.id = t1.kind_id AND cn1.id = mc1.company_id AND t1.id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND it2.id = mi_idx2.info_type_id AND t2.id = mi_idx2.movie_id AND kt2.id = t2.kind_id AND cn2.id = mc2.company_id AND t2.id = mc2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id

[SqlNode]
SELECT MIN(`CN1`.`NAME`) AS `FIRST_COMPANY`, MIN(`CN2`.`NAME`) AS `SECOND_COMPANY`, MIN(`MI_IDX1`.`INFO`) AS `FIRST_RATING`, MIN(`MI_IDX2`.`INFO`) AS `SECOND_RATING`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `COMPANY_NAME` AS `CN1`,
`COMPANY_NAME` AS `CN2`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT1`,
`KIND_TYPE` AS `KT2`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC1`,
`MOVIE_COMPANIES` AS `MC2`,
`MOVIE_INFO_IDX` AS `MI_IDX1`,
`MOVIE_INFO_IDX` AS `MI_IDX2`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `CN1`.`COUNTRY_CODE` = '[nl]' AND `IT1`.`INFO` = 'rating' AND `IT2`.`INFO` = 'rating' AND `KT1`.`KIND` IN ('tv series') AND `KT2`.`KIND` IN ('tv series') AND `LT`.`LINK` LIKE '%follow%' AND `MI_IDX2`.`INFO` < '3.0' AND `T2`.`PRODUCTION_YEAR` = 2007 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `T1`.`ID` = `ML`.`MOVIE_ID` AND `T2`.`ID` = `ML`.`LINKED_MOVIE_ID` AND `IT1`.`ID` = `MI_IDX1`.`INFO_TYPE_ID` AND `T1`.`ID` = `MI_IDX1`.`MOVIE_ID` AND `KT1`.`ID` = `T1`.`KIND_ID` AND `CN1`.`ID` = `MC1`.`COMPANY_ID` AND `T1`.`ID` = `MC1`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI_IDX1`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC1`.`MOVIE_ID` AND `MI_IDX1`.`MOVIE_ID` = `MC1`.`MOVIE_ID` AND `IT2`.`ID` = `MI_IDX2`.`INFO_TYPE_ID` AND `T2`.`ID` = `MI_IDX2`.`MOVIE_ID` AND `KT2`.`ID` = `T2`.`KIND_ID` AND `CN2`.`ID` = `MC2`.`COMPANY_ID` AND `T2`.`ID` = `MC2`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `MI_IDX2`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `MC2`.`MOVIE_ID` AND `MI_IDX2`.`MOVIE_ID` = `MC2`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN1`.`NAME`) AS `FIRST_COMPANY`, MIN(`CN2`.`NAME`) AS `SECOND_COMPANY`, MIN(`MI_IDX1`.`INFO`) AS `FIRST_RATING`, MIN(`MI_IDX2`.`INFO`) AS `SECOND_RATING`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `COMPANY_NAME` AS `CN1`,
`COMPANY_NAME` AS `CN2`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT1`,
`KIND_TYPE` AS `KT2`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC1`,
`MOVIE_COMPANIES` AS `MC2`,
`MOVIE_INFO_IDX` AS `MI_IDX1`,
`MOVIE_INFO_IDX` AS `MI_IDX2`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE `CN1`.`country_code` = '[nl]' AND `IT1`.`info` = 'rating' AND `IT2`.`info` = 'rating' AND `KT1`.`kind` IN ('tv series') AND `KT2`.`kind` IN ('tv series') AND `LT`.`link` LIKE '%follow%' AND `MI_IDX2`.`info` < '3.0' AND `T2`.`production_year` = 2007 AND `LT`.`id` = `ML`.`link_type_id` AND `T1`.`id` = `ML`.`movie_id` AND `T2`.`id` = `ML`.`linked_movie_id` AND `IT1`.`id` = `MI_IDX1`.`info_type_id` AND `T1`.`id` = `MI_IDX1`.`movie_id` AND `KT1`.`id` = `T1`.`kind_id` AND `CN1`.`id` = `MC1`.`company_id` AND `T1`.`id` = `MC1`.`movie_id` AND `ML`.`movie_id` = `MI_IDX1`.`movie_id` AND `ML`.`movie_id` = `MC1`.`movie_id` AND `MI_IDX1`.`movie_id` = `MC1`.`movie_id` AND `IT2`.`id` = `MI_IDX2`.`info_type_id` AND `T2`.`id` = `MI_IDX2`.`movie_id` AND `KT2`.`id` = `T2`.`kind_id` AND `CN2`.`id` = `MC2`.`company_id` AND `T2`.`id` = `MC2`.`movie_id` AND `ML`.`linked_movie_id` = `MI_IDX2`.`movie_id` AND `ML`.`linked_movie_id` = `MC2`.`movie_id` AND `MI_IDX2`.`movie_id` = `MC2`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FIRST_COMPANY=[MIN($0)], SECOND_COMPANY=[MIN($1)], FIRST_RATING=[MIN($2)], SECOND_RATING=[MIN($3)], FIRST_MOVIE=[MIN($4)], SECOND_MOVIE=[MIN($5)])
  LogicalProject(name=[$1], name0=[$8], info1=[$37], info2=[$42], title=[$49], title0=[$61])
    LogicalFilter(condition=[AND(=($2, '[nl]'), =($15, 'rating'), =($17, 'rating'), =($19, 'tv series'), =($21, 'tv series'), LIKE($23, '%follow%'), <($42, '3.0'), =($64, 2007), =($22, $47), =($48, $45), =($60, $46), =($14, $36), =($48, $35), =($18, $51), =($0, $26), =($48, $25), =($45, $35), =($45, $25), =($35, $25), =($16, $41), =($60, $40), =($20, $63), =($7, $31), =($60, $30), =($46, $40), =($46, $30), =($40, $30))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalTableScan(table=[[company_name]])
                                LogicalTableScan(table=[[company_name]])
                              LogicalTableScan(table=[[info_type]])
                            LogicalTableScan(table=[[info_type]])
                          LogicalTableScan(table=[[kind_type]])
                        LogicalTableScan(table=[[kind_type]])
                      LogicalTableScan(table=[[link_type]])
                    LogicalTableScan(table=[[movie_companies]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info_idx]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_link]])
          LogicalTableScan(table=[[title]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FIRST_COMPANY=[MIN($0)], SECOND_COMPANY=[MIN($1)], FIRST_RATING=[MIN($2)], SECOND_RATING=[MIN($3)], FIRST_MOVIE=[MIN($4)], SECOND_MOVIE=[MIN($5)]), id = 26647648
  BindableProject(name=[$1], name0=[$8], info1=[$37], info2=[$42], title=[$49], title0=[$61]), id = 26647647
    BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], name0=[$8], country_code0=[$9], imdb_id0=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum0=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id=[$25], company_id=[$26], company_type_id=[$27], note=[$28], id7=[$29], movie_id0=[$30], company_id0=[$31], company_type_id0=[$32], note0=[$33], id8=[$34], movie_id1=[$35], info_type_id=[$36], info1=[$37], note1=[$38], id9=[$39], movie_id2=[$40], info_type_id0=[$41], info2=[$42], note2=[$43], id10=[$44], movie_id3=[$45], linked_movie_id=[$46], link_type_id=[$47], id12=[$60], title0=[$61], imdb_index0=[$62], kind_id0=[$63], production_year0=[$64], imdb_id2=[$65], phonetic_code0=[$66], episode_of_id0=[$67], season_nr0=[$68], episode_nr0=[$69], series_years0=[$70], md5sum2=[$71], id11=[$48], title=[$49], imdb_index=[$50], kind_id=[$51], production_year=[$52], imdb_id1=[$53], phonetic_code=[$54], episode_of_id=[$55], season_nr=[$56], episode_nr=[$57], series_years=[$58], md5sum1=[$59]), id = 26647646
      BindableJoin(condition=[AND(=($45, $60), =($18, $63))], joinType=[inner]), id = 26647645
        BindableProject(id1=[$16], name=[$17], country_code=[$18], imdb_id0=[$19], name_pcode_nf=[$20], name_pcode_sf=[$21], md5sum0=[$22], id00=[$23], name0=[$24], country_code0=[$25], imdb_id00=[$26], name_pcode_nf0=[$27], name_pcode_sf0=[$28], md5sum00=[$29], id10=[$30], info=[$31], id2=[$32], info0=[$33], id3=[$34], kind=[$35], id4=[$36], kind0=[$37], id5=[$38], link=[$39], id6=[$40], movie_id0=[$41], company_id=[$42], company_type_id=[$43], note=[$44], id7=[$45], movie_id00=[$46], company_id0=[$47], company_type_id0=[$48], note0=[$49], id8=[$50], movie_id1=[$51], info_type_id=[$52], info1=[$53], note1=[$54], id9=[$55], movie_id2=[$56], info_type_id0=[$57], info2=[$58], note2=[$59], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11]), id = 26647644
          BindableProject(id=[$44], title=[$45], imdb_index=[$46], kind_id=[$47], production_year=[$48], imdb_id=[$49], phonetic_code=[$50], episode_of_id=[$51], season_nr=[$52], episode_nr=[$53], series_years=[$54], md5sum=[$55], id0=[$56], movie_id=[$57], linked_movie_id=[$58], link_type_id=[$59], id1=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id0=[$25], company_id=[$26], company_type_id=[$27], note=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note0=[$33], id8=[$34], movie_id1=[$35], info_type_id=[$36], info1=[$37], note1=[$38], id9=[$39], movie_id2=[$40], info_type_id0=[$41], info2=[$42], note2=[$43]), id = 26647643
            BindableProject(id2=[$21], name=[$22], country_code=[$23], imdb_id0=[$24], name_pcode_nf=[$25], name_pcode_sf=[$26], md5sum0=[$27], id00=[$28], name0=[$29], country_code0=[$30], imdb_id00=[$31], name_pcode_nf0=[$32], name_pcode_sf0=[$33], md5sum00=[$34], id10=[$35], info0=[$36], id20=[$37], info00=[$38], id3=[$39], kind=[$40], id4=[$41], kind0=[$42], id5=[$43], link=[$44], id6=[$45], movie_id1=[$46], company_id=[$47], company_type_id=[$48], note0=[$49], id7=[$50], movie_id00=[$51], company_id0=[$52], company_type_id0=[$53], note00=[$54], id8=[$55], movie_id10=[$56], info_type_id0=[$57], info1=[$58], note1=[$59], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15]), id = 26647642
              BindableProject(id=[$39], title=[$40], imdb_index=[$41], kind_id=[$42], production_year=[$43], imdb_id=[$44], phonetic_code=[$45], episode_of_id=[$46], season_nr=[$47], episode_nr=[$48], series_years=[$49], md5sum=[$50], id0=[$51], movie_id=[$52], linked_movie_id=[$53], link_type_id=[$54], id1=[$55], movie_id0=[$56], info_type_id=[$57], info=[$58], note=[$59], id2=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info0=[$15], id20=[$16], info00=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id1=[$25], company_id=[$26], company_type_id=[$27], note0=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note00=[$33], id8=[$34], movie_id10=[$35], info_type_id0=[$36], info1=[$37], note1=[$38]), id = 26647641
                BindableProject(id3=[$26], name=[$27], country_code=[$28], imdb_id0=[$29], name_pcode_nf=[$30], name_pcode_sf=[$31], md5sum0=[$32], id00=[$33], name0=[$34], country_code0=[$35], imdb_id00=[$36], name_pcode_nf0=[$37], name_pcode_sf0=[$38], md5sum00=[$39], id10=[$40], info1=[$41], id20=[$42], info00=[$43], id30=[$44], kind=[$45], id4=[$46], kind0=[$47], id5=[$48], link=[$49], id6=[$50], movie_id2=[$51], company_id=[$52], company_type_id=[$53], note1=[$54], id7=[$55], movie_id00=[$56], company_id0=[$57], company_type_id0=[$58], note00=[$59], id2=[$21], movie_id1=[$22], info_type_id0=[$23], info0=[$24], note0=[$25], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20]), id = 26647640
                  BindableProject(id=[$34], title=[$35], imdb_index=[$36], kind_id=[$37], production_year=[$38], imdb_id=[$39], phonetic_code=[$40], episode_of_id=[$41], season_nr=[$42], episode_nr=[$43], series_years=[$44], md5sum=[$45], id0=[$46], movie_id=[$47], linked_movie_id=[$48], link_type_id=[$49], id1=[$50], movie_id0=[$51], info_type_id=[$52], info=[$53], note=[$54], id2=[$55], movie_id1=[$56], info_type_id0=[$57], info0=[$58], note0=[$59], id3=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info1=[$15], id20=[$16], info00=[$17], id30=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id2=[$25], company_id=[$26], company_type_id=[$27], note1=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note00=[$33]), id = 26647639
                    BindableProject(id4=[$31], name=[$32], country_code=[$33], imdb_id0=[$34], name_pcode_nf=[$35], name_pcode_sf=[$36], md5sum0=[$37], id00=[$38], name0=[$39], country_code0=[$40], imdb_id00=[$41], name_pcode_nf0=[$42], name_pcode_sf0=[$43], md5sum00=[$44], id10=[$45], info1=[$46], id20=[$47], info00=[$48], id30=[$49], kind=[$50], id40=[$51], kind0=[$52], id5=[$53], link=[$54], id6=[$55], movie_id3=[$56], company_id0=[$57], company_type_id0=[$58], note2=[$59], id3=[$26], movie_id2=[$27], company_id=[$28], company_type_id=[$29], note1=[$30], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20], id2=[$21], movie_id1=[$22], info_type_id0=[$23], info0=[$24], note0=[$25]), id = 26647638
                      BindableJoin(condition=[AND(=($38, $28), =($51, $3), =($53, $15), =($47, $18), =($45, $23), =($22, $56))], joinType=[inner]), id = 26647637
                        BindableJoin(condition=[=($17, $27)], joinType=[inner]), id = 26647625
                          BindableJoin(condition=[=($22, $13)], joinType=[inner]), id = 26647624
                            BindableJoin(condition=[=($17, $14)], joinType=[inner]), id = 26647623
                              BindableJoin(condition=[=($14, $0)], joinType=[inner]), id = 26647621
                                BindableFilter(condition=[=($4, 2007)]), id = 26647620
                                  BindableTableScan(table=[[title]]), id = 15636083
                                BindableTableScan(table=[[movie_link]]), id = 15636071
                              BindableFilter(condition=[<($3, '3.0')]), id = 26647622
                                BindableTableScan(table=[[movie_info_idx]]), id = 15636051
                            BindableTableScan(table=[[movie_info_idx]]), id = 15636051
                          BindableTableScan(table=[[movie_companies]]), id = 15636031
                        BindableJoin(condition=[=($0, $26)], joinType=[inner]), id = 26647636
                          BindableJoin(condition=[true], joinType=[inner]), id = 26647635
                            BindableJoin(condition=[true], joinType=[inner]), id = 26647633
                              BindableJoin(condition=[true], joinType=[inner]), id = 26647632
                                BindableJoin(condition=[true], joinType=[inner]), id = 26647630
                                  BindableJoin(condition=[true], joinType=[inner]), id = 26647629
                                    BindableJoin(condition=[true], joinType=[inner]), id = 26647627
                                      BindableFilter(condition=[=($2, '[nl]')]), id = 26647626
                                        BindableTableScan(table=[[company_name]]), id = 15635971
                                      BindableTableScan(table=[[company_name]]), id = 15635971
                                    BindableFilter(condition=[=($1, 'rating')]), id = 26647628
                                      BindableTableScan(table=[[info_type]]), id = 15635979
                                  BindableFilter(condition=[=($1, 'rating')]), id = 26647628
                                    BindableTableScan(table=[[info_type]]), id = 15635979
                                BindableFilter(condition=[=($1, 'tv series')]), id = 26647631
                                  BindableTableScan(table=[[kind_type]]), id = 15635999
                              BindableFilter(condition=[=($1, 'tv series')]), id = 26647631
                                BindableTableScan(table=[[kind_type]]), id = 15635999
                            BindableFilter(condition=[LIKE($1, '%follow%')]), id = 26647634
                              BindableTableScan(table=[[link_type]]), id = 15636019
                          BindableTableScan(table=[[movie_companies]]), id = 15636031
        BindableTableScan(table=[[title]]), id = 15636083


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(cn1.name) AS first_company, MIN(cn2.name) AS second_company, MIN(mi_idx1.info) AS first_rating, MIN(mi_idx2.info) AS second_rating, MIN(t1.title) AS first_movie, MIN(t2.title) AS second_movie FROM company_name AS cn1, company_name AS cn2, info_type AS it1, info_type AS it2, kind_type AS kt1, kind_type AS kt2, link_type AS lt, movie_companies AS mc1, movie_companies AS mc2, movie_info_idx AS mi_idx1, movie_info_idx AS mi_idx2, movie_link AS ml, title AS t1, title AS t2 WHERE NOT (cn1.country_code = '[us]') AND it1.info = 'rating' AND it2.info = 'rating' AND kt1.kind IN ('tv series', 'episode') AND kt2.kind IN ('tv series', 'episode') AND lt.link IN ('sequel', 'follows', 'followed by') AND mi_idx2.info < '3.5' AND t2.production_year BETWEEN 2000 AND 2010 AND lt.id = ml.link_type_id AND t1.id = ml.movie_id AND t2.id = ml.linked_movie_id AND it1.id = mi_idx1.info_type_id AND t1.id = mi_idx1.movie_id AND kt1.id = t1.kind_id AND cn1.id = mc1.company_id AND t1.id = mc1.movie_id AND ml.movie_id = mi_idx1.movie_id AND ml.movie_id = mc1.movie_id AND mi_idx1.movie_id = mc1.movie_id AND it2.id = mi_idx2.info_type_id AND t2.id = mi_idx2.movie_id AND kt2.id = t2.kind_id AND cn2.id = mc2.company_id AND t2.id = mc2.movie_id AND ml.linked_movie_id = mi_idx2.movie_id AND ml.linked_movie_id = mc2.movie_id AND mi_idx2.movie_id = mc2.movie_id

[SqlNode]
SELECT MIN(`CN1`.`NAME`) AS `FIRST_COMPANY`, MIN(`CN2`.`NAME`) AS `SECOND_COMPANY`, MIN(`MI_IDX1`.`INFO`) AS `FIRST_RATING`, MIN(`MI_IDX2`.`INFO`) AS `SECOND_RATING`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `COMPANY_NAME` AS `CN1`,
`COMPANY_NAME` AS `CN2`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT1`,
`KIND_TYPE` AS `KT2`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC1`,
`MOVIE_COMPANIES` AS `MC2`,
`MOVIE_INFO_IDX` AS `MI_IDX1`,
`MOVIE_INFO_IDX` AS `MI_IDX2`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE NOT `CN1`.`COUNTRY_CODE` = '[us]' AND `IT1`.`INFO` = 'rating' AND `IT2`.`INFO` = 'rating' AND `KT1`.`KIND` IN ('tv series', 'episode') AND `KT2`.`KIND` IN ('tv series', 'episode') AND `LT`.`LINK` IN ('sequel', 'follows', 'followed by') AND `MI_IDX2`.`INFO` < '3.5' AND `T2`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2000 AND 2010 AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `T1`.`ID` = `ML`.`MOVIE_ID` AND `T2`.`ID` = `ML`.`LINKED_MOVIE_ID` AND `IT1`.`ID` = `MI_IDX1`.`INFO_TYPE_ID` AND `T1`.`ID` = `MI_IDX1`.`MOVIE_ID` AND `KT1`.`ID` = `T1`.`KIND_ID` AND `CN1`.`ID` = `MC1`.`COMPANY_ID` AND `T1`.`ID` = `MC1`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MI_IDX1`.`MOVIE_ID` AND `ML`.`MOVIE_ID` = `MC1`.`MOVIE_ID` AND `MI_IDX1`.`MOVIE_ID` = `MC1`.`MOVIE_ID` AND `IT2`.`ID` = `MI_IDX2`.`INFO_TYPE_ID` AND `T2`.`ID` = `MI_IDX2`.`MOVIE_ID` AND `KT2`.`ID` = `T2`.`KIND_ID` AND `CN2`.`ID` = `MC2`.`COMPANY_ID` AND `T2`.`ID` = `MC2`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `MI_IDX2`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `MC2`.`MOVIE_ID` AND `MI_IDX2`.`MOVIE_ID` = `MC2`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`CN1`.`NAME`) AS `FIRST_COMPANY`, MIN(`CN2`.`NAME`) AS `SECOND_COMPANY`, MIN(`MI_IDX1`.`INFO`) AS `FIRST_RATING`, MIN(`MI_IDX2`.`INFO`) AS `SECOND_RATING`, MIN(`T1`.`TITLE`) AS `FIRST_MOVIE`, MIN(`T2`.`TITLE`) AS `SECOND_MOVIE`
FROM `COMPANY_NAME` AS `CN1`,
`COMPANY_NAME` AS `CN2`,
`INFO_TYPE` AS `IT1`,
`INFO_TYPE` AS `IT2`,
`KIND_TYPE` AS `KT1`,
`KIND_TYPE` AS `KT2`,
`LINK_TYPE` AS `LT`,
`MOVIE_COMPANIES` AS `MC1`,
`MOVIE_COMPANIES` AS `MC2`,
`MOVIE_INFO_IDX` AS `MI_IDX1`,
`MOVIE_INFO_IDX` AS `MI_IDX2`,
`MOVIE_LINK` AS `ML`,
`TITLE` AS `T1`,
`TITLE` AS `T2`
WHERE NOT `CN1`.`country_code` = '[us]' AND `IT1`.`info` = 'rating' AND `IT2`.`info` = 'rating' AND `KT1`.`kind` IN ('tv series', 'episode') AND `KT2`.`kind` IN ('tv series', 'episode') AND `LT`.`link` IN ('sequel', 'follows', 'followed by') AND `MI_IDX2`.`info` < '3.5' AND `T2`.`production_year` BETWEEN ASYMMETRIC 2000 AND 2010 AND `LT`.`id` = `ML`.`link_type_id` AND `T1`.`id` = `ML`.`movie_id` AND `T2`.`id` = `ML`.`linked_movie_id` AND `IT1`.`id` = `MI_IDX1`.`info_type_id` AND `T1`.`id` = `MI_IDX1`.`movie_id` AND `KT1`.`id` = `T1`.`kind_id` AND `CN1`.`id` = `MC1`.`company_id` AND `T1`.`id` = `MC1`.`movie_id` AND `ML`.`movie_id` = `MI_IDX1`.`movie_id` AND `ML`.`movie_id` = `MC1`.`movie_id` AND `MI_IDX1`.`movie_id` = `MC1`.`movie_id` AND `IT2`.`id` = `MI_IDX2`.`info_type_id` AND `T2`.`id` = `MI_IDX2`.`movie_id` AND `KT2`.`id` = `T2`.`kind_id` AND `CN2`.`id` = `MC2`.`company_id` AND `T2`.`id` = `MC2`.`movie_id` AND `ML`.`linked_movie_id` = `MI_IDX2`.`movie_id` AND `ML`.`linked_movie_id` = `MC2`.`movie_id` AND `MI_IDX2`.`movie_id` = `MC2`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], FIRST_COMPANY=[MIN($0)], SECOND_COMPANY=[MIN($1)], FIRST_RATING=[MIN($2)], SECOND_RATING=[MIN($3)], FIRST_MOVIE=[MIN($4)], SECOND_MOVIE=[MIN($5)])
  LogicalProject(name=[$1], name0=[$8], info1=[$37], info2=[$42], title=[$49], title0=[$61])
    LogicalFilter(condition=[AND(NOT(=($2, '[us]')), =($15, 'rating'), =($17, 'rating'), OR(=($19, 'tv series'), =($19, 'episode')), OR(=($21, 'tv series'), =($21, 'episode')), OR(=($23, 'sequel'), =($23, 'follows'), =($23, 'followed by')), <($42, '3.5'), >=($64, 2000), <=($64, 2010), =($22, $47), =($48, $45), =($60, $46), =($14, $36), =($48, $35), =($18, $51), =($0, $26), =($48, $25), =($45, $35), =($45, $25), =($35, $25), =($16, $41), =($60, $40), =($20, $63), =($7, $31), =($60, $30), =($46, $40), =($46, $30), =($40, $30))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalJoin(condition=[true], joinType=[inner])
                      LogicalJoin(condition=[true], joinType=[inner])
                        LogicalJoin(condition=[true], joinType=[inner])
                          LogicalJoin(condition=[true], joinType=[inner])
                            LogicalJoin(condition=[true], joinType=[inner])
                              LogicalJoin(condition=[true], joinType=[inner])
                                LogicalTableScan(table=[[company_name]])
                                LogicalTableScan(table=[[company_name]])
                              LogicalTableScan(table=[[info_type]])
                            LogicalTableScan(table=[[info_type]])
                          LogicalTableScan(table=[[kind_type]])
                        LogicalTableScan(table=[[kind_type]])
                      LogicalTableScan(table=[[link_type]])
                    LogicalTableScan(table=[[movie_companies]])
                  LogicalTableScan(table=[[movie_companies]])
                LogicalTableScan(table=[[movie_info_idx]])
              LogicalTableScan(table=[[movie_info_idx]])
            LogicalTableScan(table=[[movie_link]])
          LogicalTableScan(table=[[title]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], FIRST_COMPANY=[MIN($0)], SECOND_COMPANY=[MIN($1)], FIRST_RATING=[MIN($2)], SECOND_RATING=[MIN($3)], FIRST_MOVIE=[MIN($4)], SECOND_MOVIE=[MIN($5)]), id = 37659430
  BindableProject(name=[$1], name0=[$8], info1=[$37], info2=[$42], title=[$49], title0=[$61]), id = 37659429
    BindableProject(id=[$0], name=[$1], country_code=[$2], imdb_id=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum=[$6], id0=[$7], name0=[$8], country_code0=[$9], imdb_id0=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum0=[$13], id1=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id=[$25], company_id=[$26], company_type_id=[$27], note=[$28], id7=[$29], movie_id0=[$30], company_id0=[$31], company_type_id0=[$32], note0=[$33], id8=[$34], movie_id1=[$35], info_type_id=[$36], info1=[$37], note1=[$38], id9=[$39], movie_id2=[$40], info_type_id0=[$41], info2=[$42], note2=[$43], id10=[$44], movie_id3=[$45], linked_movie_id=[$46], link_type_id=[$47], id12=[$60], title0=[$61], imdb_index0=[$62], kind_id0=[$63], production_year0=[$64], imdb_id2=[$65], phonetic_code0=[$66], episode_of_id0=[$67], season_nr0=[$68], episode_nr0=[$69], series_years0=[$70], md5sum2=[$71], id11=[$48], title=[$49], imdb_index=[$50], kind_id=[$51], production_year=[$52], imdb_id1=[$53], phonetic_code=[$54], episode_of_id=[$55], season_nr=[$56], episode_nr=[$57], series_years=[$58], md5sum1=[$59]), id = 37659428
      BindableJoin(condition=[AND(=($45, $60), =($18, $63))], joinType=[inner]), id = 37659427
        BindableProject(id1=[$16], name=[$17], country_code=[$18], imdb_id0=[$19], name_pcode_nf=[$20], name_pcode_sf=[$21], md5sum0=[$22], id00=[$23], name0=[$24], country_code0=[$25], imdb_id00=[$26], name_pcode_nf0=[$27], name_pcode_sf0=[$28], md5sum00=[$29], id10=[$30], info=[$31], id2=[$32], info0=[$33], id3=[$34], kind=[$35], id4=[$36], kind0=[$37], id5=[$38], link=[$39], id6=[$40], movie_id0=[$41], company_id=[$42], company_type_id=[$43], note=[$44], id7=[$45], movie_id00=[$46], company_id0=[$47], company_type_id0=[$48], note0=[$49], id8=[$50], movie_id1=[$51], info_type_id=[$52], info1=[$53], note1=[$54], id9=[$55], movie_id2=[$56], info_type_id0=[$57], info2=[$58], note2=[$59], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11]), id = 37659426
          BindableProject(id=[$44], title=[$45], imdb_index=[$46], kind_id=[$47], production_year=[$48], imdb_id=[$49], phonetic_code=[$50], episode_of_id=[$51], season_nr=[$52], episode_nr=[$53], series_years=[$54], md5sum=[$55], id0=[$56], movie_id=[$57], linked_movie_id=[$58], link_type_id=[$59], id1=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info=[$15], id2=[$16], info0=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id0=[$25], company_id=[$26], company_type_id=[$27], note=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note0=[$33], id8=[$34], movie_id1=[$35], info_type_id=[$36], info1=[$37], note1=[$38], id9=[$39], movie_id2=[$40], info_type_id0=[$41], info2=[$42], note2=[$43]), id = 37659425
            BindableProject(id2=[$21], name=[$22], country_code=[$23], imdb_id0=[$24], name_pcode_nf=[$25], name_pcode_sf=[$26], md5sum0=[$27], id00=[$28], name0=[$29], country_code0=[$30], imdb_id00=[$31], name_pcode_nf0=[$32], name_pcode_sf0=[$33], md5sum00=[$34], id10=[$35], info0=[$36], id20=[$37], info00=[$38], id3=[$39], kind=[$40], id4=[$41], kind0=[$42], id5=[$43], link=[$44], id6=[$45], movie_id1=[$46], company_id=[$47], company_type_id=[$48], note0=[$49], id7=[$50], movie_id00=[$51], company_id0=[$52], company_type_id0=[$53], note00=[$54], id8=[$55], movie_id10=[$56], info_type_id0=[$57], info1=[$58], note1=[$59], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15]), id = 37659424
              BindableProject(id=[$39], title=[$40], imdb_index=[$41], kind_id=[$42], production_year=[$43], imdb_id=[$44], phonetic_code=[$45], episode_of_id=[$46], season_nr=[$47], episode_nr=[$48], series_years=[$49], md5sum=[$50], id0=[$51], movie_id=[$52], linked_movie_id=[$53], link_type_id=[$54], id1=[$55], movie_id0=[$56], info_type_id=[$57], info=[$58], note=[$59], id2=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info0=[$15], id20=[$16], info00=[$17], id3=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id1=[$25], company_id=[$26], company_type_id=[$27], note0=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note00=[$33], id8=[$34], movie_id10=[$35], info_type_id0=[$36], info1=[$37], note1=[$38]), id = 37659423
                BindableProject(id3=[$26], name=[$27], country_code=[$28], imdb_id0=[$29], name_pcode_nf=[$30], name_pcode_sf=[$31], md5sum0=[$32], id00=[$33], name0=[$34], country_code0=[$35], imdb_id00=[$36], name_pcode_nf0=[$37], name_pcode_sf0=[$38], md5sum00=[$39], id10=[$40], info1=[$41], id20=[$42], info00=[$43], id30=[$44], kind=[$45], id4=[$46], kind0=[$47], id5=[$48], link=[$49], id6=[$50], movie_id2=[$51], company_id=[$52], company_type_id=[$53], note1=[$54], id7=[$55], movie_id00=[$56], company_id0=[$57], company_type_id0=[$58], note00=[$59], id2=[$21], movie_id1=[$22], info_type_id0=[$23], info0=[$24], note0=[$25], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20]), id = 37659422
                  BindableProject(id=[$34], title=[$35], imdb_index=[$36], kind_id=[$37], production_year=[$38], imdb_id=[$39], phonetic_code=[$40], episode_of_id=[$41], season_nr=[$42], episode_nr=[$43], series_years=[$44], md5sum=[$45], id0=[$46], movie_id=[$47], linked_movie_id=[$48], link_type_id=[$49], id1=[$50], movie_id0=[$51], info_type_id=[$52], info=[$53], note=[$54], id2=[$55], movie_id1=[$56], info_type_id0=[$57], info0=[$58], note0=[$59], id3=[$0], name=[$1], country_code=[$2], imdb_id0=[$3], name_pcode_nf=[$4], name_pcode_sf=[$5], md5sum0=[$6], id00=[$7], name0=[$8], country_code0=[$9], imdb_id00=[$10], name_pcode_nf0=[$11], name_pcode_sf0=[$12], md5sum00=[$13], id10=[$14], info1=[$15], id20=[$16], info00=[$17], id30=[$18], kind=[$19], id4=[$20], kind0=[$21], id5=[$22], link=[$23], id6=[$24], movie_id2=[$25], company_id=[$26], company_type_id=[$27], note1=[$28], id7=[$29], movie_id00=[$30], company_id0=[$31], company_type_id0=[$32], note00=[$33]), id = 37659421
                    BindableProject(id4=[$31], name=[$32], country_code=[$33], imdb_id0=[$34], name_pcode_nf=[$35], name_pcode_sf=[$36], md5sum0=[$37], id00=[$38], name0=[$39], country_code0=[$40], imdb_id00=[$41], name_pcode_nf0=[$42], name_pcode_sf0=[$43], md5sum00=[$44], id10=[$45], info1=[$46], id20=[$47], info00=[$48], id30=[$49], kind=[$50], id40=[$51], kind0=[$52], id5=[$53], link=[$54], id6=[$55], movie_id3=[$56], company_id0=[$57], company_type_id0=[$58], note2=[$59], id3=[$26], movie_id2=[$27], company_id=[$28], company_type_id=[$29], note1=[$30], id=[$0], title=[$1], imdb_index=[$2], kind_id=[$3], production_year=[$4], imdb_id=[$5], phonetic_code=[$6], episode_of_id=[$7], season_nr=[$8], episode_nr=[$9], series_years=[$10], md5sum=[$11], id0=[$12], movie_id=[$13], linked_movie_id=[$14], link_type_id=[$15], id1=[$16], movie_id0=[$17], info_type_id=[$18], info=[$19], note=[$20], id2=[$21], movie_id1=[$22], info_type_id0=[$23], info0=[$24], note0=[$25]), id = 37659420
                      BindableJoin(condition=[AND(=($45, $23), =($22, $56), =($51, $3), =($53, $15), =($47, $18), =($38, $28))], joinType=[inner]), id = 37659419
                        BindableJoin(condition=[=($17, $27)], joinType=[inner]), id = 37659407
                          BindableJoin(condition=[=($22, $13)], joinType=[inner]), id = 37659406
                            BindableJoin(condition=[=($17, $14)], joinType=[inner]), id = 37659405
                              BindableJoin(condition=[=($14, $0)], joinType=[inner]), id = 37659403
                                BindableFilter(condition=[SEARCH($4, Sarg[[2000..2010]])]), id = 37659402
                                  BindableTableScan(table=[[title]]), id = 26647865
                                BindableTableScan(table=[[movie_link]]), id = 26647853
                              BindableFilter(condition=[<($3, '3.5')]), id = 37659404
                                BindableTableScan(table=[[movie_info_idx]]), id = 26647833
                            BindableTableScan(table=[[movie_info_idx]]), id = 26647833
                          BindableTableScan(table=[[movie_companies]]), id = 26647813
                        BindableJoin(condition=[=($0, $26)], joinType=[inner]), id = 37659418
                          BindableJoin(condition=[true], joinType=[inner]), id = 37659417
                            BindableJoin(condition=[true], joinType=[inner]), id = 37659415
                              BindableJoin(condition=[true], joinType=[inner]), id = 37659414
                                BindableJoin(condition=[true], joinType=[inner]), id = 37659412
                                  BindableJoin(condition=[true], joinType=[inner]), id = 37659411
                                    BindableJoin(condition=[true], joinType=[inner]), id = 37659409
                                      BindableFilter(condition=[<>($2, '[us]')]), id = 37659408
                                        BindableTableScan(table=[[company_name]]), id = 26647753
                                      BindableTableScan(table=[[company_name]]), id = 26647753
                                    BindableFilter(condition=[=($1, 'rating')]), id = 37659410
                                      BindableTableScan(table=[[info_type]]), id = 26647761
                                  BindableFilter(condition=[=($1, 'rating')]), id = 37659410
                                    BindableTableScan(table=[[info_type]]), id = 26647761
                                BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'tv series':VARCHAR]:VARCHAR)]), id = 37659413
                                  BindableTableScan(table=[[kind_type]]), id = 26647781
                              BindableFilter(condition=[SEARCH($1, Sarg['episode':VARCHAR, 'tv series':VARCHAR]:VARCHAR)]), id = 37659413
                                BindableTableScan(table=[[kind_type]]), id = 26647781
                            BindableFilter(condition=[SEARCH($1, Sarg['followed by':VARCHAR, 'follows':VARCHAR, 'sequel':VARCHAR]:VARCHAR)]), id = 37659416
                              BindableTableScan(table=[[link_type]]), id = 26647801
                          BindableTableScan(table=[[movie_companies]]), id = 26647813
        BindableTableScan(table=[[title]]), id = 26647865


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t WHERE k.keyword LIKE '%sequel%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND t.production_year > 2005 AND t.id = mi.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` LIKE '%sequel%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND `T`.`PRODUCTION_YEAR` > 2005 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `K`.`keyword` LIKE '%sequel%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND `T`.`production_year` > 2005 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$12])
    LogicalFilter(condition=[AND(LIKE($1, '%sequel%'), OR(=($6, 'Sweden'), =($6, 'Norway'), =($6, 'Germany'), =($6, 'Denmark'), =($6, 'Swedish'), =($6, 'Denish'), =($6, 'Norwegian'), =($6, 'German')), >($15, 2005), =($11, $4), =($11, $9), =($9, $4), =($0, $10))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 37660034
  BindableProject(title=[$12]), id = 37660033
    BindableJoin(condition=[=($4, $11)], joinType=[inner]), id = 37660032
      BindableJoin(condition=[AND(=($9, $4), =($0, $10))], joinType=[inner]), id = 37660030
        BindableJoin(condition=[true], joinType=[inner]), id = 37660029
          BindableFilter(condition=[LIKE($1, '%sequel%')]), id = 37660027
            BindableTableScan(table=[[keyword]]), id = 37659471
          BindableFilter(condition=[SEARCH($3, Sarg['Denish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR]:VARCHAR)]), id = 37660028
            BindableTableScan(table=[[movie_info]]), id = 37659475
        BindableTableScan(table=[[movie_keyword]]), id = 37659487
      BindableFilter(condition=[>($4, 2005)]), id = 37660031
        BindableTableScan(table=[[title]]), id = 37659499


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t WHERE k.keyword LIKE '%sequel%' AND mi.info IN ('Bulgaria') AND t.production_year > 2010 AND t.id = mi.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` LIKE '%sequel%' AND `MI`.`INFO` IN ('Bulgaria') AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `K`.`keyword` LIKE '%sequel%' AND `MI`.`info` IN ('Bulgaria') AND `T`.`production_year` > 2010 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$12])
    LogicalFilter(condition=[AND(LIKE($1, '%sequel%'), =($6, 'Bulgaria'), >($15, 2010), =($11, $4), =($11, $9), =($9, $4), =($0, $10))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 37660638
  BindableProject(title=[$12]), id = 37660637
    BindableJoin(condition=[=($4, $11)], joinType=[inner]), id = 37660636
      BindableJoin(condition=[AND(=($9, $4), =($0, $10))], joinType=[inner]), id = 37660634
        BindableJoin(condition=[true], joinType=[inner]), id = 37660633
          BindableFilter(condition=[LIKE($1, '%sequel%')]), id = 37660631
            BindableTableScan(table=[[keyword]]), id = 37660075
          BindableFilter(condition=[=($3, 'Bulgaria')]), id = 37660632
            BindableTableScan(table=[[movie_info]]), id = 37660079
        BindableTableScan(table=[[movie_keyword]]), id = 37660091
      BindableFilter(condition=[>($4, 2010)]), id = 37660635
        BindableTableScan(table=[[title]]), id = 37660103


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS movie_title FROM keyword AS k, movie_info AS mi, movie_keyword AS mk, title AS t WHERE k.keyword LIKE '%sequel%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND t.production_year > 1990 AND t.id = mi.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi.movie_id AND k.id = mk.keyword_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` LIKE '%sequel%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `T`.`PRODUCTION_YEAR` > 1990 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `KEYWORD` AS `K`,
`MOVIE_INFO` AS `MI`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `K`.`keyword` LIKE '%sequel%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `T`.`production_year` > 1990 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`movie_id` = `MI`.`movie_id` AND `K`.`id` = `MK`.`keyword_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_TITLE=[MIN($0)])
  LogicalProject(title=[$12])
    LogicalFilter(condition=[AND(LIKE($1, '%sequel%'), OR(=($6, 'Sweden'), =($6, 'Norway'), =($6, 'Germany'), =($6, 'Denmark'), =($6, 'Swedish'), =($6, 'Denish'), =($6, 'Norwegian'), =($6, 'German'), =($6, 'USA'), =($6, 'American')), >($15, 1990), =($11, $4), =($11, $9), =($9, $4), =($0, $10))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_info]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_TITLE=[MIN($0)]), id = 37661242
  BindableProject(title=[$12]), id = 37661241
    BindableJoin(condition=[=($4, $11)], joinType=[inner]), id = 37661240
      BindableJoin(condition=[AND(=($9, $4), =($0, $10))], joinType=[inner]), id = 37661238
        BindableJoin(condition=[true], joinType=[inner]), id = 37661237
          BindableFilter(condition=[LIKE($1, '%sequel%')]), id = 37661235
            BindableTableScan(table=[[keyword]]), id = 37660679
          BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Denish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 37661236
            BindableTableScan(table=[[movie_info]]), id = 37660683
        BindableTableScan(table=[[movie_keyword]]), id = 37660695
      BindableFilter(condition=[>($4, 1990)]), id = 37661239
        BindableTableScan(table=[[title]]), id = 37660707


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_title FROM info_type AS it, keyword AS k, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE it.info ='rating' AND k.keyword LIKE '%sequel%' AND mi_idx.info > '5.0' AND t.production_year > 2005 AND t.id = mi_idx.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT`.`INFO` = 'rating' AND `K`.`KEYWORD` LIKE '%sequel%' AND `MI_IDX`.`INFO` > '5.0' AND `T`.`PRODUCTION_YEAR` > 2005 AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT`.`info` = 'rating' AND `K`.`keyword` LIKE '%sequel%' AND `MI_IDX`.`info` > '5.0' AND `T`.`production_year` > 2005 AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RATING=[MIN($0)], MOVIE_TITLE=[MIN($1)])
  LogicalProject(info0=[$8], title=[$14])
    LogicalFilter(condition=[AND(=($1, 'rating'), LIKE($3, '%sequel%'), >($8, '5.0'), >($17, 2005), =($13, $6), =($13, $11), =($11, $6), =($2, $12), =($0, $7))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RATING=[MIN($0)], MOVIE_TITLE=[MIN($1)]), id = 37662966
  BindableProject(info0=[$8], title=[$14]), id = 37662965
    BindableJoin(condition=[=($6, $13)], joinType=[inner]), id = 37662964
      BindableJoin(condition=[AND(=($11, $6), =($2, $12))], joinType=[inner]), id = 37662962
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 37662961
          BindableJoin(condition=[true], joinType=[inner]), id = 37662959
            BindableFilter(condition=[=($1, 'rating')]), id = 37662957
              BindableTableScan(table=[[info_type]]), id = 37661290
            BindableFilter(condition=[LIKE($1, '%sequel%')]), id = 37662958
              BindableTableScan(table=[[keyword]]), id = 37661294
          BindableFilter(condition=[>($3, '5.0')]), id = 37662960
            BindableTableScan(table=[[movie_info_idx]]), id = 37661306
        BindableTableScan(table=[[movie_keyword]]), id = 37661318
      BindableFilter(condition=[>($4, 2005)]), id = 37662963
        BindableTableScan(table=[[title]]), id = 37661330


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_title FROM info_type AS it, keyword AS k, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE it.info ='rating' AND k.keyword LIKE '%sequel%' AND mi_idx.info > '9.0' AND t.production_year > 2010 AND t.id = mi_idx.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT`.`INFO` = 'rating' AND `K`.`KEYWORD` LIKE '%sequel%' AND `MI_IDX`.`INFO` > '9.0' AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT`.`info` = 'rating' AND `K`.`keyword` LIKE '%sequel%' AND `MI_IDX`.`info` > '9.0' AND `T`.`production_year` > 2010 AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RATING=[MIN($0)], MOVIE_TITLE=[MIN($1)])
  LogicalProject(info0=[$8], title=[$14])
    LogicalFilter(condition=[AND(=($1, 'rating'), LIKE($3, '%sequel%'), >($8, '9.0'), >($17, 2010), =($13, $6), =($13, $11), =($11, $6), =($2, $12), =($0, $7))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RATING=[MIN($0)], MOVIE_TITLE=[MIN($1)]), id = 37664690
  BindableProject(info0=[$8], title=[$14]), id = 37664689
    BindableJoin(condition=[=($6, $13)], joinType=[inner]), id = 37664688
      BindableJoin(condition=[AND(=($11, $6), =($2, $12))], joinType=[inner]), id = 37664686
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 37664685
          BindableJoin(condition=[true], joinType=[inner]), id = 37664683
            BindableFilter(condition=[=($1, 'rating')]), id = 37664681
              BindableTableScan(table=[[info_type]]), id = 37663014
            BindableFilter(condition=[LIKE($1, '%sequel%')]), id = 37664682
              BindableTableScan(table=[[keyword]]), id = 37663018
          BindableFilter(condition=[>($3, '9.0')]), id = 37664684
            BindableTableScan(table=[[movie_info_idx]]), id = 37663030
        BindableTableScan(table=[[movie_keyword]]), id = 37663042
      BindableFilter(condition=[>($4, 2010)]), id = 37664687
        BindableTableScan(table=[[title]]), id = 37663054


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(mi_idx.info) AS rating, MIN(t.title) AS movie_title FROM info_type AS it, keyword AS k, movie_info_idx AS mi_idx, movie_keyword AS mk, title AS t WHERE it.info ='rating' AND k.keyword LIKE '%sequel%' AND mi_idx.info > '2.0' AND t.production_year > 1990 AND t.id = mi_idx.movie_id AND t.id = mk.movie_id AND mk.movie_id = mi_idx.movie_id AND k.id = mk.keyword_id AND it.id = mi_idx.info_type_id

[SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT`.`INFO` = 'rating' AND `K`.`KEYWORD` LIKE '%sequel%' AND `MI_IDX`.`INFO` > '2.0' AND `T`.`PRODUCTION_YEAR` > 1990 AND `T`.`ID` = `MI_IDX`.`MOVIE_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `MK`.`MOVIE_ID` = `MI_IDX`.`MOVIE_ID` AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `IT`.`ID` = `MI_IDX`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`MI_IDX`.`INFO`) AS `RATING`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `INFO_TYPE` AS `IT`,
`KEYWORD` AS `K`,
`MOVIE_INFO_IDX` AS `MI_IDX`,
`MOVIE_KEYWORD` AS `MK`,
`TITLE` AS `T`
WHERE `IT`.`info` = 'rating' AND `K`.`keyword` LIKE '%sequel%' AND `MI_IDX`.`info` > '2.0' AND `T`.`production_year` > 1990 AND `T`.`id` = `MI_IDX`.`movie_id` AND `T`.`id` = `MK`.`movie_id` AND `MK`.`movie_id` = `MI_IDX`.`movie_id` AND `K`.`id` = `MK`.`keyword_id` AND `IT`.`id` = `MI_IDX`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], RATING=[MIN($0)], MOVIE_TITLE=[MIN($1)])
  LogicalProject(info0=[$8], title=[$14])
    LogicalFilter(condition=[AND(=($1, 'rating'), LIKE($3, '%sequel%'), >($8, '2.0'), >($17, 1990), =($13, $6), =($13, $11), =($11, $6), =($2, $12), =($0, $7))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[info_type]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_info_idx]])
          LogicalTableScan(table=[[movie_keyword]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], RATING=[MIN($0)], MOVIE_TITLE=[MIN($1)]), id = 37666414
  BindableProject(info0=[$8], title=[$14]), id = 37666413
    BindableJoin(condition=[=($6, $13)], joinType=[inner]), id = 37666412
      BindableJoin(condition=[AND(=($11, $6), =($2, $12))], joinType=[inner]), id = 37666410
        BindableJoin(condition=[=($0, $7)], joinType=[inner]), id = 37666409
          BindableJoin(condition=[true], joinType=[inner]), id = 37666407
            BindableFilter(condition=[=($1, 'rating')]), id = 37666405
              BindableTableScan(table=[[info_type]]), id = 37664738
            BindableFilter(condition=[LIKE($1, '%sequel%')]), id = 37666406
              BindableTableScan(table=[[keyword]]), id = 37664742
          BindableFilter(condition=[>($3, '2.0')]), id = 37666408
            BindableTableScan(table=[[movie_info_idx]]), id = 37664754
        BindableTableScan(table=[[movie_keyword]]), id = 37664766
      BindableFilter(condition=[>($4, 1990)]), id = 37666411
        BindableTableScan(table=[[title]]), id = 37664778


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS typical_european_movie FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info AS mi, title AS t WHERE ct.kind = 'production companies' AND mc.note LIKE '%(theatrical)%' AND mc.note LIKE '%(France)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND t.production_year > 2005 AND t.id = mi.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ct.id = mc.company_type_id AND it.id = mi.info_type_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `TYPICAL_EUROPEAN_MOVIE`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `MC`.`NOTE` LIKE '%(theatrical)%' AND `MC`.`NOTE` LIKE '%(France)%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND `T`.`PRODUCTION_YEAR` > 2005 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `TYPICAL_EUROPEAN_MOVIE`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `MC`.`note` LIKE '%(theatrical)%' AND `MC`.`note` LIKE '%(France)%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German') AND `T`.`production_year` > 2005 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `CT`.`id` = `MC`.`company_type_id` AND `IT`.`id` = `MI`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], TYPICAL_EUROPEAN_MOVIE=[MIN($0)])
  LogicalProject(title=[$15])
    LogicalFilter(condition=[AND(=($1, 'production companies'), LIKE($8, '%(theatrical)%'), LIKE($8, '%(France)%'), OR(=($12, 'Sweden'), =($12, 'Norway'), =($12, 'Germany'), =($12, 'Denmark'), =($12, 'Swedish'), =($12, 'Denish'), =($12, 'Norwegian'), =($12, 'German')), >($18, 2005), =($14, $10), =($14, $5), =($5, $10), =($0, $7), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], TYPICAL_EUROPEAN_MOVIE=[MIN($0)]), id = 37669359
  BindableProject(title=[$15]), id = 37669358
    BindableJoin(condition=[=($10, $14)], joinType=[inner]), id = 37669357
      BindableProject(id1=[$10], kind=[$11], id00=[$12], info0=[$13], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 37669355
        BindableJoin(condition=[AND(=($12, $2), =($10, $8))], joinType=[inner]), id = 37669354
          BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 37669351
            BindableFilter(condition=[SEARCH($3, Sarg['Denish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR]:VARCHAR)]), id = 37669349
              BindableTableScan(table=[[movie_info]]), id = 37666490
            BindableFilter(condition=[AND(LIKE($4, '%(theatrical)%'), LIKE($4, '%(France)%'))]), id = 37669350
              BindableTableScan(table=[[movie_companies]]), id = 37666478
          BindableJoin(condition=[true], joinType=[inner]), id = 37669353
            BindableFilter(condition=[=($1, 'production companies')]), id = 37669352
              BindableTableScan(table=[[company_type]]), id = 37666462
            BindableTableScan(table=[[info_type]]), id = 37666466
      BindableFilter(condition=[>($4, 2005)]), id = 37669356
        BindableTableScan(table=[[title]]), id = 37666502


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS american_vhs_movie FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info AS mi, title AS t WHERE ct.kind = 'production companies' AND mc.note LIKE '%(VHS)%' AND mc.note LIKE '%(USA)%' AND mc.note LIKE '%(1994)%' AND mi.info IN ('USA', 'America') AND t.production_year > 2010 AND t.id = mi.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ct.id = mc.company_type_id AND it.id = mi.info_type_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `AMERICAN_VHS_MOVIE`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `MC`.`NOTE` LIKE '%(VHS)%' AND `MC`.`NOTE` LIKE '%(USA)%' AND `MC`.`NOTE` LIKE '%(1994)%' AND `MI`.`INFO` IN ('USA', 'America') AND `T`.`PRODUCTION_YEAR` > 2010 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `AMERICAN_VHS_MOVIE`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `MC`.`note` LIKE '%(VHS)%' AND `MC`.`note` LIKE '%(USA)%' AND `MC`.`note` LIKE '%(1994)%' AND `MI`.`info` IN ('USA', 'America') AND `T`.`production_year` > 2010 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `CT`.`id` = `MC`.`company_type_id` AND `IT`.`id` = `MI`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], AMERICAN_VHS_MOVIE=[MIN($0)])
  LogicalProject(title=[$15])
    LogicalFilter(condition=[AND(=($1, 'production companies'), LIKE($8, '%(VHS)%'), LIKE($8, '%(USA)%'), LIKE($8, '%(1994)%'), OR(=($12, 'USA'), =($12, 'America')), >($18, 2010), =($14, $10), =($14, $5), =($5, $10), =($0, $7), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], AMERICAN_VHS_MOVIE=[MIN($0)]), id = 37672306
  BindableProject(title=[$15]), id = 37672305
    BindableJoin(condition=[=($10, $14)], joinType=[inner]), id = 37672304
      BindableProject(id1=[$10], kind=[$11], id00=[$12], info0=[$13], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 37672302
        BindableProject(id=[$4], movie_id=[$5], info_type_id=[$6], info=[$7], note=[$8], id0=[$9], movie_id0=[$10], company_id=[$11], company_type_id=[$12], note0=[$13], id1=[$0], kind=[$1], id00=[$2], info0=[$3]), id = 37672301
          BindableProject(id=[$0], kind=[$1], id1=[$12], info0=[$13], id0=[$2], movie_id=[$3], info_type_id=[$4], info=[$5], note=[$6], id00=[$7], movie_id0=[$8], company_id=[$9], company_type_id=[$10], note0=[$11]), id = 37672300
            BindableJoin(condition=[=($12, $4)], joinType=[inner]), id = 37672299
              BindableJoin(condition=[=($0, $10)], joinType=[inner]), id = 37672298
                BindableFilter(condition=[=($1, 'production companies')]), id = 37672294
                  BindableTableScan(table=[[company_type]]), id = 37669407
                BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 37672297
                  BindableFilter(condition=[SEARCH($3, Sarg['America':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 37672295
                    BindableTableScan(table=[[movie_info]]), id = 37669435
                  BindableFilter(condition=[AND(LIKE($4, '%(VHS)%'), LIKE($4, '%(USA)%'), LIKE($4, '%(1994)%'))]), id = 37672296
                    BindableTableScan(table=[[movie_companies]]), id = 37669423
              BindableTableScan(table=[[info_type]]), id = 37669411
      BindableFilter(condition=[>($4, 2010)]), id = 37672303
        BindableTableScan(table=[[title]]), id = 37669447


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(t.title) AS american_movie FROM company_type AS ct, info_type AS it, movie_companies AS mc, movie_info AS mi, title AS t WHERE ct.kind = 'production companies' AND mc.note NOT LIKE '%(TV)%' AND mc.note LIKE '%(USA)%' AND mi.info IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND t.production_year > 1990 AND t.id = mi.movie_id AND t.id = mc.movie_id AND mc.movie_id = mi.movie_id AND ct.id = mc.company_type_id AND it.id = mi.info_type_id

[SqlNode]
SELECT MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`TITLE` AS `T`
WHERE `CT`.`KIND` = 'production companies' AND `MC`.`NOTE` NOT LIKE '%(TV)%' AND `MC`.`NOTE` LIKE '%(USA)%' AND `MI`.`INFO` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `T`.`PRODUCTION_YEAR` > 1990 AND `T`.`ID` = `MI`.`MOVIE_ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`MOVIE_ID` = `MI`.`MOVIE_ID` AND `CT`.`ID` = `MC`.`COMPANY_TYPE_ID` AND `IT`.`ID` = `MI`.`INFO_TYPE_ID`

[Valid SqlNode]
SELECT MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `COMPANY_TYPE` AS `CT`,
`INFO_TYPE` AS `IT`,
`MOVIE_COMPANIES` AS `MC`,
`MOVIE_INFO` AS `MI`,
`TITLE` AS `T`
WHERE `CT`.`kind` = 'production companies' AND `MC`.`note` NOT LIKE '%(TV)%' AND `MC`.`note` LIKE '%(USA)%' AND `MI`.`info` IN ('Sweden', 'Norway', 'Germany', 'Denmark', 'Swedish', 'Denish', 'Norwegian', 'German', 'USA', 'American') AND `T`.`production_year` > 1990 AND `T`.`id` = `MI`.`movie_id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`movie_id` = `MI`.`movie_id` AND `CT`.`id` = `MC`.`company_type_id` AND `IT`.`id` = `MI`.`info_type_id`

[Logical plan]
LogicalAggregate(group=[{}], AMERICAN_MOVIE=[MIN($0)])
  LogicalProject(title=[$15])
    LogicalFilter(condition=[AND(=($1, 'production companies'), NOT(LIKE($8, '%(TV)%')), LIKE($8, '%(USA)%'), OR(=($12, 'Sweden'), =($12, 'Norway'), =($12, 'Germany'), =($12, 'Denmark'), =($12, 'Swedish'), =($12, 'Denish'), =($12, 'Norwegian'), =($12, 'German'), =($12, 'USA'), =($12, 'American')), >($18, 1990), =($14, $10), =($14, $5), =($5, $10), =($0, $7), =($2, $11))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[company_type]])
              LogicalTableScan(table=[[info_type]])
            LogicalTableScan(table=[[movie_companies]])
          LogicalTableScan(table=[[movie_info]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], AMERICAN_MOVIE=[MIN($0)]), id = 37675251
  BindableProject(title=[$15]), id = 37675250
    BindableJoin(condition=[=($10, $14)], joinType=[inner]), id = 37675249
      BindableProject(id1=[$10], kind=[$11], id00=[$12], info0=[$13], id0=[$5], movie_id0=[$6], company_id=[$7], company_type_id=[$8], note0=[$9], id=[$0], movie_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 37675247
        BindableJoin(condition=[AND(=($12, $2), =($10, $8))], joinType=[inner]), id = 37675246
          BindableJoin(condition=[=($6, $1)], joinType=[inner]), id = 37675243
            BindableFilter(condition=[SEARCH($3, Sarg['American':VARCHAR, 'Denish':VARCHAR, 'Denmark':VARCHAR, 'German':VARCHAR, 'Germany':VARCHAR, 'Norway':VARCHAR, 'Norwegian':VARCHAR, 'Sweden':VARCHAR, 'Swedish':VARCHAR, 'USA':VARCHAR]:VARCHAR)]), id = 37675241
              BindableTableScan(table=[[movie_info]]), id = 37672382
            BindableFilter(condition=[AND(LIKE($4, '%(USA)%'), NOT(LIKE($4, '%(TV)%')))]), id = 37675242
              BindableTableScan(table=[[movie_companies]]), id = 37672370
          BindableJoin(condition=[true], joinType=[inner]), id = 37675245
            BindableFilter(condition=[=($1, 'production companies')]), id = 37675244
              BindableTableScan(table=[[company_type]]), id = 37672354
            BindableTableScan(table=[[info_type]]), id = 37672358
      BindableFilter(condition=[>($4, 1990)]), id = 37675248
        BindableTableScan(table=[[title]]), id = 37672394


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword = 'marvel-cinematic-universe' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2010 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id

[SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `MARVEL_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'marvel-cinematic-universe' AND `N`.`NAME` LIKE '%Downey%Robert%' AND `T`.`PRODUCTION_YEAR` > 2010 AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `MARVEL_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'marvel-cinematic-universe' AND `N`.`name` LIKE '%Downey%Robert%' AND `T`.`production_year` > 2010 AND `K`.`id` = `MK`.`keyword_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], MARVEL_MOVIE=[MIN($2)])
  LogicalProject(keyword=[$8], name=[$14], title=[$23])
    LogicalFilter(condition=[AND(=($8, 'marvel-cinematic-universe'), LIKE($14, '%Downey%Robert%'), >($26, 2010), =($7, $12), =($22, $11), =($22, $2), =($2, $11), =($13, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[cast_info]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], MARVEL_MOVIE=[MIN($2)]), id = 37676380
  BindableProject(keyword=[$8], name=[$14], title=[$23]), id = 37676379
    BindableJoin(condition=[=($11, $22)], joinType=[inner]), id = 37676378
      BindableJoin(condition=[=($13, $1)], joinType=[inner]), id = 37676376
        BindableJoin(condition=[AND(=($7, $12), =($2, $11))], joinType=[inner]), id = 37676374
          BindableJoin(condition=[true], joinType=[inner]), id = 37676373
            BindableTableScan(table=[[cast_info]]), id = 37675299
            BindableFilter(condition=[=($1, 'marvel-cinematic-universe')]), id = 37676372
              BindableTableScan(table=[[keyword]]), id = 37675303
          BindableTableScan(table=[[movie_keyword]]), id = 37675315
        BindableFilter(condition=[LIKE($1, '%Downey%Robert%')]), id = 37676375
          BindableTableScan(table=[[name]]), id = 37675327
      BindableFilter(condition=[>($4, 2010)]), id = 37676377
        BindableTableScan(table=[[title]]), id = 37675339


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS hero_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2014 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id

[SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `HERO_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `N`.`NAME` LIKE '%Downey%Robert%' AND `T`.`PRODUCTION_YEAR` > 2014 AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `HERO_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `N`.`name` LIKE '%Downey%Robert%' AND `T`.`production_year` > 2014 AND `K`.`id` = `MK`.`keyword_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], HERO_MOVIE=[MIN($2)])
  LogicalProject(keyword=[$8], name=[$14], title=[$23])
    LogicalFilter(condition=[AND(OR(=($8, 'superhero'), =($8, 'sequel'), =($8, 'second-part'), =($8, 'marvel-comics'), =($8, 'based-on-comic'), =($8, 'tv-special'), =($8, 'fight'), =($8, 'violence')), LIKE($14, '%Downey%Robert%'), >($26, 2014), =($7, $12), =($22, $11), =($22, $2), =($2, $11), =($13, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[cast_info]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], HERO_MOVIE=[MIN($2)]), id = 37677509
  BindableProject(keyword=[$8], name=[$14], title=[$23]), id = 37677508
    BindableJoin(condition=[=($11, $22)], joinType=[inner]), id = 37677507
      BindableJoin(condition=[=($13, $1)], joinType=[inner]), id = 37677505
        BindableJoin(condition=[AND(=($7, $12), =($2, $11))], joinType=[inner]), id = 37677503
          BindableJoin(condition=[true], joinType=[inner]), id = 37677502
            BindableTableScan(table=[[cast_info]]), id = 37676428
            BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'fight':VARCHAR, 'marvel-comics':VARCHAR, 'second-part':VARCHAR, 'sequel':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 37677501
              BindableTableScan(table=[[keyword]]), id = 37676432
          BindableTableScan(table=[[movie_keyword]]), id = 37676444
        BindableFilter(condition=[LIKE($1, '%Downey%Robert%')]), id = 37677504
          BindableTableScan(table=[[name]]), id = 37676456
      BindableFilter(condition=[>($4, 2014)]), id = 37677506
        BindableTableScan(table=[[title]]), id = 37676468


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword = 'marvel-cinematic-universe' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2014 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id

[SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `MARVEL_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'marvel-cinematic-universe' AND `N`.`NAME` LIKE '%Downey%Robert%' AND `T`.`PRODUCTION_YEAR` > 2014 AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `MARVEL_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'marvel-cinematic-universe' AND `N`.`name` LIKE '%Downey%Robert%' AND `T`.`production_year` > 2014 AND `K`.`id` = `MK`.`keyword_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], MARVEL_MOVIE=[MIN($2)])
  LogicalProject(keyword=[$8], name=[$14], title=[$23])
    LogicalFilter(condition=[AND(=($8, 'marvel-cinematic-universe'), LIKE($14, '%Downey%Robert%'), >($26, 2014), =($7, $12), =($22, $11), =($22, $2), =($2, $11), =($13, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[cast_info]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], MARVEL_MOVIE=[MIN($2)]), id = 37678638
  BindableProject(keyword=[$8], name=[$14], title=[$23]), id = 37678637
    BindableJoin(condition=[=($11, $22)], joinType=[inner]), id = 37678636
      BindableJoin(condition=[=($13, $1)], joinType=[inner]), id = 37678634
        BindableJoin(condition=[AND(=($7, $12), =($2, $11))], joinType=[inner]), id = 37678632
          BindableJoin(condition=[true], joinType=[inner]), id = 37678631
            BindableTableScan(table=[[cast_info]]), id = 37677557
            BindableFilter(condition=[=($1, 'marvel-cinematic-universe')]), id = 37678630
              BindableTableScan(table=[[keyword]]), id = 37677561
          BindableTableScan(table=[[movie_keyword]]), id = 37677573
        BindableFilter(condition=[LIKE($1, '%Downey%Robert%')]), id = 37678633
          BindableTableScan(table=[[name]]), id = 37677585
      BindableFilter(condition=[>($4, 2014)]), id = 37678635
        BindableTableScan(table=[[title]]), id = 37677597


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS hero_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2000 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id

[SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `HERO_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `N`.`NAME` LIKE '%Downey%Robert%' AND `T`.`PRODUCTION_YEAR` > 2000 AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `HERO_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `N`.`name` LIKE '%Downey%Robert%' AND `T`.`production_year` > 2000 AND `K`.`id` = `MK`.`keyword_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], HERO_MOVIE=[MIN($2)])
  LogicalProject(keyword=[$8], name=[$14], title=[$23])
    LogicalFilter(condition=[AND(OR(=($8, 'superhero'), =($8, 'sequel'), =($8, 'second-part'), =($8, 'marvel-comics'), =($8, 'based-on-comic'), =($8, 'tv-special'), =($8, 'fight'), =($8, 'violence')), LIKE($14, '%Downey%Robert%'), >($26, 2000), =($7, $12), =($22, $11), =($22, $2), =($2, $11), =($13, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[cast_info]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], HERO_MOVIE=[MIN($2)]), id = 37679767
  BindableProject(keyword=[$8], name=[$14], title=[$23]), id = 37679766
    BindableJoin(condition=[=($11, $22)], joinType=[inner]), id = 37679765
      BindableJoin(condition=[=($13, $1)], joinType=[inner]), id = 37679763
        BindableJoin(condition=[AND(=($7, $12), =($2, $11))], joinType=[inner]), id = 37679761
          BindableJoin(condition=[true], joinType=[inner]), id = 37679760
            BindableTableScan(table=[[cast_info]]), id = 37678686
            BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'fight':VARCHAR, 'marvel-comics':VARCHAR, 'second-part':VARCHAR, 'sequel':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 37679759
              BindableTableScan(table=[[keyword]]), id = 37678690
          BindableTableScan(table=[[movie_keyword]]), id = 37678702
        BindableFilter(condition=[LIKE($1, '%Downey%Robert%')]), id = 37679762
          BindableTableScan(table=[[name]]), id = 37678714
      BindableFilter(condition=[>($4, 2000)]), id = 37679764
        BindableTableScan(table=[[title]]), id = 37678726


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS marvel_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword = 'marvel-cinematic-universe' AND n.name LIKE '%Downey%Robert%' AND t.production_year > 2000 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id

[SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `MARVEL_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` = 'marvel-cinematic-universe' AND `N`.`NAME` LIKE '%Downey%Robert%' AND `T`.`PRODUCTION_YEAR` > 2000 AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `MARVEL_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` = 'marvel-cinematic-universe' AND `N`.`name` LIKE '%Downey%Robert%' AND `T`.`production_year` > 2000 AND `K`.`id` = `MK`.`keyword_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], MARVEL_MOVIE=[MIN($2)])
  LogicalProject(keyword=[$8], name=[$14], title=[$23])
    LogicalFilter(condition=[AND(=($8, 'marvel-cinematic-universe'), LIKE($14, '%Downey%Robert%'), >($26, 2000), =($7, $12), =($22, $11), =($22, $2), =($2, $11), =($13, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[cast_info]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], MARVEL_MOVIE=[MIN($2)]), id = 37680896
  BindableProject(keyword=[$8], name=[$14], title=[$23]), id = 37680895
    BindableJoin(condition=[=($11, $22)], joinType=[inner]), id = 37680894
      BindableJoin(condition=[=($13, $1)], joinType=[inner]), id = 37680892
        BindableJoin(condition=[AND(=($7, $12), =($2, $11))], joinType=[inner]), id = 37680890
          BindableJoin(condition=[true], joinType=[inner]), id = 37680889
            BindableTableScan(table=[[cast_info]]), id = 37679815
            BindableFilter(condition=[=($1, 'marvel-cinematic-universe')]), id = 37680888
              BindableTableScan(table=[[keyword]]), id = 37679819
          BindableTableScan(table=[[movie_keyword]]), id = 37679831
        BindableFilter(condition=[LIKE($1, '%Downey%Robert%')]), id = 37680891
          BindableTableScan(table=[[name]]), id = 37679843
      BindableFilter(condition=[>($4, 2000)]), id = 37680893
        BindableTableScan(table=[[title]]), id = 37679855


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(k.keyword) AS movie_keyword, MIN(n.name) AS actor_name, MIN(t.title) AS hero_movie FROM cast_info AS ci, keyword AS k, movie_keyword AS mk, name AS n, title AS t WHERE k.keyword IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND t.production_year > 2000 AND k.id = mk.keyword_id AND t.id = mk.movie_id AND t.id = ci.movie_id AND ci.movie_id = mk.movie_id AND n.id = ci.person_id

[SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `HERO_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`KEYWORD` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `T`.`PRODUCTION_YEAR` > 2000 AND `K`.`ID` = `MK`.`KEYWORD_ID` AND `T`.`ID` = `MK`.`MOVIE_ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MK`.`MOVIE_ID` AND `N`.`ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`K`.`KEYWORD`) AS `MOVIE_KEYWORD`, MIN(`N`.`NAME`) AS `ACTOR_NAME`, MIN(`T`.`TITLE`) AS `HERO_MOVIE`
FROM `CAST_INFO` AS `CI`,
`KEYWORD` AS `K`,
`MOVIE_KEYWORD` AS `MK`,
`NAME` AS `N`,
`TITLE` AS `T`
WHERE `K`.`keyword` IN ('superhero', 'sequel', 'second-part', 'marvel-comics', 'based-on-comic', 'tv-special', 'fight', 'violence') AND `T`.`production_year` > 2000 AND `K`.`id` = `MK`.`keyword_id` AND `T`.`id` = `MK`.`movie_id` AND `T`.`id` = `CI`.`movie_id` AND `CI`.`movie_id` = `MK`.`movie_id` AND `N`.`id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], HERO_MOVIE=[MIN($2)])
  LogicalProject(keyword=[$8], name=[$14], title=[$23])
    LogicalFilter(condition=[AND(OR(=($8, 'superhero'), =($8, 'sequel'), =($8, 'second-part'), =($8, 'marvel-comics'), =($8, 'based-on-comic'), =($8, 'tv-special'), =($8, 'fight'), =($8, 'violence')), >($26, 2000), =($7, $12), =($22, $11), =($22, $2), =($2, $11), =($13, $1))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalTableScan(table=[[cast_info]])
              LogicalTableScan(table=[[keyword]])
            LogicalTableScan(table=[[movie_keyword]])
          LogicalTableScan(table=[[name]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], MOVIE_KEYWORD=[MIN($0)], ACTOR_NAME=[MIN($1)], HERO_MOVIE=[MIN($2)]), id = 37681994
  BindableProject(keyword=[$8], name=[$14], title=[$23]), id = 37681993
    BindableJoin(condition=[=($11, $22)], joinType=[inner]), id = 37681992
      BindableJoin(condition=[=($13, $1)], joinType=[inner]), id = 37681990
        BindableJoin(condition=[AND(=($7, $12), =($2, $11))], joinType=[inner]), id = 37681989
          BindableJoin(condition=[true], joinType=[inner]), id = 37681988
            BindableTableScan(table=[[cast_info]]), id = 37680944
            BindableFilter(condition=[SEARCH($1, Sarg['based-on-comic':VARCHAR, 'fight':VARCHAR, 'marvel-comics':VARCHAR, 'second-part':VARCHAR, 'sequel':VARCHAR, 'superhero':VARCHAR, 'tv-special':VARCHAR, 'violence':VARCHAR]:VARCHAR)]), id = 37681987
              BindableTableScan(table=[[keyword]]), id = 37680948
          BindableTableScan(table=[[movie_keyword]]), id = 37680960
        BindableTableScan(table=[[name]]), id = 37680972
      BindableFilter(condition=[>($4, 2000)]), id = 37681991
        BindableTableScan(table=[[title]]), id = 37680984


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS of_person, MIN(t.title) AS biography_movie FROM aka_name AS an, cast_info AS ci, info_type AS it, link_type AS lt, movie_link AS ml, name AS n, person_info AS pi, title AS t WHERE an.name LIKE '%a%' AND it.info ='mini biography' AND lt.link ='features' AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'B%')) AND pi.note ='Volker Boehm' AND t.production_year BETWEEN 1980 AND 1995 AND n.id = an.person_id AND n.id = pi.person_id AND ci.person_id = n.id AND t.id = ci.movie_id AND ml.linked_movie_id = t.id AND lt.id = ml.link_type_id AND it.id = pi.info_type_id AND pi.person_id = an.person_id AND pi.person_id = ci.person_id AND an.person_id = ci.person_id AND ci.movie_id = ml.linked_movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `OF_PERSON`, MIN(`T`.`TITLE`) AS `BIOGRAPHY_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT`,
`LINK_TYPE` AS `LT`,
`MOVIE_LINK` AS `ML`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`TITLE` AS `T`
WHERE `AN`.`NAME` LIKE '%a%' AND `IT`.`INFO` = 'mini biography' AND `LT`.`LINK` = 'features' AND `N`.`NAME_PCODE_CF` BETWEEN ASYMMETRIC 'A' AND 'F' AND (`N`.`GENDER` = 'm' OR `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE 'B%') AND `PI`.`NOTE` = 'Volker Boehm' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1980 AND 1995 AND `N`.`ID` = `AN`.`PERSON_ID` AND `N`.`ID` = `PI`.`PERSON_ID` AND `CI`.`PERSON_ID` = `N`.`ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `T`.`ID` AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `IT`.`ID` = `PI`.`INFO_TYPE_ID` AND `PI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `PI`.`PERSON_ID` = `CI`.`PERSON_ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `ML`.`LINKED_MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `OF_PERSON`, MIN(`T`.`TITLE`) AS `BIOGRAPHY_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT`,
`LINK_TYPE` AS `LT`,
`MOVIE_LINK` AS `ML`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`TITLE` AS `T`
WHERE `AN`.`name` LIKE '%a%' AND `IT`.`info` = 'mini biography' AND `LT`.`link` = 'features' AND `N`.`name_pcode_cf` BETWEEN ASYMMETRIC 'A' AND 'F' AND (`N`.`gender` = 'm' OR `N`.`gender` = 'f' AND `N`.`name` LIKE 'B%') AND `PI`.`note` = 'Volker Boehm' AND `T`.`production_year` BETWEEN ASYMMETRIC 1980 AND 1995 AND `N`.`id` = `AN`.`person_id` AND `N`.`id` = `PI`.`person_id` AND `CI`.`person_id` = `N`.`id` AND `T`.`id` = `CI`.`movie_id` AND `ML`.`linked_movie_id` = `T`.`id` AND `LT`.`id` = `ML`.`link_type_id` AND `IT`.`id` = `PI`.`info_type_id` AND `PI`.`person_id` = `AN`.`person_id` AND `PI`.`person_id` = `CI`.`person_id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `ML`.`linked_movie_id`

[Logical plan]
LogicalAggregate(group=[{}], OF_PERSON=[MIN($0)], BIOGRAPHY_MOVIE=[MIN($1)])
  LogicalProject(name0=[$24], title=[$38])
    LogicalFilter(condition=[AND(LIKE($2, '%a%'), =($16, 'mini biography'), =($18, 'features'), >=($28, 'A'), <=($28, 'F'), OR(=($27, 'm'), AND(=($27, 'f'), LIKE($24, 'B%'))), =($36, 'Volker Boehm'), >=($41, 1980), <=($41, 1995), =($23, $1), =($23, $33), =($9, $23), =($37, $10), =($21, $37), =($17, $22), =($15, $34), =($33, $1), =($33, $9), =($1, $9), =($10, $21))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_link]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[person_info]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], OF_PERSON=[MIN($0)], BIOGRAPHY_MOVIE=[MIN($1)]), id = 37687042
  BindableProject(name0=[$24], title=[$38]), id = 37687041
    BindableJoin(condition=[=($10, $37)], joinType=[inner]), id = 37687040
      BindableProject(id1=[$14], person_id0=[$15], name0=[$16], imdb_index0=[$17], name_pcode_cf0=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id00=[$22], person_id00=[$23], movie_id=[$24], person_role_id=[$25], note0=[$26], nr_order=[$27], role_id=[$28], id10=[$29], info0=[$30], id2=[$31], link=[$32], id3=[$33], movie_id0=[$34], linked_movie_id=[$35], link_type_id=[$36], id0=[$5], name=[$6], imdb_index=[$7], imdb_id=[$8], gender=[$9], name_pcode_cf=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id=[$0], person_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 37687038
        BindableProject(id=[$23], person_id=[$24], info_type_id=[$25], info=[$26], note=[$27], id0=[$28], name=[$29], imdb_index=[$30], imdb_id=[$31], gender=[$32], name_pcode_cf=[$33], name_pcode_nf=[$34], surname_pcode=[$35], md5sum=[$36], id1=[$0], person_id0=[$1], name0=[$2], imdb_index0=[$3], name_pcode_cf0=[$4], name_pcode_nf0=[$5], surname_pcode0=[$6], md5sum0=[$7], id00=[$8], person_id00=[$9], movie_id=[$10], person_role_id=[$11], note0=[$12], nr_order=[$13], role_id=[$14], id10=[$15], info0=[$16], id2=[$17], link=[$18], id3=[$19], movie_id0=[$20], linked_movie_id=[$21], link_type_id=[$22]), id = 37687037
          BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id1=[$15], info=[$16], id2=[$17], link=[$18], id4=[$33], movie_id0=[$34], linked_movie_id=[$35], link_type_id=[$36], id3=[$19], person_id1=[$20], info_type_id=[$21], info0=[$22], note0=[$23], id00=[$24], name0=[$25], imdb_index0=[$26], imdb_id=[$27], gender=[$28], name_pcode_cf0=[$29], name_pcode_nf0=[$30], surname_pcode0=[$31], md5sum0=[$32]), id = 37687036
            BindableJoin(condition=[AND(=($17, $36), =($10, $35))], joinType=[inner]), id = 37687035
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id1=[$15], info=[$16], id3=[$31], link=[$32], id2=[$17], person_id1=[$18], info_type_id=[$19], info0=[$20], note0=[$21], id00=[$22], name0=[$23], imdb_index0=[$24], imdb_id=[$25], gender=[$26], name_pcode_cf0=[$27], name_pcode_nf0=[$28], surname_pcode0=[$29], md5sum0=[$30]), id = 37687034
                BindableJoin(condition=[true], joinType=[inner]), id = 37687033
                  BindableProject(id2=[$16], person_id0=[$17], name0=[$18], imdb_index0=[$19], name_pcode_cf0=[$20], name_pcode_nf0=[$21], surname_pcode0=[$22], md5sum0=[$23], id00=[$24], person_id00=[$25], movie_id=[$26], person_role_id=[$27], note0=[$28], nr_order=[$29], role_id=[$30], id1=[$14], info0=[$15], id=[$0], person_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], name=[$6], imdb_index=[$7], imdb_id=[$8], gender=[$9], name_pcode_cf=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13]), id = 37687031
                    BindableJoin(condition=[=($17, $5)], joinType=[inner]), id = 37687030
                      BindableJoin(condition=[=($14, $2)], joinType=[inner]), id = 37687027
                        BindableJoin(condition=[=($5, $1)], joinType=[inner]), id = 37687025
                          BindableFilter(condition=[=($4, 'Volker Boehm')]), id = 37687023
                            BindableTableScan(table=[[person_info]]), id = 37682127
                          BindableFilter(condition=[AND(SEARCH($5, Sarg[['A'..'F']]:CHAR(1)), OR(=($4, 'm'), AND(=($4, 'f'), LIKE($1, 'B%'))))]), id = 37687024
                            BindableTableScan(table=[[name]]), id = 37682115
                        BindableFilter(condition=[=($1, 'mini biography')]), id = 37687026
                          BindableTableScan(table=[[info_type]]), id = 37682079
                      BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37687029
                        BindableFilter(condition=[LIKE($2, '%a%')]), id = 37687028
                          BindableTableScan(table=[[aka_name]]), id = 37682063
                        BindableTableScan(table=[[cast_info]]), id = 37682067
                  BindableFilter(condition=[=($1, 'features')]), id = 37687032
                    BindableTableScan(table=[[link_type]]), id = 37682091
              BindableTableScan(table=[[movie_link]]), id = 37682103
      BindableFilter(condition=[SEARCH($4, Sarg[[1980..1995]])]), id = 37687039
        BindableTableScan(table=[[title]]), id = 37682139


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS of_person, MIN(t.title) AS biography_movie FROM aka_name AS an, cast_info AS ci, info_type AS it, link_type AS lt, movie_link AS ml, name AS n, person_info AS pi, title AS t WHERE an.name LIKE '%a%' AND it.info ='mini biography' AND lt.link ='features' AND n.name_pcode_cf LIKE 'D%' AND n.gender='m' AND pi.note ='Volker Boehm' AND t.production_year BETWEEN 1980 AND 1984 AND n.id = an.person_id AND n.id = pi.person_id AND ci.person_id = n.id AND t.id = ci.movie_id AND ml.linked_movie_id = t.id AND lt.id = ml.link_type_id AND it.id = pi.info_type_id AND pi.person_id = an.person_id AND pi.person_id = ci.person_id AND an.person_id = ci.person_id AND ci.movie_id = ml.linked_movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `OF_PERSON`, MIN(`T`.`TITLE`) AS `BIOGRAPHY_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT`,
`LINK_TYPE` AS `LT`,
`MOVIE_LINK` AS `ML`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`TITLE` AS `T`
WHERE `AN`.`NAME` LIKE '%a%' AND `IT`.`INFO` = 'mini biography' AND `LT`.`LINK` = 'features' AND `N`.`NAME_PCODE_CF` LIKE 'D%' AND `N`.`GENDER` = 'm' AND `PI`.`NOTE` = 'Volker Boehm' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1980 AND 1984 AND `N`.`ID` = `AN`.`PERSON_ID` AND `N`.`ID` = `PI`.`PERSON_ID` AND `CI`.`PERSON_ID` = `N`.`ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `T`.`ID` AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `IT`.`ID` = `PI`.`INFO_TYPE_ID` AND `PI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `PI`.`PERSON_ID` = `CI`.`PERSON_ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `ML`.`LINKED_MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `OF_PERSON`, MIN(`T`.`TITLE`) AS `BIOGRAPHY_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT`,
`LINK_TYPE` AS `LT`,
`MOVIE_LINK` AS `ML`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`TITLE` AS `T`
WHERE `AN`.`name` LIKE '%a%' AND `IT`.`info` = 'mini biography' AND `LT`.`link` = 'features' AND `N`.`name_pcode_cf` LIKE 'D%' AND `N`.`gender` = 'm' AND `PI`.`note` = 'Volker Boehm' AND `T`.`production_year` BETWEEN ASYMMETRIC 1980 AND 1984 AND `N`.`id` = `AN`.`person_id` AND `N`.`id` = `PI`.`person_id` AND `CI`.`person_id` = `N`.`id` AND `T`.`id` = `CI`.`movie_id` AND `ML`.`linked_movie_id` = `T`.`id` AND `LT`.`id` = `ML`.`link_type_id` AND `IT`.`id` = `PI`.`info_type_id` AND `PI`.`person_id` = `AN`.`person_id` AND `PI`.`person_id` = `CI`.`person_id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `ML`.`linked_movie_id`

[Logical plan]
LogicalAggregate(group=[{}], OF_PERSON=[MIN($0)], BIOGRAPHY_MOVIE=[MIN($1)])
  LogicalProject(name0=[$24], title=[$38])
    LogicalFilter(condition=[AND(LIKE($2, '%a%'), =($16, 'mini biography'), =($18, 'features'), LIKE($28, 'D%'), =($27, 'm'), =($36, 'Volker Boehm'), >=($41, 1980), <=($41, 1984), =($23, $1), =($23, $33), =($9, $23), =($37, $10), =($21, $37), =($17, $22), =($15, $34), =($33, $1), =($33, $9), =($1, $9), =($10, $21))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_link]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[person_info]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], OF_PERSON=[MIN($0)], BIOGRAPHY_MOVIE=[MIN($1)]), id = 37692090
  BindableProject(name0=[$24], title=[$38]), id = 37692089
    BindableJoin(condition=[=($10, $37)], joinType=[inner]), id = 37692088
      BindableProject(id1=[$14], person_id0=[$15], name0=[$16], imdb_index0=[$17], name_pcode_cf0=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id00=[$22], person_id00=[$23], movie_id=[$24], person_role_id=[$25], note0=[$26], nr_order=[$27], role_id=[$28], id10=[$29], info0=[$30], id2=[$31], link=[$32], id3=[$33], movie_id0=[$34], linked_movie_id=[$35], link_type_id=[$36], id0=[$5], name=[$6], imdb_index=[$7], imdb_id=[$8], gender=[$9], name_pcode_cf=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13], id=[$0], person_id=[$1], info_type_id=[$2], info=[$3], note=[$4]), id = 37692086
        BindableProject(id=[$23], person_id=[$24], info_type_id=[$25], info=[$26], note=[$27], id0=[$28], name=[$29], imdb_index=[$30], imdb_id=[$31], gender=[$32], name_pcode_cf=[$33], name_pcode_nf=[$34], surname_pcode=[$35], md5sum=[$36], id1=[$0], person_id0=[$1], name0=[$2], imdb_index0=[$3], name_pcode_cf0=[$4], name_pcode_nf0=[$5], surname_pcode0=[$6], md5sum0=[$7], id00=[$8], person_id00=[$9], movie_id=[$10], person_role_id=[$11], note0=[$12], nr_order=[$13], role_id=[$14], id10=[$15], info0=[$16], id2=[$17], link=[$18], id3=[$19], movie_id0=[$20], linked_movie_id=[$21], link_type_id=[$22]), id = 37692085
          BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id1=[$15], info=[$16], id2=[$17], link=[$18], id4=[$33], movie_id0=[$34], linked_movie_id=[$35], link_type_id=[$36], id3=[$19], person_id1=[$20], info_type_id=[$21], info0=[$22], note0=[$23], id00=[$24], name0=[$25], imdb_index0=[$26], imdb_id=[$27], gender=[$28], name_pcode_cf0=[$29], name_pcode_nf0=[$30], surname_pcode0=[$31], md5sum0=[$32]), id = 37692084
            BindableJoin(condition=[AND(=($17, $36), =($10, $35))], joinType=[inner]), id = 37692083
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id1=[$15], info=[$16], id3=[$31], link=[$32], id2=[$17], person_id1=[$18], info_type_id=[$19], info0=[$20], note0=[$21], id00=[$22], name0=[$23], imdb_index0=[$24], imdb_id=[$25], gender=[$26], name_pcode_cf0=[$27], name_pcode_nf0=[$28], surname_pcode0=[$29], md5sum0=[$30]), id = 37692082
                BindableJoin(condition=[true], joinType=[inner]), id = 37692081
                  BindableProject(id2=[$16], person_id0=[$17], name0=[$18], imdb_index0=[$19], name_pcode_cf0=[$20], name_pcode_nf0=[$21], surname_pcode0=[$22], md5sum0=[$23], id00=[$24], person_id00=[$25], movie_id=[$26], person_role_id=[$27], note0=[$28], nr_order=[$29], role_id=[$30], id1=[$14], info0=[$15], id=[$0], person_id=[$1], info_type_id=[$2], info=[$3], note=[$4], id0=[$5], name=[$6], imdb_index=[$7], imdb_id=[$8], gender=[$9], name_pcode_cf=[$10], name_pcode_nf=[$11], surname_pcode=[$12], md5sum=[$13]), id = 37692079
                    BindableJoin(condition=[=($17, $5)], joinType=[inner]), id = 37692078
                      BindableJoin(condition=[=($14, $2)], joinType=[inner]), id = 37692075
                        BindableJoin(condition=[=($5, $1)], joinType=[inner]), id = 37692073
                          BindableFilter(condition=[=($4, 'Volker Boehm')]), id = 37692071
                            BindableTableScan(table=[[person_info]]), id = 37687175
                          BindableFilter(condition=[AND(LIKE($5, 'D%'), =($4, 'm'))]), id = 37692072
                            BindableTableScan(table=[[name]]), id = 37687163
                        BindableFilter(condition=[=($1, 'mini biography')]), id = 37692074
                          BindableTableScan(table=[[info_type]]), id = 37687127
                      BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37692077
                        BindableFilter(condition=[LIKE($2, '%a%')]), id = 37692076
                          BindableTableScan(table=[[aka_name]]), id = 37687111
                        BindableTableScan(table=[[cast_info]]), id = 37687115
                  BindableFilter(condition=[=($1, 'features')]), id = 37692080
                    BindableTableScan(table=[[link_type]]), id = 37687139
              BindableTableScan(table=[[movie_link]]), id = 37687151
      BindableFilter(condition=[SEARCH($4, Sarg[[1980..1984]])]), id = 37692087
        BindableTableScan(table=[[title]]), id = 37687187


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(n.name) AS cast_member_name, MIN(pi.info) AS cast_member_info FROM aka_name AS an, cast_info AS ci, info_type AS it, link_type AS lt, movie_link AS ml, name AS n, person_info AS pi, title AS t WHERE an.name IS NOT NULL AND (an.name LIKE '%a%' OR an.name LIKE 'A%') AND it.info ='mini biography' AND lt.link IN ('references', 'referenced in', 'features', 'featured in') AND n.name_pcode_cf BETWEEN 'A' AND 'F' AND (n.gender='m' OR (n.gender = 'f' AND n.name LIKE 'A%')) AND pi.note IS NOT NULL AND t.production_year BETWEEN 1980 AND 2010 AND n.id = an.person_id AND n.id = pi.person_id AND ci.person_id = n.id AND t.id = ci.movie_id AND ml.linked_movie_id = t.id AND lt.id = ml.link_type_id AND it.id = pi.info_type_id AND pi.person_id = an.person_id AND pi.person_id = ci.person_id AND an.person_id = ci.person_id AND ci.movie_id = ml.linked_movie_id

[SqlNode]
SELECT MIN(`N`.`NAME`) AS `CAST_MEMBER_NAME`, MIN(`PI`.`INFO`) AS `CAST_MEMBER_INFO`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT`,
`LINK_TYPE` AS `LT`,
`MOVIE_LINK` AS `ML`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`TITLE` AS `T`
WHERE `AN`.`NAME` IS NOT NULL AND (`AN`.`NAME` LIKE '%a%' OR `AN`.`NAME` LIKE 'A%') AND `IT`.`INFO` = 'mini biography' AND `LT`.`LINK` IN ('references', 'referenced in', 'features', 'featured in') AND `N`.`NAME_PCODE_CF` BETWEEN ASYMMETRIC 'A' AND 'F' AND (`N`.`GENDER` = 'm' OR `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE 'A%') AND `PI`.`NOTE` IS NOT NULL AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 1980 AND 2010 AND `N`.`ID` = `AN`.`PERSON_ID` AND `N`.`ID` = `PI`.`PERSON_ID` AND `CI`.`PERSON_ID` = `N`.`ID` AND `T`.`ID` = `CI`.`MOVIE_ID` AND `ML`.`LINKED_MOVIE_ID` = `T`.`ID` AND `LT`.`ID` = `ML`.`LINK_TYPE_ID` AND `IT`.`ID` = `PI`.`INFO_TYPE_ID` AND `PI`.`PERSON_ID` = `AN`.`PERSON_ID` AND `PI`.`PERSON_ID` = `CI`.`PERSON_ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `ML`.`LINKED_MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`N`.`NAME`) AS `CAST_MEMBER_NAME`, MIN(`PI`.`INFO`) AS `CAST_MEMBER_INFO`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`INFO_TYPE` AS `IT`,
`LINK_TYPE` AS `LT`,
`MOVIE_LINK` AS `ML`,
`NAME` AS `N`,
`PERSON_INFO` AS PI,
`TITLE` AS `T`
WHERE `AN`.`name` IS NOT NULL AND (`AN`.`name` LIKE '%a%' OR `AN`.`name` LIKE 'A%') AND `IT`.`info` = 'mini biography' AND `LT`.`link` IN ('references', 'referenced in', 'features', 'featured in') AND `N`.`name_pcode_cf` BETWEEN ASYMMETRIC 'A' AND 'F' AND (`N`.`gender` = 'm' OR `N`.`gender` = 'f' AND `N`.`name` LIKE 'A%') AND `PI`.`note` IS NOT NULL AND `T`.`production_year` BETWEEN ASYMMETRIC 1980 AND 2010 AND `N`.`id` = `AN`.`person_id` AND `N`.`id` = `PI`.`person_id` AND `CI`.`person_id` = `N`.`id` AND `T`.`id` = `CI`.`movie_id` AND `ML`.`linked_movie_id` = `T`.`id` AND `LT`.`id` = `ML`.`link_type_id` AND `IT`.`id` = `PI`.`info_type_id` AND `PI`.`person_id` = `AN`.`person_id` AND `PI`.`person_id` = `CI`.`person_id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `ML`.`linked_movie_id`

[Logical plan]
LogicalAggregate(group=[{}], CAST_MEMBER_NAME=[MIN($0)], CAST_MEMBER_INFO=[MIN($1)])
  LogicalProject(name0=[$24], info0=[$35])
    LogicalFilter(condition=[AND(IS NOT NULL($2), OR(LIKE($2, '%a%'), LIKE($2, 'A%')), =($16, 'mini biography'), OR(=($18, 'references'), =($18, 'referenced in'), =($18, 'features'), =($18, 'featured in')), >=($28, 'A'), <=($28, 'F'), OR(=($27, 'm'), AND(=($27, 'f'), LIKE($24, 'A%'))), IS NOT NULL($36), >=($41, 1980), <=($41, 2010), =($23, $1), =($23, $33), =($9, $23), =($37, $10), =($21, $37), =($17, $22), =($15, $34), =($33, $1), =($33, $9), =($1, $9), =($10, $21))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[cast_info]])
                  LogicalTableScan(table=[[info_type]])
                LogicalTableScan(table=[[link_type]])
              LogicalTableScan(table=[[movie_link]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[person_info]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], CAST_MEMBER_NAME=[MIN($0)], CAST_MEMBER_INFO=[MIN($1)]), id = 37697000
  BindableProject(name0=[$24], info0=[$35]), id = 37696999
    BindableJoin(condition=[=($10, $37)], joinType=[inner]), id = 37696998
      BindableJoin(condition=[AND(=($23, $33), =($15, $34))], joinType=[inner]), id = 37696996
        BindableJoin(condition=[=($1, $23)], joinType=[inner]), id = 37696995
          BindableJoin(condition=[AND(=($17, $22), =($10, $21))], joinType=[inner]), id = 37696993
            BindableJoin(condition=[true], joinType=[inner]), id = 37696992
              BindableJoin(condition=[true], joinType=[inner]), id = 37696990
                BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37696988
                  BindableFilter(condition=[OR(LIKE($2, '%a%'), LIKE($2, 'A%'))]), id = 37696987
                    BindableTableScan(table=[[aka_name]]), id = 37692159
                  BindableTableScan(table=[[cast_info]]), id = 37692163
                BindableFilter(condition=[=($1, 'mini biography')]), id = 37696989
                  BindableTableScan(table=[[info_type]]), id = 37692175
              BindableFilter(condition=[SEARCH($1, Sarg['featured in':VARCHAR, 'features':VARCHAR, 'referenced in':VARCHAR, 'references':VARCHAR]:VARCHAR)]), id = 37696991
                BindableTableScan(table=[[link_type]]), id = 37692187
            BindableTableScan(table=[[movie_link]]), id = 37692199
          BindableFilter(condition=[AND(SEARCH($5, Sarg[['A'..'F']]:CHAR(1)), OR(=($4, 'm'), AND(=($4, 'f'), LIKE($1, 'A%'))))]), id = 37696994
            BindableTableScan(table=[[name]]), id = 37692211
        BindableTableScan(table=[[person_info]]), id = 37692223
      BindableFilter(condition=[SEARCH($4, Sarg[[1980..2010]])]), id = 37696997
        BindableTableScan(table=[[title]]), id = 37692235


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an1.name) AS actress_pseudonym, MIN(t.title) AS japanese_movie_dubbed FROM aka_name AS an1, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n1, role_type AS rt, title AS t WHERE ci.note ='(voice: English version)' AND cn.country_code ='[jp]' AND mc.note LIKE '%(Japan)%' AND mc.note NOT LIKE '%(USA)%' AND n1.name LIKE '%Yo%' AND n1.name NOT LIKE '%Yu%' AND rt.role ='actress' AND an1.person_id = n1.id AND n1.id = ci.person_id AND ci.movie_id = t.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND an1.person_id = ci.person_id AND ci.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`AN1`.`NAME`) AS `ACTRESS_PSEUDONYM`, MIN(`T`.`TITLE`) AS `JAPANESE_MOVIE_DUBBED`
FROM `AKA_NAME` AS `AN1`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N1`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` = '(voice: English version)' AND `CN`.`COUNTRY_CODE` = '[jp]' AND `MC`.`NOTE` LIKE '%(Japan)%' AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND `N1`.`NAME` LIKE '%Yo%' AND `N1`.`NAME` NOT LIKE '%Yu%' AND `RT`.`ROLE` = 'actress' AND `AN1`.`PERSON_ID` = `N1`.`ID` AND `N1`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `AN1`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN1`.`NAME`) AS `ACTRESS_PSEUDONYM`, MIN(`T`.`TITLE`) AS `JAPANESE_MOVIE_DUBBED`
FROM `AKA_NAME` AS `AN1`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N1`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` = '(voice: English version)' AND `CN`.`country_code` = '[jp]' AND `MC`.`note` LIKE '%(Japan)%' AND `MC`.`note` NOT LIKE '%(USA)%' AND `N1`.`name` LIKE '%Yo%' AND `N1`.`name` NOT LIKE '%Yu%' AND `RT`.`role` = 'actress' AND `AN1`.`person_id` = `N1`.`id` AND `N1`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `AN1`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], ACTRESS_PSEUDONYM=[MIN($0)], JAPANESE_MOVIE_DUBBED=[MIN($1)])
  LogicalProject(name=[$2], title=[$39])
    LogicalFilter(condition=[AND(=($12, '(voice: English version)'), =($17, '[jp]'), LIKE($26, '%(Japan)%'), NOT(LIKE($26, '%(USA)%')), LIKE($28, '%Yo%'), NOT(LIKE($28, '%Yu%')), =($37, 'actress'), =($1, $27), =($27, $9), =($10, $38), =($38, $23), =($24, $15), =($14, $36), =($1, $9), =($10, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[aka_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], ACTRESS_PSEUDONYM=[MIN($0)], JAPANESE_MOVIE_DUBBED=[MIN($1)]), id = 37698856
  BindableProject(name=[$2], title=[$39]), id = 37698855
    BindableJoin(condition=[=($10, $38)], joinType=[inner]), id = 37698854
      BindableJoin(condition=[=($14, $36)], joinType=[inner]), id = 37698853
        BindableJoin(condition=[=($1, $27)], joinType=[inner]), id = 37698851
          BindableProject(id1=[$12], person_id=[$13], name0=[$14], imdb_index=[$15], name_pcode_cf=[$16], name_pcode_nf0=[$17], surname_pcode=[$18], md5sum0=[$19], id00=[$20], person_id0=[$21], movie_id0=[$22], person_role_id=[$23], note0=[$24], nr_order=[$25], role_id=[$26], id0=[$5], name=[$6], country_code=[$7], imdb_id=[$8], name_pcode_nf=[$9], name_pcode_sf=[$10], md5sum=[$11], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 37698849
            BindableJoin(condition=[=($22, $1)], joinType=[inner]), id = 37698848
              BindableJoin(condition=[=($2, $5)], joinType=[inner]), id = 37698845
                BindableFilter(condition=[AND(LIKE($4, '%(Japan)%'), NOT(LIKE($4, '%(USA)%')))]), id = 37698843
                  BindableTableScan(table=[[movie_companies]]), id = 37697090
                BindableFilter(condition=[=($2, '[jp]')]), id = 37698844
                  BindableTableScan(table=[[company_name]]), id = 37697078
              BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37698847
                BindableTableScan(table=[[aka_name]]), id = 37697062
                BindableFilter(condition=[=($4, '(voice: English version)')]), id = 37698846
                  BindableTableScan(table=[[cast_info]]), id = 37697066
          BindableFilter(condition=[AND(LIKE($1, '%Yo%'), NOT(LIKE($1, '%Yu%')))]), id = 37698850
            BindableTableScan(table=[[name]]), id = 37697102
        BindableFilter(condition=[=($1, 'actress')]), id = 37698852
          BindableTableScan(table=[[role_type]]), id = 37697114
      BindableTableScan(table=[[title]]), id = 37697126


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS acress_pseudonym, MIN(t.title) AS japanese_anime_movie FROM aka_name AS an, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t WHERE ci.note ='(voice: English version)' AND cn.country_code ='[jp]' AND mc.note LIKE '%(Japan)%' AND mc.note NOT LIKE '%(USA)%' AND (mc.note LIKE '%(2006)%' OR mc.note LIKE '%(2007)%') AND n.name LIKE '%Yo%' AND n.name NOT LIKE '%Yu%' AND rt.role ='actress' AND t.production_year BETWEEN 2006 AND 2007 AND (t.title LIKE 'One Piece%' OR t.title LIKE 'Dragon Ball Z%') AND an.person_id = n.id AND n.id = ci.person_id AND ci.movie_id = t.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND an.person_id = ci.person_id AND ci.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ACRESS_PSEUDONYM`, MIN(`T`.`TITLE`) AS `JAPANESE_ANIME_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` = '(voice: English version)' AND `CN`.`COUNTRY_CODE` = '[jp]' AND `MC`.`NOTE` LIKE '%(Japan)%' AND `MC`.`NOTE` NOT LIKE '%(USA)%' AND (`MC`.`NOTE` LIKE '%(2006)%' OR `MC`.`NOTE` LIKE '%(2007)%') AND `N`.`NAME` LIKE '%Yo%' AND `N`.`NAME` NOT LIKE '%Yu%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2006 AND 2007 AND (`T`.`TITLE` LIKE 'One Piece%' OR `T`.`TITLE` LIKE 'Dragon Ball Z%') AND `AN`.`PERSON_ID` = `N`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ACRESS_PSEUDONYM`, MIN(`T`.`TITLE`) AS `JAPANESE_ANIME_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` = '(voice: English version)' AND `CN`.`country_code` = '[jp]' AND `MC`.`note` LIKE '%(Japan)%' AND `MC`.`note` NOT LIKE '%(USA)%' AND (`MC`.`note` LIKE '%(2006)%' OR `MC`.`note` LIKE '%(2007)%') AND `N`.`name` LIKE '%Yo%' AND `N`.`name` NOT LIKE '%Yu%' AND `RT`.`role` = 'actress' AND `T`.`production_year` BETWEEN ASYMMETRIC 2006 AND 2007 AND (`T`.`title` LIKE 'One Piece%' OR `T`.`title` LIKE 'Dragon Ball Z%') AND `AN`.`person_id` = `N`.`id` AND `N`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `AN`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], ACRESS_PSEUDONYM=[MIN($0)], JAPANESE_ANIME_MOVIE=[MIN($1)])
  LogicalProject(name=[$2], title=[$39])
    LogicalFilter(condition=[AND(=($12, '(voice: English version)'), =($17, '[jp]'), LIKE($26, '%(Japan)%'), NOT(LIKE($26, '%(USA)%')), OR(LIKE($26, '%(2006)%'), LIKE($26, '%(2007)%')), LIKE($28, '%Yo%'), NOT(LIKE($28, '%Yu%')), =($37, 'actress'), >=($42, 2006), <=($42, 2007), OR(LIKE($39, 'One Piece%'), LIKE($39, 'Dragon Ball Z%')), =($1, $27), =($27, $9), =($10, $38), =($38, $23), =($24, $15), =($14, $36), =($1, $9), =($10, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[aka_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], ACRESS_PSEUDONYM=[MIN($0)], JAPANESE_ANIME_MOVIE=[MIN($1)]), id = 37700756
  BindableProject(name=[$2], title=[$39]), id = 37700755
    BindableJoin(condition=[=($10, $38)], joinType=[inner]), id = 37700754
      BindableJoin(condition=[=($14, $36)], joinType=[inner]), id = 37700752
        BindableJoin(condition=[=($1, $27)], joinType=[inner]), id = 37700750
          BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14], id2=[$20], name0=[$21], country_code=[$22], imdb_id=[$23], name_pcode_nf0=[$24], name_pcode_sf=[$25], md5sum0=[$26], id1=[$15], movie_id0=[$16], company_id=[$17], company_type_id=[$18], note0=[$19]), id = 37700748
            BindableJoin(condition=[=($17, $20)], joinType=[inner]), id = 37700747
              BindableProject(id1=[$12], person_id0=[$13], name=[$14], imdb_index=[$15], name_pcode_cf=[$16], name_pcode_nf=[$17], surname_pcode=[$18], md5sum=[$19], id0=[$5], person_id=[$6], movie_id0=[$7], person_role_id=[$8], note0=[$9], nr_order=[$10], role_id=[$11], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 37700745
                BindableJoin(condition=[=($13, $6)], joinType=[inner]), id = 37700744
                  BindableJoin(condition=[=($7, $1)], joinType=[inner]), id = 37700743
                    BindableFilter(condition=[AND(LIKE($4, '%(Japan)%'), OR(LIKE($4, '%(2006)%'), LIKE($4, '%(2007)%')), NOT(LIKE($4, '%(USA)%')))]), id = 37700741
                      BindableTableScan(table=[[movie_companies]]), id = 37698946
                    BindableFilter(condition=[=($4, '(voice: English version)')]), id = 37700742
                      BindableTableScan(table=[[cast_info]]), id = 37698922
                  BindableTableScan(table=[[aka_name]]), id = 37698918
              BindableFilter(condition=[=($2, '[jp]')]), id = 37700746
                BindableTableScan(table=[[company_name]]), id = 37698934
          BindableFilter(condition=[AND(LIKE($1, '%Yo%'), NOT(LIKE($1, '%Yu%')))]), id = 37700749
            BindableTableScan(table=[[name]]), id = 37698958
        BindableFilter(condition=[=($1, 'actress')]), id = 37700751
          BindableTableScan(table=[[role_type]]), id = 37698970
      BindableFilter(condition=[AND(SEARCH($4, Sarg[[2006..2007]]), OR(LIKE($1, 'One Piece%'), LIKE($1, 'Dragon Ball Z%')))]), id = 37700753
        BindableTableScan(table=[[title]]), id = 37698982


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(a1.name) AS writer_pseudo_name, MIN(t.title) AS movie_title FROM aka_name AS a1, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n1, role_type AS rt, title AS t WHERE cn.country_code ='[us]' AND rt.role ='writer' AND a1.person_id = n1.id AND n1.id = ci.person_id AND ci.movie_id = t.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND a1.person_id = ci.person_id AND ci.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`A1`.`NAME`) AS `WRITER_PSEUDO_NAME`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `AKA_NAME` AS `A1`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N1`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `RT`.`ROLE` = 'writer' AND `A1`.`PERSON_ID` = `N1`.`ID` AND `N1`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `A1`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`A1`.`NAME`) AS `WRITER_PSEUDO_NAME`, MIN(`T`.`TITLE`) AS `MOVIE_TITLE`
FROM `AKA_NAME` AS `A1`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N1`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `RT`.`role` = 'writer' AND `A1`.`person_id` = `N1`.`id` AND `N1`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `A1`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], WRITER_PSEUDO_NAME=[MIN($0)], MOVIE_TITLE=[MIN($1)])
  LogicalProject(name=[$2], title=[$39])
    LogicalFilter(condition=[AND(=($17, '[us]'), =($37, 'writer'), =($1, $27), =($27, $9), =($10, $38), =($38, $23), =($24, $15), =($14, $36), =($1, $9), =($10, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[aka_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], WRITER_PSEUDO_NAME=[MIN($0)], MOVIE_TITLE=[MIN($1)]), id = 37702486
  BindableProject(name=[$2], title=[$39]), id = 37702485
    BindableJoin(condition=[=($10, $38)], joinType=[inner]), id = 37702484
      BindableJoin(condition=[=($14, $36)], joinType=[inner]), id = 37702483
        BindableJoin(condition=[=($1, $27)], joinType=[inner]), id = 37702481
          BindableJoin(condition=[AND(=($24, $15), =($10, $23))], joinType=[inner]), id = 37702480
            BindableJoin(condition=[true], joinType=[inner]), id = 37702479
              BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37702477
                BindableTableScan(table=[[aka_name]]), id = 37700818
                BindableTableScan(table=[[cast_info]]), id = 37700822
              BindableFilter(condition=[=($2, '[us]')]), id = 37702478
                BindableTableScan(table=[[company_name]]), id = 37700834
            BindableTableScan(table=[[movie_companies]]), id = 37700846
          BindableTableScan(table=[[name]]), id = 37700858
        BindableFilter(condition=[=($1, 'writer')]), id = 37702482
          BindableTableScan(table=[[role_type]]), id = 37700870
      BindableTableScan(table=[[title]]), id = 37700882


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an1.name) AS costume_designer_pseudo, MIN(t.title) AS movie_with_costumes FROM aka_name AS an1, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n1, role_type AS rt, title AS t WHERE cn.country_code ='[us]' AND rt.role ='costume designer' AND an1.person_id = n1.id AND n1.id = ci.person_id AND ci.movie_id = t.id AND t.id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND an1.person_id = ci.person_id AND ci.movie_id = mc.movie_id

[SqlNode]
SELECT MIN(`AN1`.`NAME`) AS `COSTUME_DESIGNER_PSEUDO`, MIN(`T`.`TITLE`) AS `MOVIE_WITH_COSTUMES`
FROM `AKA_NAME` AS `AN1`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N1`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CN`.`COUNTRY_CODE` = '[us]' AND `RT`.`ROLE` = 'costume designer' AND `AN1`.`PERSON_ID` = `N1`.`ID` AND `N1`.`ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `AN1`.`PERSON_ID` = `CI`.`PERSON_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID`

[Valid SqlNode]
SELECT MIN(`AN1`.`NAME`) AS `COSTUME_DESIGNER_PSEUDO`, MIN(`T`.`TITLE`) AS `MOVIE_WITH_COSTUMES`
FROM `AKA_NAME` AS `AN1`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N1`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CN`.`country_code` = '[us]' AND `RT`.`role` = 'costume designer' AND `AN1`.`person_id` = `N1`.`id` AND `N1`.`id` = `CI`.`person_id` AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `AN1`.`person_id` = `CI`.`person_id` AND `CI`.`movie_id` = `MC`.`movie_id`

[Logical plan]
LogicalAggregate(group=[{}], COSTUME_DESIGNER_PSEUDO=[MIN($0)], MOVIE_WITH_COSTUMES=[MIN($1)])
  LogicalProject(name=[$2], title=[$39])
    LogicalFilter(condition=[AND(=($17, '[us]'), =($37, 'costume designer'), =($1, $27), =($27, $9), =($10, $38), =($38, $23), =($24, $15), =($14, $36), =($1, $9), =($10, $23))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalTableScan(table=[[aka_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], COSTUME_DESIGNER_PSEUDO=[MIN($0)], MOVIE_WITH_COSTUMES=[MIN($1)]), id = 37704216
  BindableProject(name=[$2], title=[$39]), id = 37704215
    BindableJoin(condition=[=($10, $38)], joinType=[inner]), id = 37704214
      BindableJoin(condition=[=($14, $36)], joinType=[inner]), id = 37704213
        BindableJoin(condition=[=($1, $27)], joinType=[inner]), id = 37704211
          BindableJoin(condition=[AND(=($24, $15), =($10, $23))], joinType=[inner]), id = 37704210
            BindableJoin(condition=[true], joinType=[inner]), id = 37704209
              BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37704207
                BindableTableScan(table=[[aka_name]]), id = 37702548
                BindableTableScan(table=[[cast_info]]), id = 37702552
              BindableFilter(condition=[=($2, '[us]')]), id = 37704208
                BindableTableScan(table=[[company_name]]), id = 37702564
            BindableTableScan(table=[[movie_companies]]), id = 37702576
          BindableTableScan(table=[[name]]), id = 37702588
        BindableFilter(condition=[=($1, 'costume designer')]), id = 37704212
          BindableTableScan(table=[[role_type]]), id = 37702600
      BindableTableScan(table=[[title]]), id = 37702612


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS character_name, MIN(t.title) AS movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND mc.note IS NOT NULL AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%') AND n.gender ='f' AND n.name LIKE '%Ang%' AND rt.role ='actress' AND t.production_year BETWEEN 2005 AND 2015 AND ci.movie_id = t.id AND t.id = mc.movie_id AND ci.movie_id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND n.id = ci.person_id AND chn.id = ci.person_role_id AND an.person_id = n.id AND an.person_id = ci.person_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`T`.`TITLE`) AS `MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `MC`.`NOTE` IS NOT NULL AND (`MC`.`NOTE` LIKE '%(USA)%' OR `MC`.`NOTE` LIKE '%(worldwide)%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%Ang%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2005 AND 2015 AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `AN`.`PERSON_ID` = `N`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `CHARACTER_NAME`, MIN(`T`.`TITLE`) AS `MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `MC`.`note` IS NOT NULL AND (`MC`.`note` LIKE '%(USA)%' OR `MC`.`note` LIKE '%(worldwide)%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%Ang%' AND `RT`.`role` = 'actress' AND `T`.`production_year` BETWEEN ASYMMETRIC 2005 AND 2015 AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `N`.`id` = `CI`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `AN`.`person_id` = `N`.`id` AND `AN`.`person_id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], CHARACTER_NAME=[MIN($1)], MOVIE=[MIN($2)])
  LogicalProject(name=[$2], name0=[$9], title=[$46])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), IS NOT NULL($33), OR(LIKE($33, '%(USA)%'), LIKE($33, '%(worldwide)%')), =($38, 'f'), LIKE($35, '%Ang%'), =($44, 'actress'), >=($49, 2005), <=($49, 2015), =($17, $45), =($45, $30), =($17, $30), =($31, $22), =($21, $43), =($34, $16), =($8, $18), =($1, $34), =($1, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], CHARACTER_NAME=[MIN($1)], MOVIE=[MIN($2)]), id = 37708373
  BindableProject(name=[$2], name0=[$9], title=[$46]), id = 37708372
    BindableJoin(condition=[=($17, $45)], joinType=[inner]), id = 37708371
      BindableJoin(condition=[=($21, $43)], joinType=[inner]), id = 37708369
        BindableJoin(condition=[=($16, $34)], joinType=[inner]), id = 37708367
          BindableProject(id1=[$12], person_id=[$13], name0=[$14], imdb_index=[$15], name_pcode_cf=[$16], name_pcode_nf0=[$17], surname_pcode=[$18], md5sum0=[$19], id00=[$20], name00=[$21], imdb_index0=[$22], imdb_id0=[$23], name_pcode_nf00=[$24], surname_pcode0=[$25], md5sum00=[$26], id10=[$27], person_id0=[$28], movie_id0=[$29], person_role_id=[$30], note0=[$31], nr_order=[$32], role_id=[$33], id0=[$5], name=[$6], country_code=[$7], imdb_id=[$8], name_pcode_nf=[$9], name_pcode_sf=[$10], md5sum=[$11], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 37708365
            BindableJoin(condition=[=($29, $1)], joinType=[inner]), id = 37708364
              BindableJoin(condition=[=($2, $5)], joinType=[inner]), id = 37708359
                BindableFilter(condition=[OR(LIKE($4, '%(USA)%'), LIKE($4, '%(worldwide)%'))]), id = 37708357
                  BindableTableScan(table=[[movie_companies]]), id = 37704325
                BindableFilter(condition=[=($2, '[us]')]), id = 37708358
                  BindableTableScan(table=[[company_name]]), id = 37704313
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 37708363
                BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 37708362
                  BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37708361
                    BindableTableScan(table=[[aka_name]]), id = 37704285
                    BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 37708360
                      BindableTableScan(table=[[cast_info]]), id = 37704301
                  BindableTableScan(table=[[char_name]]), id = 37704289
          BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%Ang%'))]), id = 37708366
            BindableTableScan(table=[[name]]), id = 37704337
        BindableFilter(condition=[=($1, 'actress')]), id = 37708368
          BindableTableScan(table=[[role_type]]), id = 37704349
      BindableFilter(condition=[SEARCH($4, Sarg[[2005..2015]])]), id = 37708370
        BindableTableScan(table=[[title]]), id = 37704361


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_character, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t WHERE ci.note = '(voice)' AND cn.country_code ='[us]' AND mc.note LIKE '%(200%)%' AND (mc.note LIKE '%(USA)%' OR mc.note LIKE '%(worldwide)%') AND n.gender ='f' AND n.name LIKE '%Angel%' AND rt.role ='actress' AND t.production_year BETWEEN 2007 AND 2010 AND ci.movie_id = t.id AND t.id = mc.movie_id AND ci.movie_id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND n.id = ci.person_id AND chn.id = ci.person_role_id AND an.person_id = n.id AND an.person_id = ci.person_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `VOICED_CHARACTER`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` = '(voice)' AND `CN`.`COUNTRY_CODE` = '[us]' AND `MC`.`NOTE` LIKE '%(200%)%' AND (`MC`.`NOTE` LIKE '%(USA)%' OR `MC`.`NOTE` LIKE '%(worldwide)%') AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%Angel%' AND `RT`.`ROLE` = 'actress' AND `T`.`PRODUCTION_YEAR` BETWEEN ASYMMETRIC 2007 AND 2010 AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `AN`.`PERSON_ID` = `N`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `VOICED_CHARACTER`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` = '(voice)' AND `CN`.`country_code` = '[us]' AND `MC`.`note` LIKE '%(200%)%' AND (`MC`.`note` LIKE '%(USA)%' OR `MC`.`note` LIKE '%(worldwide)%') AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%Angel%' AND `RT`.`role` = 'actress' AND `T`.`production_year` BETWEEN ASYMMETRIC 2007 AND 2010 AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `N`.`id` = `CI`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `AN`.`person_id` = `N`.`id` AND `AN`.`person_id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], VOICED_CHARACTER=[MIN($1)], VOICING_ACTRESS=[MIN($2)], AMERICAN_MOVIE=[MIN($3)])
  LogicalProject(name=[$2], name0=[$9], name2=[$35], title=[$46])
    LogicalFilter(condition=[AND(=($19, '(voice)'), =($24, '[us]'), LIKE($33, '%(200%)%'), OR(LIKE($33, '%(USA)%'), LIKE($33, '%(worldwide)%')), =($38, 'f'), LIKE($35, '%Angel%'), =($44, 'actress'), >=($49, 2007), <=($49, 2010), =($17, $45), =($45, $30), =($17, $30), =($31, $22), =($21, $43), =($34, $16), =($8, $18), =($1, $34), =($1, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], VOICED_CHARACTER=[MIN($1)], VOICING_ACTRESS=[MIN($2)], AMERICAN_MOVIE=[MIN($3)]), id = 37712530
  BindableProject(name=[$2], name0=[$9], name2=[$35], title=[$46]), id = 37712529
    BindableJoin(condition=[=($17, $45)], joinType=[inner]), id = 37712528
      BindableJoin(condition=[=($21, $43)], joinType=[inner]), id = 37712526
        BindableJoin(condition=[=($16, $34)], joinType=[inner]), id = 37712524
          BindableProject(id1=[$12], person_id=[$13], name0=[$14], imdb_index=[$15], name_pcode_cf=[$16], name_pcode_nf0=[$17], surname_pcode=[$18], md5sum0=[$19], id00=[$20], name00=[$21], imdb_index0=[$22], imdb_id0=[$23], name_pcode_nf00=[$24], surname_pcode0=[$25], md5sum00=[$26], id10=[$27], person_id0=[$28], movie_id0=[$29], person_role_id=[$30], note0=[$31], nr_order=[$32], role_id=[$33], id0=[$5], name=[$6], country_code=[$7], imdb_id=[$8], name_pcode_nf=[$9], name_pcode_sf=[$10], md5sum=[$11], id=[$0], movie_id=[$1], company_id=[$2], company_type_id=[$3], note=[$4]), id = 37712522
            BindableJoin(condition=[=($29, $1)], joinType=[inner]), id = 37712521
              BindableJoin(condition=[=($2, $5)], joinType=[inner]), id = 37712516
                BindableFilter(condition=[AND(LIKE($4, '%(200%)%'), OR(LIKE($4, '%(USA)%'), LIKE($4, '%(worldwide)%')))]), id = 37712514
                  BindableTableScan(table=[[movie_companies]]), id = 37708482
                BindableFilter(condition=[=($2, '[us]')]), id = 37712515
                  BindableTableScan(table=[[company_name]]), id = 37708470
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 37712520
                BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 37712519
                  BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37712518
                    BindableTableScan(table=[[aka_name]]), id = 37708442
                    BindableFilter(condition=[=($4, '(voice)')]), id = 37712517
                      BindableTableScan(table=[[cast_info]]), id = 37708458
                  BindableTableScan(table=[[char_name]]), id = 37708446
          BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%Angel%'))]), id = 37712523
            BindableTableScan(table=[[name]]), id = 37708494
        BindableFilter(condition=[=($1, 'actress')]), id = 37712525
          BindableTableScan(table=[[role_type]]), id = 37708506
      BindableFilter(condition=[SEARCH($4, Sarg[[2007..2010]])]), id = 37712527
        BindableTableScan(table=[[title]]), id = 37708518


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_character_name, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND n.gender ='f' AND n.name LIKE '%An%' AND rt.role ='actress' AND ci.movie_id = t.id AND t.id = mc.movie_id AND ci.movie_id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND n.id = ci.person_id AND chn.id = ci.person_role_id AND an.person_id = n.id AND an.person_id = ci.person_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `VOICED_CHARACTER_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `N`.`GENDER` = 'f' AND `N`.`NAME` LIKE '%An%' AND `RT`.`ROLE` = 'actress' AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `AN`.`PERSON_ID` = `N`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `VOICED_CHARACTER_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `N`.`gender` = 'f' AND `N`.`name` LIKE '%An%' AND `RT`.`role` = 'actress' AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `N`.`id` = `CI`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `AN`.`person_id` = `N`.`id` AND `AN`.`person_id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], VOICED_CHARACTER_NAME=[MIN($1)], VOICING_ACTRESS=[MIN($2)], AMERICAN_MOVIE=[MIN($3)])
  LogicalProject(name=[$2], name0=[$9], name2=[$35], title=[$46])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($38, 'f'), LIKE($35, '%An%'), =($44, 'actress'), =($17, $45), =($45, $30), =($17, $30), =($31, $22), =($21, $43), =($34, $16), =($8, $18), =($1, $34), =($1, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], VOICED_CHARACTER_NAME=[MIN($1)], VOICING_ACTRESS=[MIN($2)], AMERICAN_MOVIE=[MIN($3)]), id = 37716574
  BindableProject(name=[$2], name0=[$9], name2=[$35], title=[$46]), id = 37716573
    BindableJoin(condition=[=($17, $45)], joinType=[inner]), id = 37716572
      BindableJoin(condition=[=($21, $43)], joinType=[inner]), id = 37716571
        BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], name_pcode_nf0=[$12], surname_pcode0=[$13], md5sum0=[$14], id1=[$15], person_id0=[$16], movie_id=[$17], person_role_id=[$18], note=[$19], nr_order=[$20], role_id=[$21], id2=[$22], name1=[$23], country_code=[$24], imdb_id0=[$25], name_pcode_nf1=[$26], name_pcode_sf=[$27], md5sum1=[$28], id4=[$38], movie_id0=[$39], company_id=[$40], company_type_id=[$41], note0=[$42], id3=[$29], name2=[$30], imdb_index1=[$31], imdb_id1=[$32], gender=[$33], name_pcode_cf0=[$34], name_pcode_nf2=[$35], surname_pcode1=[$36], md5sum2=[$37]), id = 37716569
          BindableJoin(condition=[AND(=($17, $39), =($40, $22))], joinType=[inner]), id = 37716568
            BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id0=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], name_pcode_nf0=[$12], surname_pcode0=[$13], md5sum0=[$14], id1=[$15], person_id0=[$16], movie_id=[$17], person_role_id=[$18], note=[$19], nr_order=[$20], role_id=[$21], id3=[$31], name2=[$32], country_code=[$33], imdb_id1=[$34], name_pcode_nf2=[$35], name_pcode_sf=[$36], md5sum2=[$37], id2=[$22], name1=[$23], imdb_index1=[$24], imdb_id0=[$25], gender=[$26], name_pcode_cf0=[$27], name_pcode_nf1=[$28], surname_pcode1=[$29], md5sum1=[$30]), id = 37716567
              BindableJoin(condition=[true], joinType=[inner]), id = 37716566
                BindableProject(id1=[$16], person_id0=[$17], name0=[$18], imdb_index0=[$19], name_pcode_cf0=[$20], name_pcode_nf0=[$21], surname_pcode0=[$22], md5sum0=[$23], id00=[$24], name00=[$25], imdb_index00=[$26], imdb_id0=[$27], name_pcode_nf00=[$28], surname_pcode00=[$29], md5sum00=[$30], id0=[$9], person_id=[$10], movie_id=[$11], person_role_id=[$12], note=[$13], nr_order=[$14], role_id=[$15], id=[$0], name=[$1], imdb_index=[$2], imdb_id=[$3], gender=[$4], name_pcode_cf=[$5], name_pcode_nf=[$6], surname_pcode=[$7], md5sum=[$8]), id = 37716564
                  BindableProject(id=[$15], name=[$16], imdb_index=[$17], imdb_id=[$18], gender=[$19], name_pcode_cf=[$20], name_pcode_nf=[$21], surname_pcode=[$22], md5sum=[$23], id0=[$24], person_id=[$25], movie_id=[$26], person_role_id=[$27], note=[$28], nr_order=[$29], role_id=[$30], id1=[$0], person_id0=[$1], name0=[$2], imdb_index0=[$3], name_pcode_cf0=[$4], name_pcode_nf0=[$5], surname_pcode0=[$6], md5sum0=[$7], id00=[$8], name00=[$9], imdb_index00=[$10], imdb_id0=[$11], name_pcode_nf00=[$12], surname_pcode00=[$13], md5sum00=[$14]), id = 37716563
                    BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$24], name1=[$25], imdb_index1=[$26], imdb_id0=[$27], name_pcode_nf1=[$28], surname_pcode1=[$29], md5sum1=[$30], id0=[$8], name0=[$9], imdb_index0=[$10], imdb_id=[$11], gender=[$12], name_pcode_cf0=[$13], name_pcode_nf0=[$14], surname_pcode0=[$15], md5sum0=[$16], id00=[$17], person_id0=[$18], movie_id=[$19], person_role_id=[$20], note=[$21], nr_order=[$22], role_id=[$23]), id = 37716562
                      BindableJoin(condition=[=($24, $20)], joinType=[inner]), id = 37716561
                        BindableJoin(condition=[=($1, $18)], joinType=[inner]), id = 37716560
                          BindableTableScan(table=[[aka_name]]), id = 37712599
                          BindableJoin(condition=[=($10, $0)], joinType=[inner]), id = 37716559
                            BindableFilter(condition=[AND(=($4, 'f'), LIKE($1, '%An%'))]), id = 37716557
                              BindableTableScan(table=[[name]]), id = 37712651
                            BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 37716558
                              BindableTableScan(table=[[cast_info]]), id = 37712615
                        BindableTableScan(table=[[char_name]]), id = 37712603
                BindableFilter(condition=[=($2, '[us]')]), id = 37716565
                  BindableTableScan(table=[[company_name]]), id = 37712627
            BindableTableScan(table=[[movie_companies]]), id = 37712639
        BindableFilter(condition=[=($1, 'actress')]), id = 37716570
          BindableTableScan(table=[[role_type]]), id = 37712663
      BindableTableScan(table=[[title]]), id = 37712675


------------------------------------------------------------------------------------------------------------------
[SQL Query]
SELECT MIN(an.name) AS alternative_name, MIN(chn.name) AS voiced_char_name, MIN(n.name) AS voicing_actress, MIN(t.title) AS american_movie FROM aka_name AS an, char_name AS chn, cast_info AS ci, company_name AS cn, movie_companies AS mc, name AS n, role_type AS rt, title AS t WHERE ci.note IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND cn.country_code ='[us]' AND n.gender ='f' AND rt.role ='actress' AND ci.movie_id = t.id AND t.id = mc.movie_id AND ci.movie_id = mc.movie_id AND mc.company_id = cn.id AND ci.role_id = rt.id AND n.id = ci.person_id AND chn.id = ci.person_role_id AND an.person_id = n.id AND an.person_id = ci.person_id

[SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `VOICED_CHAR_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`NOTE` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`COUNTRY_CODE` = '[us]' AND `N`.`GENDER` = 'f' AND `RT`.`ROLE` = 'actress' AND `CI`.`MOVIE_ID` = `T`.`ID` AND `T`.`ID` = `MC`.`MOVIE_ID` AND `CI`.`MOVIE_ID` = `MC`.`MOVIE_ID` AND `MC`.`COMPANY_ID` = `CN`.`ID` AND `CI`.`ROLE_ID` = `RT`.`ID` AND `N`.`ID` = `CI`.`PERSON_ID` AND `CHN`.`ID` = `CI`.`PERSON_ROLE_ID` AND `AN`.`PERSON_ID` = `N`.`ID` AND `AN`.`PERSON_ID` = `CI`.`PERSON_ID`

[Valid SqlNode]
SELECT MIN(`AN`.`NAME`) AS `ALTERNATIVE_NAME`, MIN(`CHN`.`NAME`) AS `VOICED_CHAR_NAME`, MIN(`N`.`NAME`) AS `VOICING_ACTRESS`, MIN(`T`.`TITLE`) AS `AMERICAN_MOVIE`
FROM `AKA_NAME` AS `AN`,
`CHAR_NAME` AS `CHN`,
`CAST_INFO` AS `CI`,
`COMPANY_NAME` AS `CN`,
`MOVIE_COMPANIES` AS `MC`,
`NAME` AS `N`,
`ROLE_TYPE` AS `RT`,
`TITLE` AS `T`
WHERE `CI`.`note` IN ('(voice)', '(voice: Japanese version)', '(voice) (uncredited)', '(voice: English version)') AND `CN`.`country_code` = '[us]' AND `N`.`gender` = 'f' AND `RT`.`role` = 'actress' AND `CI`.`movie_id` = `T`.`id` AND `T`.`id` = `MC`.`movie_id` AND `CI`.`movie_id` = `MC`.`movie_id` AND `MC`.`company_id` = `CN`.`id` AND `CI`.`role_id` = `RT`.`id` AND `N`.`id` = `CI`.`person_id` AND `CHN`.`id` = `CI`.`person_role_id` AND `AN`.`person_id` = `N`.`id` AND `AN`.`person_id` = `CI`.`person_id`

[Logical plan]
LogicalAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], VOICED_CHAR_NAME=[MIN($1)], VOICING_ACTRESS=[MIN($2)], AMERICAN_MOVIE=[MIN($3)])
  LogicalProject(name=[$2], name0=[$9], name2=[$35], title=[$46])
    LogicalFilter(condition=[AND(OR(=($19, '(voice)'), =($19, '(voice: Japanese version)'), =($19, '(voice) (uncredited)'), =($19, '(voice: English version)')), =($24, '[us]'), =($38, 'f'), =($44, 'actress'), =($17, $45), =($45, $30), =($17, $30), =($31, $22), =($21, $43), =($34, $16), =($8, $18), =($1, $34), =($1, $16))])
      LogicalJoin(condition=[true], joinType=[inner])
        LogicalJoin(condition=[true], joinType=[inner])
          LogicalJoin(condition=[true], joinType=[inner])
            LogicalJoin(condition=[true], joinType=[inner])
              LogicalJoin(condition=[true], joinType=[inner])
                LogicalJoin(condition=[true], joinType=[inner])
                  LogicalJoin(condition=[true], joinType=[inner])
                    LogicalTableScan(table=[[aka_name]])
                    LogicalTableScan(table=[[char_name]])
                  LogicalTableScan(table=[[cast_info]])
                LogicalTableScan(table=[[company_name]])
              LogicalTableScan(table=[[movie_companies]])
            LogicalTableScan(table=[[name]])
          LogicalTableScan(table=[[role_type]])
        LogicalTableScan(table=[[title]])


[Physical plan]
BindableAggregate(group=[{}], ALTERNATIVE_NAME=[MIN($0)], VOICED_CHAR_NAME=[MIN($1)], VOICING_ACTRESS=[MIN($2)], AMERICAN_MOVIE=[MIN($3)]), id = 37720614
  BindableProject(name=[$2], name0=[$9], name2=[$35], title=[$46]), id = 37720613
    BindableJoin(condition=[=($17, $45)], joinType=[inner]), id = 37720612
      BindableJoin(condition=[=($21, $43)], joinType=[inner]), id = 37720611
        BindableJoin(condition=[=($16, $34)], joinType=[inner]), id = 37720609
          BindableJoin(condition=[AND(=($17, $30), =($31, $22))], joinType=[inner]), id = 37720607
            BindableJoin(condition=[true], joinType=[inner]), id = 37720606
              BindableProject(id=[$0], person_id=[$1], name=[$2], imdb_index=[$3], name_pcode_cf=[$4], name_pcode_nf=[$5], surname_pcode=[$6], md5sum=[$7], id1=[$15], name0=[$16], imdb_index0=[$17], imdb_id=[$18], name_pcode_nf0=[$19], surname_pcode0=[$20], md5sum0=[$21], id0=[$8], person_id0=[$9], movie_id=[$10], person_role_id=[$11], note=[$12], nr_order=[$13], role_id=[$14]), id = 37720604
                BindableJoin(condition=[=($15, $11)], joinType=[inner]), id = 37720603
                  BindableJoin(condition=[=($1, $9)], joinType=[inner]), id = 37720602
                    BindableTableScan(table=[[aka_name]]), id = 37716643
                    BindableFilter(condition=[SEARCH($4, Sarg['(voice)':VARCHAR, '(voice) (uncredited)':VARCHAR, '(voice: English version)':VARCHAR, '(voice: Japanese version)':VARCHAR]:VARCHAR)]), id = 37720601
                      BindableTableScan(table=[[cast_info]]), id = 37716659
                  BindableTableScan(table=[[char_name]]), id = 37716647
              BindableFilter(condition=[=($2, '[us]')]), id = 37720605
                BindableTableScan(table=[[company_name]]), id = 37716671
            BindableTableScan(table=[[movie_companies]]), id = 37716683
          BindableFilter(condition=[=($4, 'f')]), id = 37720608
            BindableTableScan(table=[[name]]), id = 37716695
        BindableFilter(condition=[=($1, 'actress')]), id = 37720610
          BindableTableScan(table=[[role_type]]), id = 37716707
      BindableTableScan(table=[[title]]), id = 37716719


------------------------------------------------------------------------------------------------------------------
113 out of 113 queries successful
